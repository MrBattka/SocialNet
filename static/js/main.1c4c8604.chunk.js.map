{"version":3,"sources":["components/Masseges/Messages.module.css","assets/img/preloader.svg","components/Common/Preloader/Preloader.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","assets/img/logout.svg","components/Nav/Nav.module.css","components/Users/Users.module.css","components/Profile/MyPost/MyPost.module.css","components/LoginPage/LoginPage.module.css","api/api.js","Redux/auth-reduser.ts","Redux/dialogs-reduser.js","Redux/profile-reduser.ts","utils/objects-helper.js","Redux/users-reduser.ts","Redux/app-reduser.ts","Redux/redux-store.js","components/Nav/Nav.jsx","hoc/withAuthLocation.jsx","components/Masseges/DilogItem/DialogItem.jsx","components/Masseges/Message/Message.jsx","utils/validators/validators.js","components/Common/formsControls/formControls.js","components/Masseges/MessageForm/MessageForm.jsx","components/Masseges/Messages.jsx","components/Masseges/MessagesContainer.jsx","components/Common/Paginator/Paginator.js","components/Users/User/User.jsx","components/Users/Users.jsx","components/Common/Preloader/Preloader.js","Redux/users-selector.js","components/Users/UsersContainer.jsx","components/Profile/AdditionalInformation/AdditionalInformation.jsx","components/Profile/Posts/Posts.jsx","components/Profile/MyPost/MyPostForm/MyPostForm.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Common/Lorem/Lorem.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Common/LogoutSvg/LogoutSvg.js","components/AuthComponent/LogoutForm.jsx","components/AuthComponent/AuthComponent.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/LoginPage/LoginForm/LoginForm.jsx","components/LoginPage/LoginPage.jsx","components/LoginPage/LoginPageContainer.jsx","App.js","index.js","components/AuthComponent/AuthComponent.module.css","components/Common/Paginator/Paginator.module.css","assets/img/user.jpg","components/Common/formsControls/formControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/AdditionalInformation/AdditionalInformation.module.css","components/Header/Header.module.css","components/Profile/Posts/Posts.module.css"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","requestGetUsers","currentPage","pageSize","get","follow","userId","post","id","unfollow","delete","getUserProfile","getProfileStatus","updateProfileStatus","status","put","authAPI","email","password","rememberMe","captcha","securityAPI","initialState","login","isAuth","captchaUrl","setAuthUserData","type","payload","getCaptchaUrl","getAuthUserData","dispatch","response","data","resultCode","authReduser","state","action","dialogs","name","messages","message","window","dialogsReduser","body","newMessageBody","posts","newPostText","profile","isFetching","setProfileStatus","profileReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","ACFollowUnfollow","usersReduser","followed","count","filter","initialized","appReduser","reducers","combineReducers","profilePage","dialogsPage","dialogsReducer","usersPage","auth","form","formReduser","app","store","createStore","composeWithDevTools","applyMiddleware","thankMiddleware","connect","props","className","classes","nav","link","navData","isActive","active","item","to","href","line","settings","withAuthLocation","Component","replace","DialogItem","path","dialog","DialogItem__link","Message","required","value","maxLengthCreator","maxLength","length","FormControl","meta","touched","error","children","hasError","formControl","formError","submitFormonEnter","e","keyCode","preventDefault","Textarea","input","restProps","child","onSubmit","Input","createField","placeholder","validators","component","text","fieldControl","Field","validate","maxLength100","MessageFormRedux","reduxForm","textMessage","handleSubmit","textarea","autoFocus","btn","btnSend","button","Messages","dialogsElement","d","key","messagesElement","m","wrapper__messages","title","stick","flexbox","wrapper__messanger","messanger","values","sendMessage","compose","newMessageText","sendMessageAC","Paginator","onPageChanged","portionSize","useState","portionNumber","setPortionNumber","pages","pagesCount","Math","ceil","i","push","useEffect","leftPortionPageNumber","rightPortionPageNumber","numberPage","wrapperPrev","portion","onClick","p","wrapperPage","selectedPage","User","wrapper","wrapper__avatar","user","avatar","src","photos","small","userPhoto","btn__wrapper","disabled","some","btn__unfollow","btn__follow","wrapper__info","nickName","userName__link","location","Users","Preloader","loader","preloader","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","page","totalCount","bind","pageNumber","Contact","wrapperContact","contactTitle","contactValue","AdditionalInformation","editMode","setEditMode","wrapperAddInf","lookingForAJob","lookingForAJobDescription","fullName","wrapperContacts","editModeActive","Object","keys","contacts","Posts","MyPostReduxForm","setText","refForm","useRef","ref","textarea__wrapper","onChange","target","MyPosts","postsElement","addPost","MyPostsContainer","addPostAC","Lorem","ProfileStatus","updateStatusEnter","React","createRef","setStatus","deactivateEditeMode","aboutMe__editor","current","addEventListener","keyPress","once","currentTarget","onBlur","defaultValue","onMouseDown","ProfileInfo","profile__wrapper","profile__img","large","profile__info","userName","about__user","Profile","content","authUserId","getProfile","useParams","LogoutSvg","logout__img","logout","LogoutReduxForm","login__block","login__form","btn__logout","Header","header__wrapper","header","logo","logo__text","LoginReduxForm","formSummaryError","submit","url","stopSubmit","_error","wrapperLoginPage","titleLogin","loginTitle","formData","LoginPageContainer","LoginPage","initialize","initializeApp","promise","Promise","all","then","useNavigate","element","MessagesContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c4c8604.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogItem__link\":\"Messages_DialogItem__link__375Kj\",\"wrapper__messages\":\"Messages_wrapper__messages__3wpWW\",\"stick\":\"Messages_stick__LngQ1\",\"title\":\"Messages_title__3qInT\",\"dialogs\":\"Messages_dialogs__3qFZt\",\"dialog\":\"Messages_dialog__3sjgR\",\"flexbox\":\"Messages_flexbox__3NCYH\",\"wrapper__messanger\":\"Messages_wrapper__messanger__1Wboq\",\"message\":\"Messages_message__2zDQy\",\"textMessage\":\"Messages_textMessage__2uaSf\",\"textarea\":\"Messages_textarea__2lLX2\",\"btn\":\"Messages_btn__3DTSB\",\"btnSend\":\"Messages_btnSend__2ji_v\",\"button\":\"Messages_button__I4nXq\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.ef886190.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__aA5wi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMe__editor\":\"ProfileStatus_aboutMe__editor__1BhQl\"};","module.exports = __webpack_public_path__ + \"static/media/logout.6517ee94.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1_JSp\",\"settings\":\"Nav_settings__1K9ZG\",\"line\":\"Nav_line__1F-rl\",\"link\":\"Nav_link__2pFvk\",\"active\":\"Nav_active__33sVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__me3Re\",\"users\":\"Users_users__34yhM\",\"btn__wrapper\":\"Users_btn__wrapper__3n4D-\",\"btn__follow\":\"Users_btn__follow__yMUfQ\",\"btn__unfollow\":\"Users_btn__unfollow__14Z8o\",\"btn__follow__click\":\"Users_btn__follow__click__1zRZt\",\"wrapper__avatar\":\"Users_wrapper__avatar__28eI8\",\"wrapper__info\":\"Users_wrapper__info__SEIFs\",\"avatar\":\"Users_avatar__2b-dr\",\"nickName\":\"Users_nickName__1wKLu\",\"status\":\"Users_status__3yRiB\",\"location\":\"Users_location__2Tc5o\",\"userName__link\":\"Users_userName__link__3jYpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPost_wrapper__2I8HV\",\"textarea\":\"MyPost_textarea__3Rgef\",\"btn__wrapper\":\"MyPost_btn__wrapper__3UdOx\",\"btn\":\"MyPost_btn__1njIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLoginPage\":\"LoginPage_wrapperLoginPage__1_nDD\",\"titleLogin\":\"LoginPage_titleLogin__33cfj\",\"formSummaryError\":\"LoginPage_formSummaryError__1d6MP\",\"form\":\"LoginPage_form__fQVBs\",\"submit\":\"LoginPage_submit__3vppF\",\"error\":\"LoginPage_error__18S5h\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: { \"API-KEY\": \"f875b6a1-5fef-48ce-a963-4e6042f223a9\" }\r\n})\r\n\r\nexport const usersAPI = {\r\n    requestGetUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId.id}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId.id}`)\r\n    },\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getProfileStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateProfileStatus(status) {\r\n        return instance.put(`profile/status`, { status })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrlData() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}","import { stopSubmit } from \"redux-form\"\r\nimport { authAPI, securityAPI } from \"../api/api\"\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst OUT_AUTH_USER_DATA = 'OUT_AUTH_USER_DATA'\r\nconst GET_CAPTCHA_URL = 'GET_CAPTCHA_URL'\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    rememberMe: boolean,\r\n    isAuth: boolean,\r\n    captchaUrl: null\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    rememberMe: false,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case OUT_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype PayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataType = {\r\n    type: typeof SET_AUTH_USER_DATA\r\n    payload: PayloadType\r\n}\r\nexport const setAuthUserData = (userId: number, email: string, login: string, isAuth: boolean): SetAuthUserDataType =>\r\n    ({ type: SET_AUTH_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\ntype OutAuthUserDataType = {\r\n    type: typeof OUT_AUTH_USER_DATA\r\n    payload: PayloadType\r\n}\r\nexport const outAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): OutAuthUserDataType =>\r\n    ({ type: OUT_AUTH_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\ntype GetCaptchaUrlType = {\r\n    type: typeof GET_CAPTCHA_URL\r\n    payload: object | null\r\n}\r\nexport const getCaptchaUrl = (captchaUrl: object): GetCaptchaUrlType => ({ type: GET_CAPTCHA_URL, payload: { captchaUrl } })\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrlData = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrlData()\r\n    const captchaUrl = response.data.url\r\n    dispatch(getCaptchaUrl(captchaUrl))\r\n}\r\n\r\nexport const login = (email: string | null, password: string | null, rememberMe: boolean, captcha: any) =>\r\n    async (dispatch: any) => {\r\n        let response = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrlData())\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\"\r\n            dispatch(stopSubmit(\"login\", { _error: message }))\r\n        }\r\n    }\r\n\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(outAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReduser","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Nick 1' },\r\n    { id: 2, name: 'Nick 2' },\r\n    { id: 3, name: 'Nick 3' },\r\n    { id: 4, name: 'Nick 4' },\r\n    { id: 5, name: 'Nick 5' },\r\n  ],\r\n  messages: [\r\n    { message: 'Hi, world' }\r\n  ]\r\n}\r\n\r\nwindow.initialState = initialState;\r\n\r\nconst dialogsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: 1, message: body}] \r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageAC = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\nexport default dialogsReduser;","import { type } from 'os';\r\nimport { usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\ntype PostType = {\r\n  id: number\r\n  message: string\r\n}\r\ntype ContactsType = {\r\n  github: string\r\n  vk: string\r\n  facebook: string\r\n  instagram: string\r\n  twitter: string\r\n  website: string\r\n  youtube: string\r\n  mainLink: string\r\n}\r\ntype PhotosType = {\r\n  small: string | null\r\n  large: string | null\r\n}\r\ntype ProfileType = {\r\n  userId: number\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string\r\n  fullName: string\r\n  contacts: ContactsType\r\n  photos: PhotosType\r\n}\r\n\r\nlet initialState = {\r\n  posts: [] as Array<PostType>,\r\n  newPostText: '',\r\n  profile: null as ProfileType | null,\r\n  isFetching: true,\r\n  status: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let body = action.newPostText\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, { id: 1, message: body }]\r\n      }\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype AddPostACType = {\r\n  type: typeof ADD_POST\r\n  newPostText: string\r\n}\r\ntype SetUserProfileType = {\r\n  type: typeof SET_USER_PROFILE\r\n  profile: ProfileType\r\n}\r\ntype SetProfileStatusType = {\r\n  type: typeof SET_STATUS\r\n  status: string\r\n}\r\nexport const addPostAC = (newPostText: string): AddPostACType => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => ({ type: SET_USER_PROFILE, profile })\r\nexport const setProfileStatus = (status: string): SetProfileStatusType => ({ type: SET_STATUS, status })\r\n\r\nexport const getProfile = (userId: number) => async (dispatch: any) => {\r\n  let response = await usersAPI.getUserProfile(userId)\r\n  dispatch(setUserProfile(response.data))\r\n}\r\nexport const getProfileStatus = (userId: number) => async (dispatch: any) => {\r\n  let response = await usersAPI.getProfileStatus(userId)\r\n  dispatch(setProfileStatus(response.data))\r\n}\r\nexport const updateProfileStatus = (status: string) => async (dispatch: any) => {\r\n  let response = await usersAPI.updateProfileStatus(status)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setProfileStatus(status))\r\n  }\r\n}\r\n\r\nexport default profileReducer;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u\r\n    })\r\n} ","import { usersAPI } from \"../api/api\"\r\nimport { updateObjectInArray } from \"../utils/objects-helper\"\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [null]\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersReduser = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype FollowSuccessType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\ntype UnfollowSuccessType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: string\r\n}\r\ntype SetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\ntype ToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\ntype ToggleFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\nexport const followSuccess = (userId: number): FollowSuccessType => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessType => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users: string): SetUsersType => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageType => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountType => \r\n    ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingType => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressType => \r\n    ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestGetUsers = (page: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    let response = await usersAPI.requestGetUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items))\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: {id: number}, apiMethod: any, ACFollowUnfollow: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId.id))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(ACFollowUnfollow(userId.id))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId.id))\r\n}\r\n\r\nexport const follow = (userId: {id: number}) => async (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId: {id: number}) => async (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport default usersReduser;","import { getAuthUserData } from \"./auth-reduser\"\r\n\r\nconst INITIALIZED__ACCESS = \"INITIALIZED__ACCESS\" \r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED__ACCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitializedSuccessType = {\r\n    type: typeof INITIALIZED__ACCESS\r\n}\r\nexport const initializedSuccess = (): InitializedSuccessType => ({ type: INITIALIZED__ACCESS })\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())  \r\n        })\r\n}\r\n\r\nexport default appReduser","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authReduser from \"./auth-reduser\";\r\nimport dialogsReducer from \"./dialogs-reduser\";\r\nimport profileReducer from \"./profile-reduser\";\r\nimport usersReduser from \"./users-reduser\";\r\nimport thankMiddleware from \"redux-thunk\";\r\nimport { reducer as formReduser } from \"redux-form\";\r\nimport appReduser from \"./app-reduser\";\r\nimport { composeWithDevTools } from \"@redux-devtools/extension\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReduser,\r\n    auth: authReduser,\r\n    form: formReduser,\r\n    app: appReduser\r\n});\r\n\r\nlet store = createStore(reducers,\r\n    composeWithDevTools(applyMiddleware(thankMiddleware)))\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Nav.module.css';\r\n\r\nfunction Nav(props) {\r\n    // {`/profile/${userId}`}\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.link}>\r\n                <NavLink className={ navData => navData.isActive ? classes.active : classes.item } to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <NavLink className={ navData => navData.isActive ? classes.active : classes.item } to=\"/messages\">Messages</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <NavLink className={ navData => navData.isActive ? classes.active : classes.item } to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <a className={classes.item} href=\"#\">Music</a>\r\n            </div>\r\n            <div className={classes.line}></div>\r\n            <div className={classes.link}>\r\n                <a className={classes.settings} href=\"#\">Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userId: state.usersPage.profile\r\n})\r\n\r\nexport default connect(mapStateToProps)(Nav);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport const withAuthLocation = (Component) => {\r\n    const mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    const LocationComponent = (props) => {\r\n        if (!props.isAuth) {\r\n            return <Navigate replace to={\"/login\"} />\r\n        }\r\n        return <Component {...props} /> \r\n    }\r\n    const ConnectedAuthLocation = connect(mapStateToProps)(LocationComponent)\r\n    return ConnectedAuthLocation\r\n}","import classes from './../Messages.module.css';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/messages/' + props.id;\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink className={classes.DialogItem__link} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogItem;","import classes from './../Messages.module.css';\r\nimport React from 'react';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","export const required = value => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport classes from \"./formControls.module.css\";\r\n\r\nexport const FormControl = ({ meta: {touched, error}, children }) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span className={classes.formError}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst submitFormonEnter = (e) => {\r\n    if (e.keyCode === 13) {\r\n        e.preventDefault()\r\n    }\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea onSubmit={submitFormonEnter} {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div className={classes.fieldControl}>\r\n        <Field placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props} /> <span className={classes.rememberMe}>{text}</span>\r\n    </div>\r\n)\r\n","import React from \"react\";\r\nimport classes from \"../Messages.module.css\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../Common/formsControls/formControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <div className={classes.textMessage}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div >\r\n                    <Field className={classes.textarea} component={Textarea}\r\n                        name=\"newMessageBody\" placeholder=\"Enter your message\" autoFocus\r\n                        validate={[required, maxLength100]}  />\r\n                </div>\r\n                <div className={classes.btn}>\r\n                    <div className={classes.btnSend}>\r\n                        <button className={classes.button}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const MessageFormRedux = reduxForm({ form: \"dilogAddMessageForm\" })(MessageForm)","import classes from './Messages.module.css';\r\nimport React from 'react';\r\nimport DialogItem from './DilogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { MessageFormRedux } from './MessageForm/MessageForm';\r\n\r\nconst Messages = (props) => {\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    let dialogsElement = props.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElement = props.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n    return (\r\n\r\n        <div className={classes.wrapper__messages}>\r\n\r\n            <h2 className={classes.title}>Dialogs</h2>\r\n            <div className={classes.dialogs}>\r\n                {dialogsElement}\r\n            </div>\r\n            <span className={classes.stick}></span>\r\n            <div className={classes.flexbox}>\r\n                <div className={classes.wrapper__messanger}>\r\n                    <div className={classes.messanger}>\r\n                        {messagesElement}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <MessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Messages;","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthLocation } from \"../../hoc/withAuthLocation\";\r\nimport { sendMessageAC } from \"../../Redux/dialogs-reduser\";\r\nimport Messages from \"./Messages\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageAC(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthLocation\r\n)(Messages)","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({ totalUsersCount, pageSize, onPageChanged, currentPage, portionSize = 15 }) => {\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    let pages = []\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    for (let i = 1; i <= pagesCount; i++) pages.push(i)\r\n    \r\n    useEffect(() => {\r\n        setPortionNumber(Math.ceil(currentPage / portionSize))\r\n    }, [currentPage])\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const selectedNextPortion = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n        onPageChanged(currentPage + 15)\r\n    }\r\n\r\n    const selectedPrevPortion = () => {\r\n        setPortionNumber(portionNumber + 1)\r\n        onPageChanged(currentPage - 15)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.numberPage}>\r\n            <div className={classes.wrapperPrev}> {portionNumber > 1 &&\r\n                <button className={classes.portion} onClick={selectedPrevPortion}><a href=\"#top\">prev</a></button>} </div>\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <div\r\n                        onClick={(e) => { onPageChanged(p) }} className={classes.wrapperPage} key={p.id}>\r\n                        <button className={currentPage === p ? classes.selectedPage : \"\"}><a href=\"#top\">{p}</a></button></div>\r\n                })\r\n            }\r\n            <button className={classes.portion} onClick={selectedNextPortion}><a href=\"#top\">next</a></button>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"../Users.module.css\";\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.wrapper__avatar}>\r\n                <div>\r\n                    <NavLink to={\"/profile/\" + props.user.id}>\r\n                        <img className={classes.avatar} src={props.user.photos.small != null ? props.user.photos.small : userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={classes.btn__wrapper}>\r\n                    {props.user.followed ? <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                        className={classes.btn__unfollow} onClick={() => { props.unfollow(props.user) }}>Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                            className={classes.btn__follow} onClick={() => { props.follow(props.user) }}>Follow</button>}\r\n                </div>\r\n            </div>\r\n            <div className={classes.wrapper__info}>\r\n                <div>\r\n                    <div className={classes.nickName}>\r\n                        <NavLink to={\"/profile/\" + props.user.id} className={classes.userName__link}>{props.user.name}</NavLink>\r\n                    </div>\r\n                    <div className={classes.status}>{props.user.status}</div>\r\n                </div>\r\n                <div className={classes.location}>\r\n                    <div>{/*u.location.country*/ \"USA,\"}</div>\r\n                    <div>{/*\"u.location.city\"*/ \"New York\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React from \"react\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\n\r\nconst Users = (props) => {\r\n    return <div>\r\n        <a name='top'></a>\r\n        {props.users.map(u => <User user={u} key={u.id} followed={props.followed} followingInProgress={props.followingInProgress}\r\n                                    unfollow={props.unfollow} follow={props.follow} />)}\r\n        <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize} \r\n                   currentPage={props.currentPage} onPageChanged={props.onPageChanged} />\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport preloader from '../../../assets/img/preloader.svg'\r\nimport classes from './Preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={classes.loader}>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import { createSelector } from \"reselect\"\r\n\r\nconst getUsersArray = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersArray, \r\n    (users) => {\r\n        return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from './Users.module.css'\r\nimport { setCurrentPage, toggleFollowingProgress, requestGetUsers, follow, unfollow } from \"../../Redux/users-reduser\";\r\nimport Users from './Users'\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport { useEffect } from \"react\";\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from \"../../Redux/users-selector\";\r\n\r\nconst UsersContainer = (props) => {\r\n    useEffect(() => {\r\n        props.requestGetUsers(props.currentPage, props.pageSize)\r\n    }, [])\r\n    const onPageChanged = (pageNumber) => {\r\n        props.requestGetUsers(pageNumber, props.pageSize)\r\n    }\r\n    \r\n    return (<>\r\n        <span className={classes.users}>Users:</span>\r\n        {props.isFetching ? <Preloader /> : <Users\r\n            totalUsersCount={props.totalUsersCount}\r\n            pageSize={props.pageSize}\r\n            users={props.users}\r\n            unfollow={props.unfollow}\r\n            follow={props.follow}\r\n            onPageChanged={onPageChanged}\r\n            currentPage={props.currentPage}\r\n            followingInProgress={props.followingInProgress} />}\r\n    </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default\r\n    connect(mapStateToProps,\r\n        { setCurrentPage, toggleFollowingProgress, requestGetUsers, follow, unfollow })(UsersContainer)","import React, { useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport classes from './AdditionalInformation.module.css';\r\n\r\nconst AdditionalInformation = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const activetedMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapperAddInf}>\r\n            <div>\r\n                <p><b>lookingForAJob:</b> {props.profile.lookingForAJob ? \"Yes\" : \"No\"}</p>\r\n            </div>\r\n            {props.profile.lookingForAJob &&\r\n                <div>\r\n                    <p><b>My profissional skill:</b> {props.profile.lookingForAJobDescription}</p>\r\n                </div>\r\n            }\r\n            <div>\r\n                <p><b>Full name:</b> {props.profile.fullName}</p>\r\n            </div>\r\n            <div className={classes.wrapperContacts}>\r\n                <b>Contacts:</b>\r\n                <span onClick={activetedMode}>\r\n                        <p className={editMode ? classes.editModeActive : null}>&#5125;</p>\r\n                </span>\r\n                {editMode && Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key}\r\n                        contactValue={props.profile.contacts[key]} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = (props) => {\r\n\r\n    return (\r\n        <div className={classes.wrapperContact}>\r\n            <p><b>{props.contactTitle}:</b> {!props.contactValue ? \"-\" : props.contactValue}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdditionalInformation","import classes from './Posts.module.css';\r\nimport React from 'react';\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\n\r\nfunction Posts(props) {\r\n    return (\r\n        <div>\r\n            <div className={classes.wrapper}>\r\n                <div className={classes.avatar}>\r\n                    <img src={props.profile.photos.small != null ? props.profile.photos.small : userPhoto} />\r\n                </div>\r\n                <div className={classes.text}>\r\n                    {props.post}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React, {useRef, useState} from \"react\";\r\nimport classes from \"../MyPost.module.css\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, required } from \"../../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../Common/formsControls/formControls\";\r\nimport { createField } from '../../../Common/formsControls/formControls'\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst MyPostForm = (props) => {\r\n    const [text, setText] = useState('')\r\n    const refForm = useRef()\r\n\r\n    // let deletePostText = (value) => {\r\n    //     props.newPostText(value.newPostText = \"\")\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <form ref={refForm} onSubmit={props.handleSubmit}>\r\n                <div className={classes.textarea__wrapper}>\r\n                    <Field component={Textarea} name=\"newPostText\" className={classes.textarea}\r\n                        validate={[required, maxLength100]} placeholder={\"Post message\"} value={text} onChange={(e) => setText(e.target.value)} />\r\n                        {/* { createField(\"Post message\", \"newPostText\", [required], Textarea, {}) } */}\r\n                </div>\r\n                <div className={classes.btn__wrapper}>\r\n                    <button className={classes.btn} type=\"submit\">Post</button>\r\n                    <button className={classes.btn} type=\"button\" >Remove</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const MyPostReduxForm = reduxForm({ form: \"addMyPostForm\" })(MyPostForm)","import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport Posts from '../Posts/Posts';\r\nimport classes from './MyPost.module.css';\r\nimport { MyPostReduxForm } from './MyPostForm/MyPostForm';\r\n\r\nfunction MyPosts(props) {\r\n    \r\n    let onPostMessage = (values) => {\r\n        props.addPost(values.newPostText)\r\n        values.newPostText = ''\r\n    }\r\n\r\n    let postsElement = props.posts.map(p => <Posts post={p.message} profile={props.profile} key={p.profile} />);\r\n    \r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <MyPostReduxForm onSubmit={onPostMessage} addPost={props.addPost} newPostText={props.newPostText} />\r\n            <h2>Posts:</h2>\r\n            <div className={classes.Posts}>\r\n                { props.isFetching ? postsElement : <Preloader /> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostAC, deletePost } from '../../../Redux/profile-reduser';\r\nimport MyPosts from './MyPost';\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostAC(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n\r\nconst Lorem = () => {\r\n    return <div>\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat deleniti ipsam veritatis.'\r\n    </div>\r\n}\r\n\r\nexport default Lorem","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./ProfileStatus.module.css\"\r\n\r\nconst ProfileStatus = (props) => {\r\n    const updateStatusEnter = React.createRef()\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditeMode = () => {\r\n        setEditMode(false)\r\n        if (!props.status) {\r\n            props.updateProfileStatus(\"Установить статус\")\r\n        } else {\r\n            props.updateProfileStatus(status)\r\n        }\r\n    }\r\n    const deactivateEditeModeOnBlur = () => {\r\n        setEditMode(false)\r\n        return props.status\r\n    }\r\n    const clickButtonEnten = () => {\r\n        updateStatusEnter.current.addEventListener('keydown', (keyPress) => {\r\n            if (keyPress.keyCode === 13) {\r\n                keyPress.preventDefault()\r\n                deactivateEditeMode()\r\n            }\r\n        }, { once: true })\r\n    }\r\n    const onStatusChange = (e) => {\r\n        clickButtonEnten()\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(() => {\r\n        if (status !== props.status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status]) \r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span className={classes.aboutMe__editor} onClick={activateEditMode} >\r\n                        {props.status ? props.status : \"Установить статус\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input ref={updateStatusEnter}\r\n                        onChange={onStatusChange} autoFocus onBlur={deactivateEditeModeOnBlur}\r\n                        defaultValue={status} maxLength={300} placeholder='Введите статус' type=\"text\" />\r\n                    <div>\r\n                        <button onClick={deactivateEditeMode}\r\n                            onMouseDown={deactivateEditeMode} type=\"submit\">Сохранить</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import classes from './ProfileInfo.module.css';\r\nimport React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\nimport Lorem from '../../Common/Lorem/Lorem';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\n\r\nfunction ProfileInfo(props) {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.profile__wrapper}>\r\n            <div>\r\n                <img className={classes.profile__img}\r\n                    src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto} />\r\n            </div>\r\n            <div className={classes.profile__info}>\r\n                <div className={classes.userName}>{props.profile.fullName}</div>\r\n                <div className={classes.about__user}>{\r\n                    <ProfileStatus /> != null ? <ProfileStatus\r\n                                                    profile={props.profile}\r\n                                                    status={props.status}\r\n                                                    updateProfileStatus={props.updateProfileStatus} /> : <Lorem />}\r\n                </div>          \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport AdditionalInformation from './AdditionalInformation/AdditionalInformation';\r\nimport MyPostsContainer from './MyPost/MyPostContainer';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.profile__wrapper}>\r\n                <ProfileInfo profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus} />\r\n                <AdditionalInformation profile={props.profile} lookingForAJob={props.lookingForAJob} lookingForAJobDescription={props.lookingForAJobDescription}\r\n                    fullName={props.fullName} contacts={props.contacts} />\r\n                <MyPostsContainer profile={props.profile} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthLocation } from '../../hoc/withAuthLocation';\r\nimport { getProfile, getProfileStatus, updateProfileStatus } from '../../Redux/profile-reduser';\r\nimport Profile from './Profile';\r\n\r\nconst ProfileContainer = (props) => {\r\n    let { userId } = useParams()\r\n    if (!userId) {\r\n        userId = props.authUserId\r\n    }\r\n    \r\n    useEffect(() => {\r\n        props.getProfile(userId)\r\n        props.getProfileStatus(userId)\r\n    }, [])\r\n\r\n    return (\r\n        <Profile {...props} profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getProfileStatus, updateProfileStatus }),\r\n    withAuthLocation\r\n)(ProfileContainer)","import React from \"react\";\r\nimport logout from \"../../../assets/img/logout.svg\"\r\nimport classes from \"./LogoutSvg.module.css\"\r\n\r\nconst LogoutSvg = () => {\r\n    return (\r\n        <div className={classes.logout__img}>\r\n            <img src={logout}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoutSvg","import React from \"react\";\r\nimport classes from \"./AuthComponent.module.css\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport LogoutSvg from \"../Common/LogoutSvg/LogoutSvg\";\r\n\r\nconst LogoutForm = (props) => {\r\n    return (\r\n        <div className={classes.login__block}>\r\n            <form className={classes.login__form} onSubmit={props.handleSubmit}>\r\n                <p className={classes.login}> {props.isAuth ? props.login :\r\n                    <NavLink to={'/login'}>Login</NavLink>} {props.isAuth ?\r\n                        <button className={classes.btn__logout}><LogoutSvg /></button> : \"\"}</p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LogoutReduxForm = reduxForm({ form: 'logout' })(LogoutForm)\r\n\r\nexport default LogoutReduxForm","import React from \"react\";\r\nimport LogoutReduxForm from \"./LogoutForm\";\r\nimport classes from \"./AuthComponent.module.css\"\r\nimport { logout } from \"../../Redux/auth-reduser\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AuthComponent = (props) => {\r\n    const onSubmit = () => {\r\n        props.logout()\r\n    }\r\n    return (\r\n        <div className={classes.login__block}>\r\n            <LogoutReduxForm {...props} onSubmit={onSubmit} isAuth={props.isAuth}\r\n                login={props.login} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout})(AuthComponent)","import classes from './Header.module.css';\r\nimport React from 'react';\r\nimport AuthComponent from '../AuthComponent/AuthComponent';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header className={classes.header__wrapper}>\r\n            <div className={classes.header}>\r\n                <div className={classes.logo}>\r\n                    <p>Social ·</p>\r\n                    <p className={classes.logo__text}>· NET</p>\r\n                </div>\r\n                <AuthComponent />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\n\r\nconst HeaderContainer = (props) => {\r\n    return (\r\n        <Header { ...props } />\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps)(HeaderContainer)","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { required } from \"../../../utils/validators/validators\";\r\nimport { createField, Input } from \"../../Common/formsControls/formControls\";\r\nimport classes from \"../LoginPage.module.css\";\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <div className={error ? classes.formSummaryError : classes.form}>\r\n            <form onSubmit={handleSubmit}>\r\n                {createField(\"Email\", \"email\", [required], Input)}\r\n                {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n                {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"Remember Me\")}\r\n\r\n                { captchaUrl && <img src={captchaUrl} /> }\r\n                { captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n                <div className={classes.submit}>\r\n                    <button>Sign In</button>\r\n                    <span className={classes.error}>{error && <div> {error} </div>}</span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default LoginReduxForm","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { login } from \"../../Redux/auth-reduser\";\r\nimport LoginReduxForm from \"./LoginForm/LoginForm\";\r\nimport classes from \"./LoginPage.module.css\";\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate replace to={\"/profile\"} />\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapperLoginPage}>\r\n            <div className={classes.titleLogin}>\r\n                <p className={classes.loginTitle}>LOGIN</p>\r\n            </div>\r\n            <div>\r\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { login })(LoginPage)","import { connect } from \"react-redux\";\r\nimport LoginPage from \"./LoginPage\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        isFetching: state.usersPage.isFetching,\r\n        profile: state.profilePage.profile,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nconst LoginPageContainer = connect(mapStateToProps)(LoginPage)\r\n\r\nexport default LoginPageContainer\r\n","import './App.css';\r\nimport React, { useEffect } from 'react';\r\nimport Nav from './components/Nav/Nav';\r\nimport MessagesContainer from './components/Masseges/MessagesContainer';\r\nimport UsersContainer from './components/Users/UsersContainer'\r\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginPageContainer from './components/LoginPage/LoginPageContainer';\r\nimport { initializeApp } from './Redux/app-reduser';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from './components/Common/Preloader/Preloader';\r\n\r\nconst App = (props) => {\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    props.initializeApp()\r\n}, [])\r\n  if (props.initialize === false) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Nav />\r\n        <div className='app-wrapper-content'>\r\n          <Routes>\r\n            \r\n            <Route path='/' element={<Navigate to=\"/profile\" />} />\r\n            <Route path='/profile' element={<ProfileContainer />} >\r\n              <Route path=':userId' element={<ProfileContainer />} />\r\n            </Route>\r\n            <Route path='/messages/*' element={<MessagesContainer />} />\r\n            <Route path='/users' element={<UsersContainer />} />\r\n            <Route path='/login' element={<LoginPageContainer />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialize: state.app.initialized\r\n})\r\n\r\nexport default connect(mapStateToProps, {initializeApp})(App);\r\n","import './index.css';\r\nimport store from './Redux/redux-store';\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__block\":\"AuthComponent_login__block__3ElpX\",\"login__form\":\"AuthComponent_login__form__3nhBx\",\"login\":\"AuthComponent_login__2QJvm\",\"btn__logout\":\"AuthComponent_btn__logout__mgB8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2RV8R\",\"numberPage\":\"Paginator_numberPage__3FpNz\",\"wrapperPage\":\"Paginator_wrapperPage__38qzO\",\"wrapperPrev\":\"Paginator_wrapperPrev__11reI\",\"portion\":\"Paginator_portion__2Y7Bx\"};","module.exports = __webpack_public_path__ + \"static/media/user.8c62dd08.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formError\":\"formControls_formError__2R1WC\",\"rememberMe\":\"formControls_rememberMe__91V_p\",\"fieldControl\":\"formControls_fieldControl__1DfjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__img\":\"ProfileInfo_profile__img__1FqeS\",\"profile__wrapper\":\"ProfileInfo_profile__wrapper__ryhAY\",\"profile__info\":\"ProfileInfo_profile__info__PlW92\",\"about__user\":\"ProfileInfo_about__user__2g9SG\",\"userName\":\"ProfileInfo_userName__3gBbn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperContact\":\"AdditionalInformation_wrapperContact__jUu03\",\"wrapperContacts\":\"AdditionalInformation_wrapperContacts__2vfHo\",\"editModeActive\":\"AdditionalInformation_editModeActive__25Pyt\",\"wrapperAddInf\":\"AdditionalInformation_wrapperAddInf__YUUEb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__wrapper\":\"Header_header__wrapper__1O_TU\",\"header\":\"Header_header__iLGU8\",\"logo\":\"Header_logo__2j3ml\",\"logo__text\":\"Header_logo__text__2uBvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Posts_wrapper__3qGWR\",\"avatar\":\"Posts_avatar__3MPfR\",\"text\":\"Posts_text__3nSJk\"};"],"sourceRoot":""}