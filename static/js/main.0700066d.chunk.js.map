{"version":3,"sources":["components/Masseges/Messages.module.css","assets/img/preloader.svg","components/Common/Preloader/Preloader.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","assets/img/logout.svg","components/Nav/Nav.module.css","components/Users/Users.module.css","components/Profile/MyPost/MyPost.module.css","components/LoginPage/LoginPage.module.css","api/api.js","Redux/auth-reduser.ts","Redux/dialogs-reduser.js","Redux/profile-reduser.ts","utils/objects-helper.js","Redux/users-reduser.ts","Redux/app-reduser.ts","Redux/redux-store.js","components/Nav/Nav.jsx","hoc/withAuthLocation.jsx","components/Masseges/DilogItem/DialogItem.jsx","components/Masseges/Message/Message.jsx","utils/validators/validators.js","components/Common/formsControls/formControls.js","components/Masseges/MessageForm/MessageForm.jsx","components/Masseges/Messages.jsx","components/Masseges/MessagesContainer.jsx","components/Common/Paginator/Paginator.js","components/Users/User/User.jsx","components/Users/Users.jsx","components/Common/Preloader/Preloader.js","Redux/users-selector.js","components/Users/UsersContainer.jsx","components/Common/Lorem/Lorem.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Posts.jsx","components/Profile/MyPost/MyPostForm/MyPostForm.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Common/LogoutSvg/LogoutSvg.js","components/AuthComponent/LogoutForm.jsx","components/AuthComponent/AuthComponent.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/LoginPage/LoginForm/LoginForm.jsx","components/LoginPage/LoginPage.jsx","components/LoginPage/LoginPageContainer.jsx","App.js","index.js","components/AuthComponent/AuthComponent.module.css","assets/img/user.jpg","components/Common/formsControls/formControls.module.css","components/Common/Paginator/Paginator.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/Posts/Posts.module.css"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","requestGetUsers","currentPage","pageSize","get","follow","userId","post","id","unfollow","delete","getUserProfile","getProfileStatus","updateProfileStatus","status","put","authAPI","email","password","rememberMe","initialState","login","isAuth","setAuthUserData","type","payload","getAuthUserData","dispatch","response","data","resultCode","authReduser","state","action","dialogs","name","messages","message","window","dialogsReduser","body","newMessageBody","posts","newPostText","profile","isFetching","setProfileStatus","profileReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","ACFollowUnfollow","usersReduser","followed","count","filter","initialized","appReduser","reducers","combineReducers","profilePage","dialogsPage","dialogsReducer","usersPage","auth","form","formReduser","app","store","createStore","applyMiddleware","thankMiddleware","connect","props","className","classes","nav","link","navData","isActive","active","item","to","href","line","settings","withAuthLocation","Component","replace","DialogItem","path","dialog","DialogItem__link","Message","required","value","maxLengthCreator","maxLength","length","FormControl","meta","touched","error","children","hasError","formControl","formError","Textarea","input","restProps","child","Input","createField","placeholder","validators","component","text","fieldControl","Field","validate","maxLength100","MessageFormRedux","reduxForm","textMessage","onSubmit","handleSubmit","textarea","autoFocus","btn","btnSend","button","Messages","dialogsElement","d","key","messagesElement","m","wrapper__messages","title","stick","flexbox","wrapper__messanger","messanger","values","sendMessage","compose","newMessageText","sendMessageAC","Paginator","pagesCount","onPageChanged","portionSize","useState","portionNumber","setPortionNumber","pages","i","push","useEffect","Math","ceil","leftPortionPageNumber","rightPortionPageNumber","numberPage","wrapperPrev","onClick","p","e","wrapperPage","selectedPage","portion","ReactPaginator","breakLabel","nextLabel","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","User","wrapper","wrapper__avatar","user","avatar","src","photos","small","userPhoto","btn__wrapper","disabled","some","btn__unfollow","btn__follow","wrapper__info","nickName","userName__link","location","Users","Preloader","loader","preloader","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","page","totalCount","bind","pageNumber","Lorem","ProfileStatus","updateStatusEnter","React","createRef","editMode","setEditMode","setStatus","deactivateEditeMode","aboutMe__editor","ref","onChange","current","addEventListener","keyPress","keyCode","preventDefault","once","currentTarget","onBlur","defaultValue","onMouseDown","ProfileInfo","profile__wrapper","profile__img","large","profile__info","userName","fullName","about__user","Posts","maxLength10","MyPostReduxForm","textarea__wrapper","MyPosts","postsElement","addPost","MyPostsContainer","addPostAC","Profile","content","authUserId","getProfile","useParams","LogoutSvg","logout__img","logout","LogoutReduxForm","login__block","login__form","btn__logout","Header","header__wrapper","header","logo","logo__text","LoginReduxForm","formSummaryError","submit","stopSubmit","_error","wrapperLoginPage","titleLogin","loginTitle","formData","LoginPageContainer","LoginPage","initialize","initializeApp","promise","Promise","all","then","element","MessagesContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0700066d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogItem__link\":\"Messages_DialogItem__link__375Kj\",\"wrapper__messages\":\"Messages_wrapper__messages__3wpWW\",\"stick\":\"Messages_stick__LngQ1\",\"title\":\"Messages_title__3qInT\",\"dialogs\":\"Messages_dialogs__3qFZt\",\"dialog\":\"Messages_dialog__3sjgR\",\"flexbox\":\"Messages_flexbox__3NCYH\",\"wrapper__messanger\":\"Messages_wrapper__messanger__1Wboq\",\"message\":\"Messages_message__2zDQy\",\"textMessage\":\"Messages_textMessage__2uaSf\",\"textarea\":\"Messages_textarea__2lLX2\",\"btn\":\"Messages_btn__3DTSB\",\"btnSend\":\"Messages_btnSend__2ji_v\",\"button\":\"Messages_button__I4nXq\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.ef886190.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__aA5wi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMe__editor\":\"ProfileStatus_aboutMe__editor__1BhQl\"};","module.exports = __webpack_public_path__ + \"static/media/logout.6517ee94.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1_JSp\",\"settings\":\"Nav_settings__1K9ZG\",\"line\":\"Nav_line__1F-rl\",\"link\":\"Nav_link__2pFvk\",\"active\":\"Nav_active__33sVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__me3Re\",\"users\":\"Users_users__34yhM\",\"btn__wrapper\":\"Users_btn__wrapper__3n4D-\",\"btn__follow\":\"Users_btn__follow__yMUfQ\",\"btn__unfollow\":\"Users_btn__unfollow__14Z8o\",\"btn__follow__click\":\"Users_btn__follow__click__1zRZt\",\"wrapper__avatar\":\"Users_wrapper__avatar__28eI8\",\"wrapper__info\":\"Users_wrapper__info__SEIFs\",\"avatar\":\"Users_avatar__2b-dr\",\"nickName\":\"Users_nickName__1wKLu\",\"status\":\"Users_status__3yRiB\",\"location\":\"Users_location__2Tc5o\",\"userName__link\":\"Users_userName__link__3jYpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPost_wrapper__2I8HV\",\"textarea\":\"MyPost_textarea__3Rgef\",\"btn__wrapper\":\"MyPost_btn__wrapper__3UdOx\",\"btn\":\"MyPost_btn__1njIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLoginPage\":\"LoginPage_wrapperLoginPage__1_nDD\",\"titleLogin\":\"LoginPage_titleLogin__33cfj\",\"formSummaryError\":\"LoginPage_formSummaryError__1d6MP\",\"form\":\"LoginPage_form__fQVBs\",\"submit\":\"LoginPage_submit__3vppF\",\"error\":\"LoginPage_error__18S5h\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: { \"API-KEY\": \"f875b6a1-5fef-48ce-a963-4e6042f223a9\" }\r\n})\r\n\r\nexport const usersAPI = {\r\n    requestGetUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId.id}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId.id}`)\r\n    },\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getProfileStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateProfileStatus(status) {\r\n        return instance.put(`profile/status`, { status })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}","import { type } from \"os\"\r\nimport { stopSubmit } from \"redux-form\"\r\nimport { authAPI } from \"../api/api\"\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst OUT_AUTH_USER_DATA = 'OUT_AUTH_USER_DATA'\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    rememberMe: boolean,\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    rememberMe: false,\r\n    isAuth: false\r\n}\r\n\r\nconst authReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: true\r\n            }\r\n        case OUT_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype PayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataType = {\r\n    type: typeof SET_AUTH_USER_DATA\r\n    payload: PayloadType\r\n}\r\nexport const setAuthUserData = (userId: number, email: string, login: string, isAuth: boolean): SetAuthUserDataType =>\r\n    ({ type: SET_AUTH_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\ntype OutAuthUserDataType = {\r\n    type: typeof OUT_AUTH_USER_DATA\r\n    payload: PayloadType\r\n}\r\nexport const outAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): OutAuthUserDataType =>\r\n    ({ type: OUT_AUTH_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\n\r\nexport const login = (userId: number | null, email: string | null, password: string | null, rememberMe: boolean) => async (dispatch: any) => {\r\n    let response = await authAPI.login(userId, email, password)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\"\r\n        dispatch(stopSubmit(\"login\", { _error: message }))\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(outAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReduser","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Nick 1' },\r\n    { id: 2, name: 'Nick 2' },\r\n    { id: 3, name: 'Nick 3' },\r\n    { id: 4, name: 'Nick 4' },\r\n    { id: 5, name: 'Nick 5' },\r\n  ],\r\n  messages: [\r\n    { message: 'Hi, world' }\r\n  ]\r\n}\r\n\r\nwindow.initialState = initialState;\r\n\r\nconst dialogsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: 1, message: body}] \r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageAC = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\nexport default dialogsReduser;","import { type } from 'os';\r\nimport { usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\ntype PostType = {\r\n  id: number\r\n  message: string\r\n}\r\ntype ContactsType = {\r\n  github: string\r\n  vk: string\r\n  facebook: string\r\n  instagram: string\r\n  twitter: string\r\n  website: string\r\n  youtube: string\r\n  mainLink: string\r\n}\r\ntype PhotosType = {\r\n  small: string | null\r\n  large: string | null\r\n}\r\ntype ProfileType = {\r\n  userId: number\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string\r\n  fullName: string\r\n  contacts: ContactsType\r\n  photos: PhotosType\r\n}\r\n\r\nlet initialState = {\r\n  posts: [] as Array<PostType>,\r\n  newPostText: '',\r\n  profile: null as ProfileType | null,\r\n  isFetching: true,\r\n  status: ''\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let body = action.newPostText\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, { id: 1, message: body }]\r\n      }\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype AddPostACType = {\r\n  type: typeof ADD_POST\r\n  newPostText: string\r\n}\r\ntype SetUserProfileType = {\r\n  type: typeof SET_USER_PROFILE\r\n  profile: string\r\n}\r\ntype SetProfileStatusType = {\r\n  type: typeof SET_STATUS\r\n  status: string\r\n}\r\nexport const addPostAC = (newPostText: string): AddPostACType => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile: string): SetUserProfileType => ({ type: SET_USER_PROFILE, profile })\r\nexport const setProfileStatus = (status: string): SetProfileStatusType => ({ type: SET_STATUS, status })\r\n\r\nexport const getProfile = (userId: number) => async (dispatch: any) => {\r\n  let response = await usersAPI.getUserProfile(userId)\r\n  dispatch(setUserProfile(response.data))\r\n}\r\nexport const getProfileStatus = (userId: number) => async (dispatch: any) => {\r\n  let response = await usersAPI.getProfileStatus(userId)\r\n  dispatch(setProfileStatus(response.data))\r\n}\r\nexport const updateProfileStatus = (status: string) => async (dispatch: any) => {\r\n  let response = await usersAPI.updateProfileStatus(status)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setProfileStatus(status))\r\n  }\r\n}\r\n\r\nexport default profileReducer;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u\r\n    })\r\n} ","import { usersAPI } from \"../api/api\"\r\nimport { updateObjectInArray } from \"../utils/objects-helper\"\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [null]\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersReduser = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype FollowSuccessType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\ntype UnfollowSuccessType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: string\r\n}\r\ntype SetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\ntype ToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\ntype ToggleFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\nexport const followSuccess = (userId: number): FollowSuccessType => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessType => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users: string): SetUsersType => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageType => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountType => \r\n    ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingType => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressType => \r\n    ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestGetUsers = (page: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    let response = await usersAPI.requestGetUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items))\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: {id: number}, apiMethod: any, ACFollowUnfollow: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId.id))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(ACFollowUnfollow(userId.id))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId.id))\r\n}\r\n\r\nexport const follow = (userId: {id: number}) => async (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId: {id: number}) => async (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport default usersReduser;","import { getAuthUserData } from \"./auth-reduser\"\r\n\r\nconst INITIALIZED__ACCESS = \"INITIALIZED__ACCESS\" \r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED__ACCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitializedSuccessType = {\r\n    type: typeof INITIALIZED__ACCESS\r\n}\r\nexport const initializedSuccess = (): InitializedSuccessType => ({ type: INITIALIZED__ACCESS })\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())  \r\n        })\r\n}\r\n\r\nexport default appReduser","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authReduser from \"./auth-reduser\";\r\nimport dialogsReducer from \"./dialogs-reduser\";\r\nimport profileReducer from \"./profile-reduser\";\r\nimport usersReduser from \"./users-reduser\";\r\nimport thankMiddleware from \"redux-thunk\";\r\nimport { reducer as formReduser } from \"redux-form\";\r\nimport appReduser from \"./app-reduser\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReduser,\r\n    auth: authReduser,\r\n    form: formReduser,\r\n    app: appReduser\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thankMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Nav.module.css';\r\n\r\nfunction Nav(props) {\r\n    // {`/profile/${userId}`}\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.link}>\r\n                <NavLink className={ navData => navData.isActive ? classes.active : classes.item } to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <NavLink className={ navData => navData.isActive ? classes.active : classes.item } to=\"/messages\">Messages</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <NavLink className={ navData => navData.isActive ? classes.active : classes.item } to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <a className={classes.item} href=\"#\">Music</a>\r\n            </div>\r\n            <div className={classes.line}></div>\r\n            <div className={classes.link}>\r\n                <a className={classes.settings} href=\"#\">Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userId: state.usersPage.profile\r\n})\r\n\r\nexport default connect(mapStateToProps)(Nav);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport const withAuthLocation = (Component) => {\r\n    const mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    const LocationComponent = (props) => {\r\n        if (!props.isAuth) {\r\n            return <Navigate replace to={\"/login\"} />\r\n        }\r\n        return <Component {...props} /> \r\n    }\r\n    const ConnectedAuthLocation = connect(mapStateToProps)(LocationComponent)\r\n    return ConnectedAuthLocation\r\n}","import classes from './../Messages.module.css';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/messages/' + props.id;\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink className={classes.DialogItem__link} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogItem;","import classes from './../Messages.module.css';\r\nimport React from 'react';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","export const required = value => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport classes from \"./formControls.module.css\";\r\n\r\nexport const FormControl = ({ meta: {touched, error}, children }) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span className={classes.formError}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div className={classes.fieldControl}>\r\n        <Field placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props} /> <span className={classes.rememberMe}>{text}</span>\r\n    </div>\r\n)\r\n","import React from \"react\";\r\nimport classes from \"../Messages.module.css\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../Common/formsControls/formControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <div className={classes.textMessage}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div >\r\n                    <Field className={classes.textarea} component={Textarea}\r\n                        name=\"newMessageBody\" placeholder=\"Enter your message\" autoFocus\r\n                        validate={[required, maxLength100]}  />\r\n                </div>\r\n                <div className={classes.btn}>\r\n                    <div className={classes.btnSend}>\r\n                        <button className={classes.button}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const MessageFormRedux = reduxForm({ form: \"dilogAddMessageForm\" })(MessageForm)","import classes from './Messages.module.css';\r\nimport React from 'react';\r\nimport DialogItem from './DilogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { MessageFormRedux } from './MessageForm/MessageForm';\r\n\r\nconst Messages = (props) => {\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    let dialogsElement = props.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElement = props.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n    return (\r\n\r\n        <div className={classes.wrapper__messages}>\r\n\r\n            <h2 className={classes.title}>Dialogs</h2>\r\n            <div className={classes.dialogs}>\r\n                {dialogsElement}\r\n            </div>\r\n            <span className={classes.stick}></span>\r\n            <div className={classes.flexbox}>\r\n                <div className={classes.wrapper__messanger}>\r\n                    <div className={classes.messanger}>\r\n                        {messagesElement}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <MessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Messages;","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthLocation } from \"../../hoc/withAuthLocation\";\r\nimport { sendMessageAC } from \"../../Redux/dialogs-reduser\";\r\nimport Messages from \"./Messages\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageAC(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthLocation\r\n)(Messages)","import React, { useEffect, useState } from \"react\"\r\nimport classes from \"./Paginator.module.css\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst Paginator = ({ pagesCount={pagesCount}, totalUsersCount, pageSize, onPageChanged, currentPage, portionSize = 15 }) => {\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) pages.push(i)\r\n    \r\n    useEffect(() => {\r\n        setPortionNumber(Math.ceil(currentPage / portionSize))\r\n    }, [currentPage])\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={classes.numberPage}>\r\n            <div className={classes.wrapperPrev}> {portionNumber > 1 &&\r\n                <button onClick={() => setPortionNumber(portionNumber - 1)}>prev</button>} </div>\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <div\r\n                        onClick={(e) => { onPageChanged(p) }} className={classes.wrapperPage} key={p.id}>\r\n                        <button className={currentPage === p ? classes.selectedPage : \"\"}><a href=\"#top\">{p}</a></button></div>\r\n                })\r\n            }\r\n            <button className={classes.portion} onClick={() => setPortionNumber(portionNumber + 1)}>next</button>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst ReactPaginator = ({ totalUsersCount, pageSize, onPageChanged, currentPage }) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    return (\r\n        <>\r\n            <Paginator pagesCount={pagesCount} totalUsersCount={totalUsersCount} pageSize={pageSize} onPageChanged={onPageChanged} currentPage={currentPage} />\r\n            <ReactPaginate\r\n                breakLabel=\"...\"\r\n                nextLabel=\"next >\"\r\n                onPageChanged={onPageChanged}\r\n                pageRangeDisplayed={20}\r\n                pagesCount={pagesCount}\r\n                previousLabel=\"< previous\"\r\n                renderOnZeroPageCount={null}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReactPaginator","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"../Users.module.css\";\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.wrapper__avatar}>\r\n                <div>\r\n                    <NavLink to={\"/profile/\" + props.user.id}>\r\n                        <img className={classes.avatar} src={props.user.photos.small != null ? props.user.photos.small : userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={classes.btn__wrapper}>\r\n                    {props.user.followed ? <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                        className={classes.btn__unfollow} onClick={() => { props.unfollow(props.user) }}>Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                            className={classes.btn__follow} onClick={() => { props.follow(props.user) }}>Follow</button>}\r\n                </div>\r\n            </div>\r\n            <div className={classes.wrapper__info}>\r\n                <div>\r\n                    <div className={classes.nickName}>\r\n                        <NavLink to={\"/profile/\" + props.user.id} className={classes.userName__link}>{props.user.name}</NavLink>\r\n                    </div>\r\n                    <div className={classes.status}>{props.user.status}</div>\r\n                </div>\r\n                <div className={classes.location}>\r\n                    <div>{/*u.location.country*/ \"USA,\"}</div>\r\n                    <div>{/*\"u.location.city\"*/ \"New York\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React from \"react\";\r\nimport ReactPaginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\n\r\nconst Users = (props) => {\r\n    return <div>\r\n        <a name='top'></a>\r\n        {props.users.map(u => <User user={u} key={u.id} followed={props.followed} followingInProgress={props.followingInProgress}\r\n                                    unfollow={props.unfollow} follow={props.follow} />)}\r\n        <ReactPaginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize} \r\n                   currentPage={props.currentPage} onPageChanged={props.onPageChanged} />\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport preloader from '../../../assets/img/preloader.svg'\r\nimport classes from './Preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={classes.loader}>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import { createSelector } from \"reselect\"\r\n\r\nconst getUsersArray = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersArray, \r\n    (users) => {\r\n        return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from './Users.module.css'\r\nimport { setCurrentPage, toggleFollowingProgress, requestGetUsers, follow, unfollow } from \"../../Redux/users-reduser\";\r\nimport Users from './Users'\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport { useEffect } from \"react\";\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from \"../../Redux/users-selector\";\r\n\r\nconst UsersContainer = (props) => {\r\n    useEffect(() => {\r\n        props.requestGetUsers(props.currentPage, props.pageSize)\r\n    }, [])\r\n    const onPageChanged = (pageNumber) => {\r\n        props.requestGetUsers(pageNumber, props.pageSize)\r\n    }\r\n    \r\n    return (<>\r\n        <span className={classes.users}>Users:</span>\r\n        {props.isFetching ? <Preloader /> : <Users\r\n            totalUsersCount={props.totalUsersCount}\r\n            pageSize={props.pageSize}\r\n            users={props.users}\r\n            unfollow={props.unfollow}\r\n            follow={props.follow}\r\n            onPageChanged={onPageChanged}\r\n            currentPage={props.currentPage}\r\n            followingInProgress={props.followingInProgress} />}\r\n    </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default\r\n    connect(mapStateToProps,\r\n        { setCurrentPage, toggleFollowingProgress, requestGetUsers, follow, unfollow })(UsersContainer)","import React from \"react\";\r\n\r\nconst Lorem = () => {\r\n    return <div>\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat deleniti ipsam veritatis.'\r\n    </div>\r\n}\r\n\r\nexport default Lorem","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./ProfileStatus.module.css\"\r\n\r\nconst ProfileStatus = (props) => {\r\n    const updateStatusEnter = React.createRef()\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditeMode = () => {\r\n        setEditMode(false)\r\n        if (!props.status) {\r\n            props.updateProfileStatus(\"Установить статус\")\r\n        } else {\r\n            props.updateProfileStatus(status)\r\n        }\r\n    }\r\n    const deactivateEditeModeOnBlur = () => {\r\n        setEditMode(false)\r\n        return props.status\r\n    }\r\n    const clickButtonEnten = () => {\r\n        updateStatusEnter.current.addEventListener('keydown', (keyPress) => {\r\n            if (keyPress.keyCode === 13) {\r\n                keyPress.preventDefault()\r\n                deactivateEditeMode()\r\n            }\r\n        }, { once: true })\r\n    }\r\n    const onStatusChange = (e) => {\r\n        clickButtonEnten()\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(() => {\r\n        if (status !== props.status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status]) \r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span className={classes.aboutMe__editor} onClick={activateEditMode} >\r\n                        {props.status ? props.status : \"Установить статус\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input ref={updateStatusEnter}\r\n                        onChange={onStatusChange} autoFocus onBlur={deactivateEditeModeOnBlur}\r\n                        defaultValue={status} maxLength={300} placeholder='Введите статус' type=\"text\" />\r\n                    <div>\r\n                        <button onClick={deactivateEditeMode}\r\n                            onMouseDown={deactivateEditeMode} type=\"submit\">Сохранить</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import classes from './ProfileInfo.module.css';\r\nimport React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\nimport Lorem from '../../Common/Lorem/Lorem';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\n\r\nfunction ProfileInfo(props) {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profile__wrapper}>\r\n            <div>\r\n                <img className={classes.profile__img}\r\n                    src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto} />\r\n            </div>\r\n            <div className={classes.profile__info}>\r\n                <div className={classes.userName}>{props.profile.fullName}</div>\r\n                <div className={classes.about__user}>{\r\n                    <ProfileStatus /> != null ? <ProfileStatus\r\n                                                    profile={props.profile}\r\n                                                    status={props.status}\r\n                                                    updateProfileStatus={props.updateProfileStatus} /> : <Lorem />}\r\n                </div>          \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import classes from './Posts.module.css';\r\nimport React from 'react';\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\n\r\nfunction Posts(props) {\r\n    return (\r\n        <div>\r\n            <div className={classes.wrapper}>\r\n                <div className={classes.avatar}>\r\n                    <img src={props.profile.photos.small != null ? props.profile.photos.small : userPhoto} />\r\n                </div>\r\n                <div className={classes.text}>\r\n                    {props.post}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport classes from \"../MyPost.module.css\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, required } from \"../../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../Common/formsControls/formControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPostForm = (props) => {\r\n    let deletePostText = (value) => {\r\n        props.newPostText(value.newPostText = \"\")\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div className={classes.textarea__wrapper}>\r\n                    <Field component={Textarea} name=\"newPostText\" className={classes.textarea}\r\n                        validate={[required, maxLength10]} placeholder={\"Post message\"} />\r\n                </div>\r\n                <div className={classes.btn__wrapper}>\r\n                    <button className={classes.btn} type=\"submit\">Post</button>\r\n                    <button className={classes.btn} type=\"button\" onClick={deletePostText}>Remove</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const MyPostReduxForm = reduxForm({ form: \"addMyPostForm\" })(MyPostForm)","import classes from './MyPost.module.css';\r\nimport React from 'react';\r\nimport Posts from '../Posts/Posts';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport { MyPostReduxForm } from './MyPostForm/MyPostForm';\r\n\r\nfunction MyPosts(props) {\r\n    \r\n    let onPostMessage = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    let postsElement = props.posts.map(p => <Posts post={p.message} profile={props.profile} key={p.profile} />);\r\n    \r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <MyPostReduxForm onSubmit={onPostMessage} addPost={props.addPost} newPostText={props.newPostText} />\r\n            <h2>Posts:</h2>\r\n            <div className={classes.Posts}>\r\n                { props.isFetching ? postsElement : <Preloader /> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostAC, deletePost } from '../../../Redux/profile-reduser';\r\nimport MyPosts from './MyPost';\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostAC(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport React from 'react';\r\nimport MyPostsContainer from './MyPost/MyPostContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.profile__wrapper}>\r\n                <ProfileInfo profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus} />\r\n                <MyPostsContainer profile={props.profile} />       \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthLocation } from '../../hoc/withAuthLocation';\r\nimport { getProfile, getProfileStatus, updateProfileStatus } from '../../Redux/profile-reduser';\r\nimport Profile from './Profile';\r\n\r\nconst ProfileContainer = (props) => {\r\n    let { userId } = useParams()\r\n    if (!userId) {\r\n        userId = props.authUserId\r\n    }\r\n    useEffect(() => {\r\n        props.getProfile(userId)\r\n        props.getProfileStatus(userId)\r\n    }, [])\r\n\r\n    return (\r\n        <Profile {...props}  profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getProfileStatus, updateProfileStatus }),\r\n    withAuthLocation\r\n)(ProfileContainer)","import React from \"react\";\r\nimport logout from \"../../../assets/img/logout.svg\"\r\nimport classes from \"./LogoutSvg.module.css\"\r\n\r\nconst LogoutSvg = () => {\r\n    return (\r\n        <div className={classes.logout__img}>\r\n            <img src={logout}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoutSvg","import React from \"react\";\r\nimport classes from \"./AuthComponent.module.css\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport LogoutSvg from \"../Common/LogoutSvg/LogoutSvg\";\r\n\r\nconst LogoutForm = (props) => {\r\n    return (\r\n        <div className={classes.login__block}>\r\n            <form className={classes.login__form} onSubmit={props.handleSubmit}>\r\n                <p className={classes.login}> {props.isAuth ? props.login :\r\n                    <NavLink to={'/login'}>Login</NavLink>} {props.isAuth ?\r\n                        <button className={classes.btn__logout}><LogoutSvg /></button> : \"\"}</p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LogoutReduxForm = reduxForm({ form: 'logout' })(LogoutForm)\r\n\r\nexport default LogoutReduxForm","import React from \"react\";\r\nimport LogoutReduxForm from \"./LogoutForm\";\r\nimport classes from \"./AuthComponent.module.css\"\r\nimport { logout } from \"../../Redux/auth-reduser\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AuthComponent = (props) => {\r\n    const onSubmit = () => {\r\n        props.logout()\r\n    }\r\n    return (\r\n        <div className={classes.login__block}>\r\n            <LogoutReduxForm {...props} onSubmit={onSubmit} isAuth={props.isAuth}\r\n                login={props.login} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout})(AuthComponent)","import classes from './Header.module.css';\r\nimport React from 'react';\r\nimport AuthComponent from '../AuthComponent/AuthComponent';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header className={classes.header__wrapper}>\r\n            <div className={classes.header}>\r\n                <div className={classes.logo}>\r\n                    <p>Social ·</p>\r\n                    <p className={classes.logo__text}>· NET</p>\r\n                </div>\r\n                <AuthComponent />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\n\r\nconst HeaderContainer = (props) => {\r\n    return (\r\n        <Header { ...props } />\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps)(HeaderContainer)","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { required } from \"../../../utils/validators/validators\";\r\nimport { createField, Input } from \"../../Common/formsControls/formControls\";\r\nimport classes from \"../LoginPage.module.css\";\r\n\r\nconst LoginForm = ({ handleSubmit, error, props }) => {\r\n    return (\r\n        <div className={error ? classes.formSummaryError : classes.form}>\r\n            <form onSubmit={handleSubmit}>\r\n                {createField(\"Email\", \"email\", [required], Input)}\r\n                {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n                {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"Remember Me\")}\r\n                <div className={classes.submit}>\r\n                    <button>Sign In</button>\r\n                    <span className={classes.error}>{error && <div> {error} </div>}</span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default LoginReduxForm","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { login } from \"../../Redux/auth-reduser\";\r\nimport LoginReduxForm from \"./LoginForm/LoginForm\";\r\nimport classes from \"./LoginPage.module.css\"\r\n\r\nconst LoginPage = (props) => {\r\n    if (props.isAuth) {\r\n        return <Navigate replace to={\"/profile\"} />\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    return (\r\n        <div className={classes.wrapperLoginPage}>\r\n            <div className={classes.titleLogin}>\r\n                <p className={classes.loginTitle}>LOGIN</p>\r\n            </div>\r\n            <div>\r\n                <LoginReduxForm onSubmit={onSubmit} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { login })(LoginPage)","import { connect } from \"react-redux\";\r\nimport LoginPage from \"./LoginPage\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        isFetching: state.usersPage.isFetching,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nconst LoginPageContainer = connect(mapStateToProps)(LoginPage)\r\n\r\nexport default LoginPageContainer\r\n","import './App.css';\r\nimport React, { useEffect } from 'react';\r\nimport Nav from './components/Nav/Nav';\r\nimport MessagesContainer from './components/Masseges/MessagesContainer';\r\nimport UsersContainer from './components/Users/UsersContainer'\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginPageContainer from './components/LoginPage/LoginPageContainer';\r\nimport { initializeApp } from './Redux/app-reduser';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from './components/Common/Preloader/Preloader';\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    props.initializeApp()\r\n}, [])\r\n  if (props.initialize === false) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Nav />\r\n        <div className='app-wrapper-content'>\r\n          <Routes>\r\n            <Route path='' element={<ProfileContainer />} />\r\n            <Route path='/' element={<ProfileContainer />} />\r\n            <Route path='/profile' element={<ProfileContainer />} >\r\n              <Route path=':userId' element={<ProfileContainer />} />\r\n            </Route>\r\n            <Route path='/messages/*' element={<MessagesContainer />} />\r\n            <Route path='/users' element={<UsersContainer />} />\r\n            <Route path='/login' element={<LoginPageContainer />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialize: state.app.initialized\r\n})\r\n\r\nexport default connect(mapStateToProps, {initializeApp})(App);\r\n","import './index.css';\r\nimport store from './Redux/redux-store';\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__block\":\"AuthComponent_login__block__3ElpX\",\"login__form\":\"AuthComponent_login__form__3nhBx\",\"login\":\"AuthComponent_login__2QJvm\",\"btn__logout\":\"AuthComponent_btn__logout__mgB8v\"};","module.exports = __webpack_public_path__ + \"static/media/user.8c62dd08.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formError\":\"formControls_formError__2R1WC\",\"rememberMe\":\"formControls_rememberMe__91V_p\",\"fieldControl\":\"formControls_fieldControl__1DfjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2RV8R\",\"numberPage\":\"Paginator_numberPage__3FpNz\",\"wrapperPage\":\"Paginator_wrapperPage__38qzO\",\"wrapperPrev\":\"Paginator_wrapperPrev__11reI\",\"portion\":\"Paginator_portion__2Y7Bx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__img\":\"ProfileInfo_profile__img__1FqeS\",\"profile__wrapper\":\"ProfileInfo_profile__wrapper__ryhAY\",\"profile__info\":\"ProfileInfo_profile__info__PlW92\",\"about__user\":\"ProfileInfo_about__user__2g9SG\",\"userName\":\"ProfileInfo_userName__3gBbn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__wrapper\":\"Header_header__wrapper__1O_TU\",\"header\":\"Header_header__iLGU8\",\"logo\":\"Header_logo__2j3ml\",\"logo__text\":\"Header_logo__text__2uBvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Posts_wrapper__3qGWR\",\"avatar\":\"Posts_avatar__3MPfR\",\"text\":\"Posts_text__3nSJk\"};"],"sourceRoot":""}