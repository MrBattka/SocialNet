{"version":3,"sources":["components/Dekstop/Messages/Messages.module.css","assets/img/logout.svg","components/Dekstop/Nav/Nav.module.css","assets/img/preloader.svg","components/Common/Preloader/Preloader.module.css","components/Dekstop/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Mobile/Profile/Profile.module.css","components/Dekstop/LoginPage/LoginPage.module.css","components/Dekstop/Users/Users.module.css","assets/img/user.jpg","components/Dekstop/Profile/MyPost/MyPost.module.css","components/Common/LogoutSvg/LogoutSvg.js","components/AuthComponent/LogoutForm.jsx","api/api.js","Redux/auth-reduser.ts","components/AuthComponent/AuthComponent.jsx","components/Dekstop/Header/Header.jsx","components/Dekstop/Header/HeaderContainer.jsx","utils/validators/validators.js","components/Common/formsControls/formControls.js","components/Dekstop/LoginPage/LoginForm/LoginForm.jsx","components/Dekstop/LoginPage/LoginPage.jsx","components/Dekstop/LoginPage/LoginPageContainer.jsx","hoc/withAuthLocation.jsx","Redux/dialogs-reduser.js","components/Dekstop/Messages/DilogItem/DialogItem.jsx","components/Dekstop/Messages/Message/Message.jsx","components/Dekstop/Messages/MessageForm/MessageForm.jsx","components/Dekstop/Messages/Messages.jsx","components/Dekstop/Messages/MessagesContainer.jsx","utils/objects-helper.js","Redux/users-reduser.ts","Redux/users-selector.js","components/Common/Preloader/Preloader.js","components/Common/Paginator/Paginator.js","components/Dekstop/Users/User/User.jsx","components/Dekstop/MyFriends/MyFriends.jsx","components/Dekstop/MyFriends/MyFriendsContainer.jsx","components/Dekstop/Nav/Nav.jsx","Redux/profile-reduser.ts","components/Dekstop/AdditionalInformation/AdditionalInformation.jsx","components/Dekstop/Profile/Posts/Posts.jsx","components/Dekstop/Profile/MyPost/MyPostForm/MyPostForm.jsx","components/Dekstop/Profile/MyPost/MyPost.jsx","components/Dekstop/Profile/MyPost/MyPostContainer.jsx","components/Dekstop/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Common/ModalWindow/ModalWindow.js","components/Common/Lorem/Lorem.js","components/Dekstop/Profile/ProfileInfo/ProfileInfo.jsx","components/Dekstop/Profile/Profile.jsx","components/Dekstop/Profile/ProfileContainer.jsx","Redux/settingComponent-reduser.ts","components/Common/useTheme/useTheme.js","components/Common/switchInput/SwitchInput.js","components/Dekstop/Setting Component/SettingComponent.jsx","components/Dekstop/Setting Component/SettingCompContainer.jsx","components/Dekstop/Users/Users.jsx","components/Dekstop/Users/UsersContainer.jsx","adaptiveComponents/DesktopView.jsx","components/Mobile/Header/Header.jsx","components/Mobile/Profile/Profile.jsx","components/Mobile/Profile/ProfileContainer.jsx","adaptiveComponents/MobileView.jsx","adaptiveComponents/TabletView.jsx","Redux/app-reduser.ts","Redux/redux-store.js","App.js","index.js","components/AuthComponent/AuthComponent.module.css","components/Common/formsControls/formControls.module.css","components/Common/Paginator/Paginator.module.css","components/Dekstop/Profile/ProfileInfo/ProfileInfo.module.css","components/Dekstop/Profile/Posts/Posts.module.css","components/Dekstop/Header/Header.module.css","components/Dekstop/AdditionalInformation/AdditionalInformation.module.css","adaptiveComponents/Mobile.module.css","components/Dekstop/Setting Component/SettingComponent.module.css","components/Mobile/Header/Header.module.css"],"names":["module","exports","LogoutSvg","className","classes","logout__img","src","logout","LogoutReduxForm","reduxForm","form","props","login__block","login__form","onSubmit","handleSubmit","login","isAuth","to","btn__logout","instance","axios","withCredentials","baseURL","headers","usersAPI","requestGetUsers","currentPage","pageSize","get","requestGetFriendUsers","friend","follow","userId","post","id","unfollow","delete","getUserProfile","getProfileStatus","updateProfileStatus","status","put","authAPI","email","password","rememberMe","captcha","securityAPI","initialState","captchaUrl","setAuthUserData","type","payload","getCaptchaUrl","getAuthUserData","dispatch","response","data","resultCode","authReduser","state","action","connect","auth","Header","header__wrapper","header","logo","logo__text","required","value","maxLengthCreator","maxLength","length","FormControl","meta","touched","error","children","hasError","formControl","formError","submitFormonEnter","e","keyCode","preventDefault","Textarea","input","restProps","child","Input","inputWrapper","autoComplete","createField","placeholder","name","validators","component","text","fieldControl","Field","validate","LoginReduxForm","formSummaryError","titleLogin","loginTitle","imgCaptcha","submit","loginBtn","url","message","messages","stopSubmit","_error","replace","wrapperLoginPage","wrapperForm","formData","LoginPageContainer","isFetching","usersPage","profile","profilePage","LoginPage","withAuthLocation","Component","dialogs","window","dialogsReduser","body","newMessageBody","DialogItem","path","dialog","active","DialogItem__link","Message","maxLength100","MessageFormRedux","textMessage","textarea","autoFocus","btn","btnSend","button","Messages","dialogsElement","map","d","key","messagesElement","m","wrapper__messages","wrapper_dev","dev","title","stick","flexbox","wrapper__messanger","messanger","values","sendMessage","compose","dialogsPage","newMessageText","sendMessageAC","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","currentPageUsers","currentPageFriends","followingInProgress","followSuccess","unfollowSuccess","setUsers","setCurrentPageUsers","setCurrentPageFriends","setTotalUsersCount","count","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","ACFollowUnfollow","bind","usersReduser","followed","filter","getUsersArray","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPageUsers","getCurrentPageFriends","getIsFetching","getFollowingInProgress","Preloader","loader","preloader","Paginator","onPageChanged","portionSize","useState","portionNumber","setPortionNumber","pages","pagesCount","Math","ceil","i","push","useEffect","leftPortionPageNumber","rightPortionPageNumber","numberPage","wrapperPrev","portion","onClick","href","p","wrapperPage","selectedPage","User","wrapper","wrapper__avatar","user","avatar","photos","small","userPhoto","btn__wrapper","disabled","some","btn__unfollow","btn__follow","wrapper__info","nickName","userName__link","location","MyFriends","f","page","totalCount","pageNumber","hundleClick","nav","link","navData","isActive","item","line","posts","newPostText","urlProfilePhoto","persistConfig","storage","blacklist","setProfileStatus","persistReducer","isDelete","Contact","wrapperContact","contactTitle","contactValue","AdditionalInformation","editMode","setEditMode","wrapperAddInf","lookingForAJob","lookingForAJobDescription","fullName","wrapperContacts","editModeActive","Object","keys","contacts","Posts","deleteBtn","deletePost","maxLength500","MyPostReduxForm","setText","refForm","useRef","ref","textarea__wrapper","onChange","target","MyPosts","addPost","idPost","MyPostsContainer","addPostAC","ProfileStatus","updateStatusEnter","React","createRef","setStatus","deactivateEditeMode","data-testid","aboutMe__editor","current","addEventListener","keyPress","once","currentTarget","onBlur","defaultValue","onMouseDown","ModalWindow","setEctive","setPhoto","profilePhotoLarge","userImage","setUserPhoto","photoImg","URL","createObjectURL","stopPropagation","htmlFor","files","Lorem","ProfileInfo","setActive","photo","updateProfilePhoto","profile__wrapper","wrapper_img","profile__img","large","profile__info","userName","about__user","Profile","content","authUserId","getProfile","useParams","isSelectedDarkTheme","settingPageRedusers","isSelected","useTheme","localStorage","getItem","theme","setTheme","useLayoutEffect","document","documentElement","setAttribute","setItem","SwitchInput","selectedDarkTheme","defaultChecked","SettingComponent","wrapperFields","inputLabel","SettingCompContainer","settingPage","Users","DesktopView","element","MessagesContainer","burger_menu","MobileView","wrapper_app","TabletView","initialized","appReduser","reducers","combineReducers","profileReducer","dialogsReducer","formReduser","app","whitelist","pReducer","store","createStore","composeWithDevTools","applyMiddleware","thankMiddleware","persistor","persistStore","AppContainer","initialize","initializeApp","promise","Promise","all","then","isDesktop","useMediaQuery","query","isMobile","isTablet","AppSocialNet","loading","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e23b0421.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogItem__link\":\"Messages_DialogItem__link__33PbV\",\"wrapper__messages\":\"Messages_wrapper__messages__CDFYn\",\"stick\":\"Messages_stick__Qc2eg\",\"title\":\"Messages_title__pIh41\",\"dialogs\":\"Messages_dialogs__XPT6q\",\"dialog\":\"Messages_dialog__2V5E5\",\"flexbox\":\"Messages_flexbox__3imSB\",\"wrapper__messanger\":\"Messages_wrapper__messanger__1R0Tp\",\"message\":\"Messages_message__261ss\",\"textMessage\":\"Messages_textMessage__1ok3y\",\"textarea\":\"Messages_textarea__3P9h4\",\"btn\":\"Messages_btn__3MJMT\",\"btnSend\":\"Messages_btnSend__2myXy\",\"button\":\"Messages_button__fFOGJ\",\"wrapper_dev\":\"Messages_wrapper_dev__1gWg-\",\"dev\":\"Messages_dev__xdIBV\"};","module.exports = __webpack_public_path__ + \"static/media/logout.6517ee94.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__10b2e\",\"settings\":\"Nav_settings__2oTSh\",\"line\":\"Nav_line__2AtEq\",\"link\":\"Nav_link__3K76f\",\"active\":\"Nav_active__-BRCk\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.ef886190.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__aA5wi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMe__editor\":\"ProfileStatus_aboutMe__editor__2qwYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__2ZNx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLoginPage\":\"LoginPage_wrapperLoginPage__2Xo9p\",\"titleLogin\":\"LoginPage_titleLogin__2l-MN\",\"formSummaryError\":\"LoginPage_formSummaryError__G0KR2\",\"form\":\"LoginPage_form__1s0tv\",\"submit\":\"LoginPage_submit__2wVZN\",\"loginBtn\":\"LoginPage_loginBtn__2BwR3\",\"error\":\"LoginPage_error__1ason\",\"imgCaptcha\":\"LoginPage_imgCaptcha__3LsKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__nG39w\",\"users\":\"Users_users__3q2xW\",\"btn__wrapper\":\"Users_btn__wrapper__14PVJ\",\"btn__follow\":\"Users_btn__follow__30RWI\",\"btn__unfollow\":\"Users_btn__unfollow__2SjfL\",\"btn__follow__click\":\"Users_btn__follow__click__1ePmR\",\"wrapper__avatar\":\"Users_wrapper__avatar__3Qg9Z\",\"wrapper__info\":\"Users_wrapper__info__3vtXE\",\"avatar\":\"Users_avatar__3BGp6\",\"nickName\":\"Users_nickName__1FtBh\",\"status\":\"Users_status__2mGkl\",\"location\":\"Users_location__2PH_j\",\"userName__link\":\"Users_userName__link__2XL54\"};","module.exports = __webpack_public_path__ + \"static/media/user.8c62dd08.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPost_wrapper__3QE7p\",\"textarea\":\"MyPost_textarea__34Cz3\",\"btn__wrapper\":\"MyPost_btn__wrapper__3WtTe\",\"btn\":\"MyPost_btn__3iPP4\"};","import React from \"react\";\r\nimport logout from \"../../../assets/img/logout.svg\"\r\nimport classes from \"./LogoutSvg.module.css\"\r\n\r\nconst LogoutSvg = () => {\r\n    return (\r\n        <div className={classes.logout__img}>\r\n            <img src={logout}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoutSvg","import React from \"react\";\r\nimport classes from \"./AuthComponent.module.css\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport LogoutSvg from \"../Common/LogoutSvg/LogoutSvg\";\r\n\r\nconst LogoutForm = (props) => {\r\n    return (\r\n        <div className={classes.login__block}>\r\n            <form className={classes.login__form} onSubmit={props.handleSubmit}>\r\n                <p className={classes.login}> {props.isAuth ? props.login :\r\n                    <NavLink to={'/login'}>Login</NavLink>} {props.isAuth ?\r\n                        <button className={classes.btn__logout}><LogoutSvg /></button> : \"\"}</p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LogoutReduxForm = reduxForm({ form: 'logout' })(LogoutForm)\r\n\r\nexport default LogoutReduxForm","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: { \"API-KEY\": \"f875b6a1-5fef-48ce-a963-4e6042f223a9\" }\r\n})\r\n\r\nexport const usersAPI = {\r\n    requestGetUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    requestGetFriendUsers(currentPage, pageSize, friend = true) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}&friend=${friend}`)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId.id}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId.id}`)\r\n    },\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getProfileStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateProfileStatus(status) {\r\n        return instance.put(`profile/status`, { status })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrlData() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}","import { stopSubmit } from \"redux-form\"\r\nimport { authAPI, securityAPI } from \"../api/api\"\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst OUT_AUTH_USER_DATA = 'OUT_AUTH_USER_DATA'\r\nconst GET_CAPTCHA_URL = 'GET_CAPTCHA_URL'\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    rememberMe: boolean,\r\n    isAuth: boolean,\r\n    captchaUrl: null\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    rememberMe: false,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case OUT_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype PayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataType = {\r\n    type: typeof SET_AUTH_USER_DATA\r\n    payload: PayloadType\r\n}\r\nexport const setAuthUserData = (userId: number, email: string, login: string, isAuth: boolean): SetAuthUserDataType =>\r\n    ({ type: SET_AUTH_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\ntype OutAuthUserDataType = {\r\n    type: typeof OUT_AUTH_USER_DATA\r\n    payload: PayloadType\r\n}\r\nexport const outAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): OutAuthUserDataType =>\r\n    ({ type: OUT_AUTH_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\ntype GetCaptchaUrlType = {\r\n    type: typeof GET_CAPTCHA_URL\r\n    payload: object | null\r\n}\r\nexport const getCaptchaUrl = (captchaUrl: object): GetCaptchaUrlType => ({ type: GET_CAPTCHA_URL, payload: { captchaUrl } })\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrlData = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrlData()\r\n    const captchaUrl = response.data.url\r\n    dispatch(getCaptchaUrl(captchaUrl))\r\n}\r\n\r\nexport const login = (email: string | null, password: string | null, rememberMe: boolean, captcha: any) =>\r\n    async (dispatch: any) => {\r\n        let response = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrlData())\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\"\r\n            dispatch(stopSubmit(\"login\", { _error: message }))\r\n        }\r\n    }\r\n\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(outAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReduser","import React from \"react\";\r\nimport LogoutReduxForm from \"./LogoutForm\";\r\nimport classes from \"./AuthComponent.module.css\"\r\nimport { logout } from \"../../Redux/auth-reduser\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AuthComponent = (props) => {\r\n    \r\n    const onSubmit = () => {\r\n        props.logout()\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.login__block}>\r\n            <LogoutReduxForm {...props} onSubmit={onSubmit} isAuth={props.isAuth}\r\n                login={props.login} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(AuthComponent)","import classes from './Header.module.css';\r\nimport React from 'react';\r\nimport AuthComponent from '../../AuthComponent/AuthComponent';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={classes.header__wrapper}>\r\n            <div className={classes.header}>\r\n                <div className={classes.logo}>\r\n                    <p>Social ·</p>\r\n                    <p className={classes.logo__text}>· NET</p>\r\n                </div>\r\n                <AuthComponent />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\n\r\nconst HeaderContainer = (props) => {\r\n    return (\r\n        <Header { ...props } />\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps)(HeaderContainer)","export const required = value => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport classes from \"./formControls.module.css\";\r\n\r\nexport const FormControl = ({ meta: {touched, error}, children }) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span className={classes.formError}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst submitFormonEnter = (e) => {\r\n    if (e.keyCode === 13) {\r\n        e.preventDefault()\r\n    }\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea onSubmit={submitFormonEnter} {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input className={classes.inputWrapper} {...input} {...restProps} autoComplete=\"off\" /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div className={classes.fieldControl}>\r\n        <Field placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props} /> <span className={classes.rememberMe}>{text}</span>\r\n    </div>\r\n)\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { required } from \"../../../../utils/validators/validators\";\r\nimport { createField, Input } from \"../../../Common/formsControls/formControls\";\r\nimport classes from \"../LoginPage.module.css\";\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <div className={error ? classes.formSummaryError : classes.form}>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={classes.titleLogin}>\r\n                    <p className={classes.loginTitle}>LOGIN</p>\r\n                </div>\r\n                {createField('Email', \"email\", [required], Input)}\r\n                {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n                {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"Remember Me\")}\r\n\r\n                {captchaUrl && <img className={classes.imgCaptcha} src={captchaUrl} />}\r\n                {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {})}\r\n                <div className={classes.submit}>\r\n                    <button className={classes.loginBtn}>Log In</button>\r\n                    <span className={classes.error}>{error && <div> {error} </div>}</span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default LoginReduxForm","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { login } from \"../../../Redux/auth-reduser\";\r\nimport LoginReduxForm from \"./LoginForm/LoginForm\";\r\nimport classes from \"./LoginPage.module.css\";\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate replace to={\"/profile\"} />\r\n    }\r\n    \r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapperLoginPage}>\r\n            <div className={classes.wrapperForm}>\r\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { login })(LoginPage)","import { connect } from \"react-redux\";\r\nimport LoginPage from \"./LoginPage\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        isFetching: state.usersPage.isFetching,\r\n        profile: state.profilePage.profile,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nconst LoginPageContainer = connect(mapStateToProps)(LoginPage)\r\n\r\nexport default LoginPageContainer\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport const withAuthLocation = (Component) => {\r\n    const mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    const LocationComponent = (props) => {\r\n        if (!props.isAuth) {\r\n            return <Navigate replace to={\"/login\"} />\r\n        }\r\n        return <Component {...props} /> \r\n    }\r\n    const ConnectedAuthLocation = connect(mapStateToProps)(LocationComponent)\r\n    return ConnectedAuthLocation\r\n}","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Nick 1' },\r\n    { id: 2, name: 'Nick 2' },\r\n    { id: 3, name: 'Nick 3' },\r\n    { id: 4, name: 'Nick 4' },\r\n    { id: 5, name: 'Nick 5' }\r\n  ],\r\n  messages: []\r\n}\r\n\r\nwindow.initialState = initialState;\r\n\r\nconst dialogsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: action.id, message: body}] \r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageAC = (newMessageBody, id) => ({ type: SEND_MESSAGE, newMessageBody, id })\r\nexport default dialogsReduser;","import classes from './../Messages.module.css';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/messages/' + props.id;\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink className={classes.DialogItem__link} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogItem;","import classes from './../Messages.module.css';\r\nimport React from 'react';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from \"../Messages.module.css\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, required } from \"../../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../Common/formsControls/formControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <div className={classes.textMessage}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div >\r\n                    <Field className={classes.textarea} component={Textarea}\r\n                        name=\"newMessageBody\" placeholder=\"Enter your message\" autoFocus\r\n                        validate={[required, maxLength100]}  />\r\n                </div>\r\n                <div className={classes.btn}>\r\n                    <div className={classes.btnSend}>\r\n                        <button className={classes.button}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const MessageFormRedux = reduxForm({ form: \"dilogAddMessageForm\" })(MessageForm)","import classes from './Messages.module.css';\r\nimport React from 'react';\r\nimport DialogItem from './DilogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { MessageFormRedux } from './MessageForm/MessageForm';\r\n\r\nconst Messages = (props) => {\r\n\r\n    let addNewMessage = (values) => {\r\n        if (values.newMessageBody) {\r\n            props.sendMessage(values.newMessageBody)\r\n            values.newMessageBody = ''\r\n        }\r\n    }\r\n\r\n    let dialogsElement = props.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n    let messagesElement = props.messages.map(m => <Message message={m.message} key={m.id} id={m.id} />)\r\n\r\n    return (\r\n        <div className={classes.wrapper__messages}>\r\n            {<div className={classes.wrapper_dev}><h2 className={classes.dev}>Currently under development</h2></div> ??\r\n                <div>\r\n                    <h2 className={classes.title}>Dialogs</h2>\r\n                    <div className={classes.dialogs}>\r\n                        {dialogsElement}\r\n                    </div>\r\n                    <span className={classes.stick}></span>\r\n                    <div className={classes.flexbox}>\r\n                        <div className={classes.wrapper__messanger}>\r\n                            <div className={classes.messanger}>\r\n                                {messagesElement}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <MessageFormRedux onSubmit={addNewMessage} />\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Messages;","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthLocation } from \"../../../hoc/withAuthLocation\";\r\nimport { sendMessageAC } from \"../../../Redux/dialogs-reduser\";\r\nimport Messages from \"./Messages\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody, id) => {\r\n            dispatch(sendMessageAC(newMessageBody, id));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthLocation\r\n)(Messages)","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u\r\n    })\r\n} ","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/objects-helper\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE_USERS = 'SET_CURRENT_PAGE_USERS'\r\nconst SET_CURRENT_PAGE_FRIENDS = 'SET_CURRENT_PAGE_FRIENDS'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPageUsers: 1,\r\n    currentPageFriends: 1,\r\n    isFetching: true,\r\n    followingInProgress: [null]\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersReduser = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE_USERS: {\r\n            return { ...state, currentPageUsers: action.currentPageUsers }\r\n        }\r\n        case SET_CURRENT_PAGE_FRIENDS: {\r\n            return { ...state, currentPageFriends: action.currentPageFriends }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype FollowSuccessType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\ntype UnfollowSuccessType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: string\r\n}\r\ntype SetCurrentPageUsersType = {\r\n    type: typeof SET_CURRENT_PAGE_USERS\r\n    currentPageUsers: number\r\n}\r\ntype SetCurrentPageFriendsType = {\r\n    type: typeof SET_CURRENT_PAGE_FRIENDS\r\n    currentPageFriends: number\r\n}\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\ntype ToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\ntype ToggleFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowSuccessType => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessType => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users: string): SetUsersType => ({ type: SET_USERS, users })\r\nexport const setCurrentPageUsers = (currentPageUsers: number): SetCurrentPageUsersType => ({ type: SET_CURRENT_PAGE_USERS, currentPageUsers })\r\nexport const setCurrentPageFriends = (currentPageFriends: number): SetCurrentPageFriendsType => ({ type: SET_CURRENT_PAGE_FRIENDS, currentPageFriends })\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountType =>\r\n    ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingType => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressType =>\r\n    ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestGetUsers = (page: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPageUsers(page))\r\n    let response = await usersAPI.requestGetUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items))\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\n\r\nexport const requestGetFriendUsers = (page: number, pageSize: number, friend: boolean) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPageFriends(page))\r\n    let response = await usersAPI.requestGetFriendUsers(page, pageSize, friend)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items))\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: { id: number }, apiMethod: any, ACFollowUnfollow: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId.id))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(ACFollowUnfollow(userId.id))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId.id))\r\n}\r\n\r\nexport const follow = (userId: { id: number }) => async (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId: { id: number }) => async (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport default usersReduser;","import { createSelector } from \"reselect\"\r\n\r\nexport const getUsersArray = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersArray, \r\n    (users) => {\r\n        return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageUsers = (state) => {\r\n    return state.usersPage.currentPageUsers\r\n}\r\n\r\nexport const getCurrentPageFriends = (state) => {\r\n    return state.usersPage.currentPageFriends\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport preloader from '../../../assets/img/preloader.svg'\r\nimport classes from './Preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={classes.loader}>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({ totalUsersCount, pageSize, onPageChanged, currentPage, portionSize = 15 }) => {\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    let pages = []\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    for (let i = 1; i <= pagesCount; i++) pages.push(i)\r\n    \r\n    useEffect(() => {\r\n        setPortionNumber(Math.ceil(currentPage / portionSize))\r\n    }, [currentPage])\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const selectedNextPortion = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n        onPageChanged(currentPage + 15)\r\n    }\r\n\r\n    const selectedPrevPortion = () => {\r\n        setPortionNumber(portionNumber + 1)\r\n        onPageChanged(currentPage - 15)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.numberPage}>\r\n            <div className={classes.wrapperPrev}> {portionNumber > 1 &&\r\n                <button className={classes.portion} onClick={selectedPrevPortion}><a href=\"#top\">prev</a></button>} </div>\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p, id) => {\r\n                    return <div\r\n                        onClick={() => { onPageChanged(p) }} className={classes.wrapperPage} key={id}>\r\n                        <button className={currentPage === p ? classes.selectedPage : \"\"}><a href=\"#top\">{p}</a></button></div>\r\n                })\r\n            }\r\n            {pagesCount > 14 &&\r\n                <button className={classes.portion} onClick={selectedNextPortion}><a href=\"#top\">next</a></button>}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"../Users.module.css\";\r\nimport userPhoto from '../../../../assets/img/user.jpg'\r\n\r\nconst User = (props) => {\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.wrapper__avatar}>\r\n                <div>\r\n                    <NavLink to={\"/profile/\" + props.user.id}>\r\n                        <img className={classes.avatar} src={props.user.photos.small != null ? props.user.photos.small : userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={classes.btn__wrapper}>\r\n                    {props.user.followed ? <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                        className={classes.btn__unfollow} onClick={() => { props.unfollow(props.user) }}>Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                            className={classes.btn__follow} onClick={() => { props.follow(props.user) }}>Follow</button>}\r\n                </div>\r\n            </div>\r\n            <div className={classes.wrapper__info}>\r\n                <div>\r\n                    <div className={classes.nickName}>\r\n                        <NavLink to={\"/profile/\" + props.user.id} className={classes.userName__link}>{props.user.name}</NavLink>\r\n                    </div>\r\n                    <div className={classes.status}>{props.user.status}</div>\r\n                </div>\r\n                <div className={classes.location}>\r\n                    <div>{/*u.location.country*/ \"USA,\"}</div>\r\n                    <div>{/*\"u.location.city\"*/ \"New York\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport Paginator from '../../Common/Paginator/Paginator';\r\nimport User from '../Users/User/User';\r\n\r\nconst MyFriends = ({ users, followed, followingInProgress, follow, unfollow,\r\n    onPageChanged, pageSize, totalUsersCount, currentPage }) => {\r\n\r\n    return (\r\n        <div>\r\n            {users.map(f => <User user={f} key={f.id} followed={followed} followingInProgress={followingInProgress}\r\n                unfollow={unfollow} follow={follow} />)}\r\n            <Paginator totalUsersCount={totalUsersCount} pageSize={pageSize}\r\n                currentPage={currentPage} onPageChanged={onPageChanged} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyFriends","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthLocation } from '../../../hoc/withAuthLocation'\r\nimport { follow, requestGetFriendUsers, setCurrentPageFriends, toggleFollowingProgress, unfollow } from '../../../Redux/users-reduser'\r\nimport { getCurrentPageFriends, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsersArray } from '../../../Redux/users-selector'\r\nimport Preloader from '../../Common/Preloader/Preloader'\r\nimport MyFriends from './MyFriends'\r\n\r\nconst MyFriendsContainer = ({ users, currentPage, pageSize, requestGetFriendUsers, follow, unfollow, isFetching,\r\n    totalUsersCount, followingInProgress }) => {\r\n\r\n    useEffect(() => {\r\n        requestGetFriendUsers(currentPage, pageSize)\r\n    }, [])\r\n    const onPageChanged = (pageNumber) => {\r\n        requestGetFriendUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <a name='top'></a>\r\n            {isFetching ? <Preloader /> :\r\n                <MyFriends\r\n                    totalUsersCount={totalUsersCount}\r\n                    pageSize={pageSize}\r\n                    users={users}\r\n                    unfollow={unfollow}\r\n                    follow={follow}\r\n                    onPageChanged={onPageChanged}\r\n                    currentPage={currentPage}\r\n                    followingInProgress={followingInProgress} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: getUsersArray(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPageFriends(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n})\r\n\r\nexport default\r\n    compose(\r\n        connect(mapStateToProps,\r\n            {\r\n                setCurrentPageFriends,\r\n                requestGetFriendUsers,\r\n                toggleFollowingProgress,\r\n                follow,\r\n                unfollow\r\n            }), withAuthLocation)(MyFriendsContainer)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { setCurrentPageFriends, setCurrentPageUsers } from '../../../Redux/users-reduser';\r\nimport classes from './Nav.module.css';\r\n\r\nconst Nav = ({ setCurrentPageUsers, setCurrentPageFriends }) => {\r\n    const hundleClick = (e) => {\r\n        e.preventDefault()\r\n        setCurrentPageFriends(1)\r\n        setCurrentPageUsers(1)\r\n    }\r\n\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.link}>\r\n                <NavLink className={navData => navData.isActive ? classes.active : classes.item} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <NavLink className={navData => navData.isActive ? classes.active : classes.item} to=\"/messages\">Messages</NavLink>\r\n            </div>\r\n            <div className={classes.link} onClick={hundleClick}>\r\n                <NavLink className={navData => navData.isActive ? classes.active : classes.item} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={classes.link} onClick={hundleClick}>\r\n                <NavLink className={navData => navData.isActive ? classes.active : classes.item} to=\"/friends\">My Friends</NavLink>\r\n            </div>\r\n            <div className={classes.line}></div>\r\n            <div className={classes.link}>\r\n                <NavLink className={navData => navData.isActive ? classes.active : classes.item} to=\"/settings\">My Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // someState\r\n})\r\n\r\nexport default connect(mapStateToProps, { setCurrentPageFriends, setCurrentPageUsers })(Nav);","import persistReducer from \"redux-persist/es/persistReducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SET_PHOTO_PROFILE = 'SET_PHOTO_PROFILE'\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\ntype PostType = {\r\n  id: number\r\n  message: string\r\n  isDelete: boolean\r\n}\r\ntype ContactsType = {\r\n  github: string\r\n  vk: string\r\n  facebook: string\r\n  instagram: string\r\n  twitter: string\r\n  website: string\r\n  youtube: string\r\n  mainLink: string\r\n}\r\ntype PhotosType = {\r\n  small: string | null\r\n  large: string | null\r\n}\r\ntype ProfileType = {\r\n  userId: number\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string\r\n  fullName: string\r\n  contacts: ContactsType\r\n  photos: PhotosType\r\n}\r\n\r\nlet initialState = {\r\n  posts: [] as Array<PostType>,\r\n  id: 0,\r\n  newPostText: '',\r\n  profile: null as ProfileType | null,\r\n  isFetching: true,\r\n  status: '',\r\n  urlProfilePhoto: null\r\n}\r\n\r\nconst persistConfig: any = {\r\n  key: 'root',\r\n  storage: storage,\r\n  blacklist: ['urlProfilePhoto', 'status', 'isFetching', 'profile']\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let body = action.newPostText\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, { id: action.id, message: body, isDelete: false }]\r\n      }\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts.filter(post => post.isDelete !== false)]\r\n      }\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    case SET_PHOTO_PROFILE:\r\n      return {\r\n        ...state,\r\n        urlProfilePhoto: action.urlProfilePhoto\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype AddPostACType = {\r\n  type: typeof ADD_POST\r\n  newPostText: string\r\n  id: number\r\n}\r\ntype SetUserProfileType = {\r\n  type: typeof SET_USER_PROFILE\r\n  profile: ProfileType\r\n}\r\ntype SetProfileStatusType = {\r\n  type: typeof SET_STATUS\r\n  status: string\r\n}\r\nexport const addPostAC = (newPostText: string, id: number): AddPostACType => ({ type: ADD_POST, newPostText, id })\r\nexport const deletePost = (isDelete: boolean) => ({ type: DELETE_POST, isDelete })\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => ({ type: SET_USER_PROFILE, profile })\r\nexport const setProfileStatus = (status: string): SetProfileStatusType => ({ type: SET_STATUS, status })\r\nexport const updateProfilePhoto = (urlProfilePhoto: object) => ({ type: SET_PHOTO_PROFILE, urlProfilePhoto })\r\n\r\nexport const getProfile = (userId: number) => async (dispatch: any) => {\r\n  let response = await usersAPI.getUserProfile(userId)\r\n  dispatch(setUserProfile(response.data))\r\n}\r\nexport const getProfileStatus = (userId: number) => async (dispatch: any) => {\r\n  let response = await usersAPI.getProfileStatus(userId)\r\n  dispatch(setProfileStatus(response.data))\r\n}\r\nexport const updateProfileStatus = (status: string) => async (dispatch: any) => {\r\n  let response = await usersAPI.updateProfileStatus(status)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setProfileStatus(status))\r\n  }\r\n}\r\n\r\nexport default persistReducer(persistConfig, profileReducer);","import React, { useState } from 'react';\r\nimport classes from './AdditionalInformation.module.css';\r\n\r\nconst AdditionalInformation = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const activetedMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapperAddInf}>\r\n            <div>\r\n                <p>\r\n                    <b>lookingForAJob:</b>\r\n                    <span>{props.profile.lookingForAJob ? \"Yes\" : \"No\"}</span>\r\n                </p>\r\n            </div>\r\n            {props.profile.lookingForAJob &&\r\n                <div>\r\n                    <p>\r\n                        <b>My profissional skill:</b>\r\n                        <span>{props.profile.lookingForAJobDescription}</span>\r\n                    </p>\r\n                </div>\r\n            }\r\n            <div>\r\n                <p>\r\n                    <b>Full name:</b> \r\n                    <span>{props.profile.fullName}</span>\r\n                    </p>\r\n            </div>\r\n            <div className={classes.wrapperContacts}>\r\n                <b>Contacts:</b>\r\n                <span onClick={activetedMode}>\r\n                    <p className={editMode ? classes.editModeActive : null}>&#5125;</p>\r\n                </span>\r\n                {editMode && Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key}\r\n                        contactValue={props.profile.contacts[key]} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = (props) => {\r\n\r\n    return (\r\n        <div className={classes.wrapperContact}>\r\n            <p><b>{props.contactTitle}:</b> {!props.contactValue ? \"-\" : props.contactValue}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdditionalInformation","import React, { useState } from 'react';\r\nimport userPhoto from '../../../../assets/img/user.jpg';\r\nimport classes from './Posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n    const [isDelete, setIsDelete] = useState(false)\r\n\r\n    const handleClick = (e) => {\r\n        setIsDelete(!isDelete)\r\n        props.deletePost(isDelete)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            {props.posts.map((post, id, isDelete) => (\r\n                <ul key={id}>\r\n                    <li>\r\n                        <div className={classes.post}>\r\n                            <div className={classes.avatar}>\r\n                                <img src={props.profile.photos.small != null ? props.profile.photos.small : userPhoto} />\r\n                            </div>\r\n                            <div className={classes.text}>\r\n                                {post.message}\r\n                                <span className={classes.deleteBtn} onClick={() => props.deletePost(!isDelete)}>x</span>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React, { useRef, useState } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../../Common/formsControls/formControls\";\r\nimport classes from \"../MyPost.module.css\";\r\n\r\nconst maxLength500 = maxLengthCreator(500)\r\n\r\nconst MyPostForm = (props) => {\r\n    const [text, setText] = useState('')\r\n    const refForm = useRef()\r\n\r\n    return (\r\n        <div>\r\n            <form ref={refForm} onSubmit={props.handleSubmit}>\r\n                <div className={classes.textarea__wrapper}>\r\n                    <Field component={Textarea} name=\"newPostText\" className={classes.textarea}\r\n                        validate={[required, maxLength500]} placeholder={\"Post message\"}\r\n                            value={text} onChange={e => setText(e.target.value)} />\r\n                    {/* { createField(\"Post message\", \"newPostText\", [required], Textarea, {}) } */}\r\n                </div>\r\n                <div className={classes.btn__wrapper}>\r\n                    <button className={classes.btn} type=\"submit\">Post</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const MyPostReduxForm = reduxForm({ form: \"addMyPostForm\" })(MyPostForm)","import React from 'react';\r\nimport Preloader from '../../../Common/Preloader/Preloader';\r\nimport Posts from '../Posts/Posts';\r\nimport classes from './MyPost.module.css';\r\nimport { MyPostReduxForm } from './MyPostForm/MyPostForm';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    const onPostMessage = (values) => {\r\n        if (values.newPostText) {\r\n            props.addPost(values.newPostText, props.id)\r\n            values.newPostText = ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <MyPostReduxForm onSubmit={onPostMessage} addPost={props.addPost} newPostText={props.newPostText} />\r\n            <h2>Posts:</h2>\r\n            <div className={classes.Posts}>\r\n                {props.isFetching ?\r\n                    <Posts posts={props.posts} id={props.id} deletePost={props.deletePost} profile={props.profile} idPost={props.idPost} />\r\n                    : <Preloader />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostAC, deletePost } from '../../../../Redux/profile-reduser';\r\nimport MyPosts from './MyPost';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText, id) => {\r\n            dispatch(addPostAC(newPostText, id));\r\n        },\r\n        deletePost: (isDelete) => {\r\n            dispatch(deletePost(isDelete))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./ProfileStatus.module.css\"\r\n\r\nconst ProfileStatus = (props) => {\r\n    const updateStatusEnter = React.createRef()\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditeMode = () => {\r\n        setEditMode(false)\r\n        if (!props.status) {\r\n            props.updateProfileStatus(\"Установить статус\")\r\n        } else {\r\n            props.updateProfileStatus(status)\r\n        }\r\n    }\r\n    const deactivateEditeModeOnBlur = () => {\r\n        setEditMode(false)\r\n        return props.status\r\n    }\r\n    const clickButtonEnten = () => {\r\n        updateStatusEnter.current.addEventListener('keydown', (keyPress) => {\r\n            if (keyPress.keyCode === 13) {\r\n                keyPress.preventDefault()\r\n                deactivateEditeMode()\r\n            }\r\n        }, { once: true })\r\n    }\r\n    const onStatusChange = (e) => {\r\n        clickButtonEnten()\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(() => {\r\n        if (status !== props.status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status]) \r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span data-testid=\"status\" className={classes.aboutMe__editor} onClick={activateEditMode} >\r\n                        {props.status ? props.status : \"Установить статус\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input data-testid=\"status-input\" ref={updateStatusEnter}\r\n                        onChange={onStatusChange} autoFocus onBlur={deactivateEditeModeOnBlur}\r\n                        defaultValue={status} maxLength={300} placeholder='Введите статус' type=\"text\" />\r\n                    <div>\r\n                        <button data-testid=\"btn-status\" onClick={deactivateEditeMode}\r\n                            onMouseDown={deactivateEditeMode} type=\"submit\">Сохранить</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import React, { useState } from 'react'\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\nimport './ModalWindow.css'\r\n\r\nconst ModalWindow = ({ active, setEctive, setPhoto, children, profilePhotoLarge }) => {\r\n    const [userImage, setUserPhoto] = useState(null)\r\n\r\n    const deactiveModalWindow = () => {\r\n        if (!profilePhotoLarge && userImage) {\r\n            let photoImg = URL.createObjectURL(userImage)\r\n            setPhoto(photoImg)\r\n        }\r\n        setEctive(!active)\r\n    }\r\n\r\n    return (\r\n        <div className={active ? \"modalWrapper active\" : \"modalWrapper\"} onClick={deactiveModalWindow}>\r\n            <div className=\"closedBtn\" onClick={() => setEctive(!active)}>x</div>\r\n            <div className={active ? \"modalContent active\" : \"modalContent\"} onClick={e => e.stopPropagation()}>\r\n                {userImage && <img src={URL.createObjectURL(userImage)} />}\r\n                {!userImage && <img src={children ? children : userPhoto} />}\r\n                <div className='wrapperFileInput'>\r\n                    <label htmlFor=\"file\" className='labelFileInput'>Loading image</label>\r\n                    <input type=\"file\" id='file' className='fileInput' name=\"file\"\r\n                        onChange={(e) => setUserPhoto(e.target.files[0])}></input>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWindow","import React from \"react\";\r\n\r\nconst Lorem = () => {\r\n    return <div>\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat deleniti ipsam veritatis.'\r\n    </div>\r\n}\r\n\r\nexport default Lorem","import classes from './ProfileInfo.module.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport userPhoto from '../../../../assets/img/user.jpg'\r\nimport Preloader from '../../../Common/Preloader/Preloader';\r\nimport ModalWindow from '../../../Common/ModalWindow/ModalWindow';\r\nimport Lorem from '../../../Common/Lorem/Lorem';\r\n\r\nconst ProfileInfo = (props) => {\r\n    const [active, setActive] = useState(false)\r\n    const [photo, setPhoto] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (photo) {\r\n            props.updateProfilePhoto(photo)\r\n        }\r\n    })\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profile__wrapper}>\r\n            <div className={classes.wrapper_img}>\r\n                <img className={classes.profile__img}\r\n                    src={props.profile.photos.large ?? props.urlProfilePhoto ?? userPhoto} onClick={() => setActive(!active)} />\r\n            </div>\r\n            <ModalWindow active={active} setEctive={setActive} setPhoto={setPhoto}\r\n                profilePhotoLarge={props.profile.photos.large} children={props.profile.photos.large} />\r\n            <div className={classes.profile__info}>\r\n                <div className={classes.userName}>{props.profile.fullName}</div>\r\n                <div className={classes.about__user}>{\r\n                    <ProfileStatus /> != null ? <ProfileStatus\r\n                        profile={props.profile}\r\n                        status={props.status}\r\n                        updateProfileStatus={props.updateProfileStatus} /> : <Lorem />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport AdditionalInformation from '../AdditionalInformation/AdditionalInformation';\r\nimport MyPostsContainer from './MyPost/MyPostContainer';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.profile__wrapper}>\r\n                <ProfileInfo profile={props.profile} status={props.status}\r\n                    updateProfileStatus={props.updateProfileStatus} urlProfilePhoto={props.urlProfilePhoto} updateProfilePhoto={props.updateProfilePhoto} />\r\n                <AdditionalInformation profile={props.profile} lookingForAJob={props.lookingForAJob}\r\n                    lookingForAJobDescription={props.lookingForAJobDescription}\r\n                    fullName={props.fullName} contacts={props.contacts} />\r\n                <MyPostsContainer profile={props.profile} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthLocation } from '../../../hoc/withAuthLocation';\r\nimport { getProfile, getProfileStatus, updateProfilePhoto, updateProfileStatus } from '../../../Redux/profile-reduser';\r\nimport Profile from './Profile';\r\n\r\nconst ProfileContainer = (props) => {\r\n    let { userId } = useParams()\r\n\r\n    useEffect(() => {\r\n        if (!userId) {\r\n            userId = props.authUserId\r\n            props.getProfile(userId)\r\n            props.getProfileStatus(userId)\r\n        }\r\n        props.getProfile(userId)\r\n        props.getProfileStatus(userId)\r\n    }, [userId])\r\n\r\n    return (\r\n        <Profile {...props} profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    urlProfilePhoto: state.profilePage.urlProfilePhoto\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getProfileStatus, updateProfileStatus, updateProfilePhoto }),\r\n    withAuthLocation\r\n)(ProfileContainer)","const SELECTED_DARK_THEME = 'SELECTED_DARK_THEME'\r\n\r\nconst initialState = {\r\n    isSelectedDarkTheme: null\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst settingPageRedusers = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SELECTED_DARK_THEME:\r\n            return {\r\n                ...state,\r\n                isSelectedDarkTheme: action.isSelected\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype selectedDarkTheme = {\r\n    type: typeof SELECTED_DARK_THEME\r\n    isSelected: boolean\r\n  }\r\n\r\nexport const selectedDarkTheme = (isSelected: boolean) => ({ type: SELECTED_DARK_THEME, isSelected })\r\n\r\n\r\nexport default settingPageRedusers","import {useState, useLayoutEffect} from 'react'\r\n\r\nexport const useTheme = () => {\r\n    const [theme, setTheme] = useState(\r\n        localStorage.getItem('app-theme')\r\n    )\r\n  \r\n    useLayoutEffect(() => {\r\n      document.documentElement.setAttribute('data-theme', theme)\r\n      localStorage.setItem('app-theme', theme)\r\n    }, [theme])\r\n  \r\n    return { theme, setTheme }\r\n}","import React, { useState, useEffect, useLayoutEffect } from 'react'\r\nimport { useTheme } from '../useTheme/useTheme'\r\nimport './SwitchInput.css'\r\n\r\nconst SwitchInput = ({ isSelected, selectedDarkTheme }) => {\r\n  const { theme, setTheme } = useTheme()\r\n\r\n  const handleClick = () => {\r\n    selectedDarkTheme(!isSelected)\r\n  }\r\n  useEffect(() => {\r\n    if (isSelected) {\r\n      setTheme('dark')\r\n    } else {\r\n      setTheme('light')\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className='wrapperSwitchInput'>\r\n      <fieldset>\r\n        <input type=\"checkbox\" id=\"switch\" onClick={handleClick} defaultChecked={!!isSelected} />\r\n        <label htmlFor=\"switch\">Toggle</label>\r\n      </fieldset>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SwitchInput","import React from 'react'\r\nimport SwitchInput from '../../Common/switchInput/SwitchInput'\r\nimport { useTheme } from '../../Common/useTheme/useTheme'\r\nimport classes from './SettingComponent.module.css'\r\n\r\nconst SettingComponent = ({ isSelected, selectedDarkTheme }) => {\r\n    const { theme, setTheme } = useTheme()\r\n    \r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <h2>Settings:</h2>\r\n            <div className={classes.wrapperFields}>\r\n                <fieldset>\r\n                    <span>Dark theme:</span>\r\n                    <div className={classes.inputLabel}>\r\n                        <SwitchInput isSelected={isSelected} selectedDarkTheme={selectedDarkTheme} />\r\n                    </div>\r\n                </fieldset>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingComponent","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthLocation } from '../../../hoc/withAuthLocation'\r\nimport { selectedDarkTheme } from '../../../Redux/settingComponent-reduser'\r\nimport SettingComponent from './SettingComponent'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isSelected: state.settingPage.isSelectedDarkTheme\r\n    }\r\n}\r\n\r\nconst SettingCompContainer = compose(connect(mapStateToProps, {selectedDarkTheme}), withAuthLocation)(SettingComponent)\r\n\r\nexport default SettingCompContainer","import React from \"react\";\r\nimport Paginator from \"../../Common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\n\r\nconst Users = (props) => {\r\n    return <div>\r\n        {props.users.map(u => <User user={u} key={u.id} followed={props.followed} followingInProgress={props.followingInProgress}\r\n                                    unfollow={props.unfollow} follow={props.follow} />)}\r\n        <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize} \r\n                   currentPage={props.currentPage} onPageChanged={props.onPageChanged} />\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthLocation } from \"../../../hoc/withAuthLocation\";\r\nimport { follow, requestGetUsers, setCurrentPageUsers, toggleFollowingProgress, unfollow } from \"../../../Redux/users-reduser\";\r\nimport { getCurrentPageUsers, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from \"../../../Redux/users-selector\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport Users from './Users';\r\n\r\nconst UsersContainer = (props) => {\r\n    useEffect(() => {\r\n        props.requestGetUsers(props.currentPage, props.pageSize)\r\n    }, [])\r\n    const onPageChanged = (pageNumber) => {\r\n        props.requestGetUsers(pageNumber, props.pageSize)\r\n    }\r\n\r\n    return (<>\r\n        <a name='top'></a>\r\n        {props.isFetching ? <Preloader /> : <Users\r\n            totalUsersCount={props.totalUsersCount}\r\n            pageSize={props.pageSize}\r\n            users={props.users}\r\n            unfollow={props.unfollow}\r\n            follow={props.follow}\r\n            onPageChanged={onPageChanged}\r\n            currentPage={props.currentPage}\r\n            followingInProgress={props.followingInProgress} />}\r\n    </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPageUsers(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default\r\n    compose(\r\n        connect(mapStateToProps,\r\n            {\r\n                setCurrentPageUsers,\r\n                toggleFollowingProgress,\r\n                requestGetUsers,\r\n                follow,\r\n                unfollow\r\n            }), withAuthLocation)(UsersContainer)","import React from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport '../App.css';\r\nimport HeaderContainer from '../components/Dekstop/Header/HeaderContainer';\r\nimport LoginPageContainer from '../components/Dekstop/LoginPage/LoginPageContainer';\r\nimport MessagesContainer from '../components/Dekstop/Messages/MessagesContainer';\r\nimport MyFriendsContainer from '../components/Dekstop/MyFriends/MyFriendsContainer';\r\nimport Nav from '../components/Dekstop/Nav/Nav';\r\nimport ProfileContainer from '../components/Dekstop/Profile/ProfileContainer';\r\nimport SettingCompContainer from '../components/Dekstop/Setting Component/SettingCompContainer';\r\nimport UsersContainer from '../components/Dekstop/Users/UsersContainer';\r\n\r\nconst DesktopView = ({ isAuth, authUserId }) => {\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <HeaderContainer />\r\n            {isAuth && <Nav authUserId={authUserId} />}\r\n            <Routes>\r\n                <Route path='/login' element={ <LoginPageContainer /> } />\r\n            </Routes>\r\n            <div className='app-wrapper-content'>\r\n                <Routes>\r\n                    {/* <Route path='/' element={<Navigate to='/profile' />} /> */}\r\n                    <Route path='/profile' element={ <ProfileContainer /> } >\r\n                        <Route path=':userId' element={ <ProfileContainer /> } />\r\n                    </Route>\r\n                    <Route path='/messages/*' element={ <MessagesContainer /> } />\r\n                    <Route path='/users' element={ <UsersContainer /> } />\r\n                    <Route path='/friends' element={ <MyFriendsContainer /> } />\r\n                    <Route path='/settings' element={ <SettingCompContainer /> } />\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DesktopView","import React from 'react'\r\nimport classes from './Header.module.css'\r\nimport AuthComponent from '../../AuthComponent/AuthComponent'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n        <div className={classes.burger_menu}>M</div>\r\n        <div className={classes.logo}>L</div>\r\n        <AuthComponent />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport classes from './Profile.module.css'\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div className={classes.wrapper}>Profile</div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from \"redux\";\r\nimport { withAuthLocation } from '../../../hoc/withAuthLocation'\r\nimport Profile from './Profile'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //some state\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps), withAuthLocation)(Profile)","import React from 'react'\r\nimport Header from '../components/Mobile/Header/Header'\r\nimport ProfileContainer from '../components/Mobile/Profile/ProfileContainer'\r\nimport classes from './Mobile.module.css'\r\n\r\nconst MobileView = () => {\r\n  return (\r\n    <div className={classes.wrapper_app}>\r\n      <header className={classes.header}>\r\n        <Header />\r\n      </header>\r\n      <nav className={classes.nav}>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <ProfileContainer />\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MobileView","import React from 'react'\r\n\r\nconst TabletView = () => {\r\n  return (\r\n    <div>TabletView</div>\r\n  )\r\n}\r\n\r\nexport default TabletView","import { getAuthUserData } from \"./auth-reduser\"\r\n\r\nconst INITIALIZED__ACCESS = \"INITIALIZED__ACCESS\" \r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED__ACCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitializedSuccessType = {\r\n    type: typeof INITIALIZED__ACCESS\r\n}\r\nexport const initializedSuccess = (): InitializedSuccessType => ({ type: INITIALIZED__ACCESS })\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())  \r\n        })\r\n}\r\n\r\nexport default appReduser","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authReduser from \"./auth-reduser\";\r\nimport dialogsReducer from \"./dialogs-reduser\";\r\nimport profileReducer from \"./profile-reduser\";\r\nimport usersReduser from \"./users-reduser\";\r\nimport thankMiddleware from \"redux-thunk\";\r\nimport { reducer as formReduser } from \"redux-form\";\r\nimport appReduser from \"./app-reduser\";\r\nimport { composeWithDevTools } from \"@redux-devtools/extension\";\r\nimport settingPageRedusers from \"./settingComponent-reduser\";\r\nimport persistReducer from \"redux-persist/es/persistReducer\";\r\nimport persistStore from \"redux-persist/es/persistStore\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReduser,\r\n    settingPage: settingPageRedusers,\r\n    auth: authReduser,\r\n    form: formReduser,\r\n    app: appReduser\r\n})\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    whitelist: ['settingPage', 'dialogsPage', 'profilePage']\r\n};\r\nconst pReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport let store = createStore(pReducer,\r\n    composeWithDevTools(applyMiddleware(thankMiddleware)))\r\n\r\nexport const persistor = persistStore(store)","import React, { useEffect } from 'react';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport DesktopView from './adaptiveComponents/DesktopView';\r\nimport MobileView from './adaptiveComponents/MobileView';\r\nimport TabletView from './adaptiveComponents/TabletView';\r\nimport './App.css';\r\nimport Preloader from './components/Common/Preloader/Preloader';\r\nimport { useTheme } from './components/Common/useTheme/useTheme';\r\nimport { initializeApp } from './Redux/app-reduser';\r\nimport { persistor, store } from './Redux/redux-store';\r\n\r\nconst App = ({ isAuth, authUserId, initializeApp, initialize }) => {\r\n\r\n  const isDesktop = useMediaQuery({\r\n    query: \"(min-width: 1024px)\"\r\n  })\r\n\r\n  const isMobile = useMediaQuery({\r\n    query: \"(max-width: 786px)\"\r\n  })\r\n\r\n  const isPortrait = useMediaQuery({\r\n    query: \"(orientation: portrait)\"\r\n  });\r\n\r\n  const isTablet = useMediaQuery({\r\n    query: \"(max-width: 1224px)\"\r\n  })\r\n\r\n  const isRetina = useMediaQuery({\r\n    query: \"(max-resolution: 300dpi)\"\r\n  });\r\n\r\n  const { theme, setTheme } = useTheme()\r\n\r\n  useEffect(() => {\r\n    initializeApp()\r\n  }, [])\r\n\r\n  if (!initialize) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        isDesktop && <DesktopView isAuth={isAuth} authUserId={authUserId} />\r\n        || isMobile && <MobileView />\r\n        || isTablet && <TabletView />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialize: state.app.initialized,\r\n  authUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nconst AppContainer = connect(mapStateToProps, { initializeApp })(App);\r\n\r\nconst AppSocialNet = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <PersistGate loading={<AppContainer />} persistor={persistor}>\r\n          <AppContainer />\r\n        </PersistGate>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default AppSocialNet","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppSocialNet from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<AppSocialNet />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__block\":\"AuthComponent_login__block__3ElpX\",\"login__form\":\"AuthComponent_login__form__3nhBx\",\"login\":\"AuthComponent_login__2QJvm\",\"btn__logout\":\"AuthComponent_btn__logout__mgB8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formError\":\"formControls_formError__2R1WC\",\"rememberMe\":\"formControls_rememberMe__91V_p\",\"fieldControl\":\"formControls_fieldControl__1DfjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2RV8R\",\"numberPage\":\"Paginator_numberPage__3FpNz\",\"wrapperPage\":\"Paginator_wrapperPage__38qzO\",\"wrapperPrev\":\"Paginator_wrapperPrev__11reI\",\"portion\":\"Paginator_portion__2Y7Bx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__img\":\"ProfileInfo_profile__img__1YHz5\",\"profile__wrapper\":\"ProfileInfo_profile__wrapper__1lM38\",\"profile__info\":\"ProfileInfo_profile__info___2-E8\",\"about__user\":\"ProfileInfo_about__user__2PAIS\",\"userName\":\"ProfileInfo_userName__2xcoE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Posts_wrapper__36xHA\",\"post\":\"Posts_post__3rJVf\",\"avatar\":\"Posts_avatar__3v00Z\",\"text\":\"Posts_text__14GVy\",\"wrapperTextPost\":\"Posts_wrapperTextPost__3TJSQ\",\"deletePost\":\"Posts_deletePost__2IiFD\",\"deleteBtn\":\"Posts_deleteBtn__2FHy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__wrapper\":\"Header_header__wrapper__3sQw5\",\"header\":\"Header_header__iukPu\",\"logo\":\"Header_logo__2wTjx\",\"logo__text\":\"Header_logo__text__1busa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperContact\":\"AdditionalInformation_wrapperContact__nK9nr\",\"wrapperAddInf\":\"AdditionalInformation_wrapperAddInf__eoDdX\",\"wrapperContacts\":\"AdditionalInformation_wrapperContacts__2Ai7B\",\"editModeActive\":\"AdditionalInformation_editModeActive__38PTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_app\":\"Mobile_wrapper_app__1fJMq\",\"header\":\"Mobile_header__25GaK\",\"nav\":\"Mobile_nav__1190s\",\"content\":\"Mobile_content__QxTsA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SettingComponent_wrapper__2kqnP\",\"wrapperFields\":\"SettingComponent_wrapperFields__3kkOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__2BafV\",\"logo\":\"Header_logo__2-1kw\",\"burger_menu\":\"Header_burger_menu__3aPEf\"};"],"sourceRoot":""}