{"version":3,"sources":["components/Masseges/Messages.module.css","assets/img/preloader.svg","components/Common/Preloader/Preloader.module.css","assets/img/logout.svg","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Nav/Nav.module.css","components/Users/Users.module.css","components/LoginPage/LoginPage.module.css","assets/img/user.jpg","components/Profile/MyPost/MyPost.module.css","components/Common/Preloader/Preloader.js","components/Common/LogoutSvg/LogoutSvg.js","components/AuthComponent/LogoutForm.jsx","api/api.js","Redux/auth-reduser.ts","components/AuthComponent/AuthComponent.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","utils/validators/validators.js","components/Common/formsControls/formControls.js","components/LoginPage/LoginForm/LoginForm.jsx","components/LoginPage/LoginPage.jsx","components/LoginPage/LoginPageContainer.jsx","hoc/withAuthLocation.jsx","Redux/dialogs-reduser.js","components/Masseges/DilogItem/DialogItem.jsx","components/Masseges/Message/Message.jsx","components/Masseges/MessageForm/MessageForm.jsx","components/Masseges/Messages.jsx","components/Masseges/MessagesContainer.jsx","utils/objects-helper.js","Redux/users-reduser.ts","Redux/users-selector.js","components/Common/Paginator/Paginator.js","components/Users/User/User.jsx","components/MyFriends/MyFriends.jsx","components/MyFriends/MyFriendsContainer.jsx","components/Nav/Nav.jsx","Redux/profile-reduser.ts","components/Profile/AdditionalInformation/AdditionalInformation.jsx","components/Profile/Posts/Posts.jsx","components/Profile/MyPost/MyPostForm/MyPostForm.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Common/Lorem/Lorem.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Common/ModalWindow/ModalWindow.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","Redux/app-reduser.ts","Redux/redux-store.js","App.js","index.js","components/AuthComponent/AuthComponent.module.css","components/Common/formsControls/formControls.module.css","components/Common/Paginator/Paginator.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/AdditionalInformation/AdditionalInformation.module.css","components/Profile/Posts/Posts.module.css"],"names":["module","exports","Preloader","props","className","classes","loader","src","preloader","LogoutSvg","logout__img","logout","LogoutReduxForm","reduxForm","form","login__block","login__form","onSubmit","handleSubmit","login","isAuth","to","btn__logout","instance","axios","withCredentials","baseURL","headers","usersAPI","requestGetUsers","currentPage","pageSize","get","requestGetFriendUsers","friend","follow","userId","post","id","unfollow","delete","getUserProfile","getProfileStatus","updateProfileStatus","status","put","authAPI","email","password","rememberMe","captcha","securityAPI","initialState","captchaUrl","setAuthUserData","type","payload","getCaptchaUrl","getAuthUserData","dispatch","response","data","resultCode","authReduser","state","action","connect","auth","Header","header__wrapper","header","logo","logo__text","required","value","maxLengthCreator","maxLength","length","FormControl","meta","touched","error","children","hasError","formControl","formError","submitFormonEnter","e","keyCode","preventDefault","Textarea","input","restProps","child","Input","inputWrapper","autocomplete","readonly","createField","placeholder","name","validators","component","text","fieldControl","Field","validate","LoginReduxForm","formSummaryError","submit","loginBtn","url","message","messages","stopSubmit","_error","replace","wrapperLoginPage","titleLogin","loginTitle","formData","LoginPageContainer","isFetching","usersPage","profile","profilePage","LoginPage","withAuthLocation","Component","dialogs","window","dialogsReduser","body","newMessageBody","DialogItem","path","dialog","active","DialogItem__link","Message","maxLength100","MessageFormRedux","textMessage","textarea","autoFocus","btn","btnSend","button","Messages","dialogsElement","map","d","key","messagesElement","m","wrapper__messages","title","stick","flexbox","wrapper__messanger","messanger","values","sendMessage","compose","dialogsPage","newMessageText","sendMessageAC","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","currentPageUsers","currentPageFriends","followingInProgress","followSuccess","unfollowSuccess","setUsers","setCurrentPageUsers","setCurrentPageFriends","setTotalUsersCount","count","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","ACFollowUnfollow","bind","usersReduser","followed","filter","getUsersArray","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPageUsers","getCurrentPageFriends","getIsFetching","getFollowingInProgress","Paginator","onPageChanged","portionSize","useState","portionNumber","setPortionNumber","pages","pagesCount","Math","ceil","i","push","useEffect","leftPortionPageNumber","rightPortionPageNumber","numberPage","wrapperPrev","portion","onClick","href","p","wrapperPage","selectedPage","User","wrapper","wrapper__avatar","user","avatar","photos","small","userPhoto","btn__wrapper","disabled","some","btn__unfollow","btn__follow","wrapper__info","nickName","userName__link","location","MyFriends","f","page","totalCount","pageNumber","hundleClick","nav","link","navData","isActive","item","line","settings","posts","newPostText","urlProfilePhoto","setProfileStatus","profileReducer","Contact","wrapperContact","contactTitle","contactValue","AdditionalInformation","editMode","setEditMode","wrapperAddInf","lookingForAJob","lookingForAJobDescription","fullName","wrapperContacts","editModeActive","Object","keys","contacts","Posts","maxLength500","MyPostReduxForm","setText","refForm","useRef","ref","textarea__wrapper","onChange","target","MyPosts","addPost","deletePost","idPost","MyPostsContainer","addPostAC","Lorem","ProfileStatus","updateStatusEnter","React","createRef","setStatus","deactivateEditeMode","data-testid","aboutMe__editor","current","addEventListener","keyPress","once","currentTarget","onBlur","defaultValue","onMouseDown","ModalWindow","setEctive","setPhoto","profilePhotoLarge","userImage","setUserPhoto","photoImg","URL","createObjectURL","stopPropagation","htmlFor","files","ProfileInfo","setActive","photo","updateProfilePhoto","profile__wrapper","wrapper_img","profile__img","large","profile__info","userName","about__user","Profile","content","authUserId","getProfile","useParams","Users","initialized","appReduser","reducers","combineReducers","dialogsReducer","formReduser","app","store","createStore","composeWithDevTools","applyMiddleware","thankMiddleware","AppContainer","initialize","initializeApp","promise","Promise","all","then","element","MessagesContainer","AppSocialNet","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db06204b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogItem__link\":\"Messages_DialogItem__link__375Kj\",\"wrapper__messages\":\"Messages_wrapper__messages__3wpWW\",\"stick\":\"Messages_stick__LngQ1\",\"title\":\"Messages_title__3qInT\",\"dialogs\":\"Messages_dialogs__3qFZt\",\"dialog\":\"Messages_dialog__3sjgR\",\"flexbox\":\"Messages_flexbox__3NCYH\",\"wrapper__messanger\":\"Messages_wrapper__messanger__1Wboq\",\"message\":\"Messages_message__2zDQy\",\"textMessage\":\"Messages_textMessage__2uaSf\",\"textarea\":\"Messages_textarea__2lLX2\",\"btn\":\"Messages_btn__3DTSB\",\"btnSend\":\"Messages_btnSend__2ji_v\",\"button\":\"Messages_button__I4nXq\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.ef886190.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__aA5wi\"};","module.exports = __webpack_public_path__ + \"static/media/logout.6517ee94.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMe__editor\":\"ProfileStatus_aboutMe__editor__1BhQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1_JSp\",\"settings\":\"Nav_settings__1K9ZG\",\"line\":\"Nav_line__1F-rl\",\"link\":\"Nav_link__2pFvk\",\"active\":\"Nav_active__33sVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__me3Re\",\"users\":\"Users_users__34yhM\",\"btn__wrapper\":\"Users_btn__wrapper__3n4D-\",\"btn__follow\":\"Users_btn__follow__yMUfQ\",\"btn__unfollow\":\"Users_btn__unfollow__14Z8o\",\"btn__follow__click\":\"Users_btn__follow__click__1zRZt\",\"wrapper__avatar\":\"Users_wrapper__avatar__28eI8\",\"wrapper__info\":\"Users_wrapper__info__SEIFs\",\"avatar\":\"Users_avatar__2b-dr\",\"nickName\":\"Users_nickName__1wKLu\",\"status\":\"Users_status__3yRiB\",\"location\":\"Users_location__2Tc5o\",\"userName__link\":\"Users_userName__link__3jYpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLoginPage\":\"LoginPage_wrapperLoginPage__1_nDD\",\"titleLogin\":\"LoginPage_titleLogin__33cfj\",\"formSummaryError\":\"LoginPage_formSummaryError__1d6MP\",\"form\":\"LoginPage_form__fQVBs\",\"submit\":\"LoginPage_submit__3vppF\",\"loginBtn\":\"LoginPage_loginBtn__3IjSc\",\"error\":\"LoginPage_error__18S5h\"};","module.exports = __webpack_public_path__ + \"static/media/user.8c62dd08.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPost_wrapper__2I8HV\",\"textarea\":\"MyPost_textarea__3Rgef\",\"btn__wrapper\":\"MyPost_btn__wrapper__3UdOx\",\"btn\":\"MyPost_btn__1njIl\"};","import React from \"react\";\r\nimport preloader from '../../../assets/img/preloader.svg'\r\nimport classes from './Preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={classes.loader}>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport logout from \"../../../assets/img/logout.svg\"\r\nimport classes from \"./LogoutSvg.module.css\"\r\n\r\nconst LogoutSvg = () => {\r\n    return (\r\n        <div className={classes.logout__img}>\r\n            <img src={logout}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoutSvg","import React from \"react\";\r\nimport classes from \"./AuthComponent.module.css\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport LogoutSvg from \"../Common/LogoutSvg/LogoutSvg\";\r\n\r\nconst LogoutForm = (props) => {\r\n    return (\r\n        <div className={classes.login__block}>\r\n            <form className={classes.login__form} onSubmit={props.handleSubmit}>\r\n                <p className={classes.login}> {props.isAuth ? props.login :\r\n                    <NavLink to={'/login'}>Login</NavLink>} {props.isAuth ?\r\n                        <button className={classes.btn__logout}><LogoutSvg /></button> : \"\"}</p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LogoutReduxForm = reduxForm({ form: 'logout' })(LogoutForm)\r\n\r\nexport default LogoutReduxForm","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: { \"API-KEY\": \"f875b6a1-5fef-48ce-a963-4e6042f223a9\" }\r\n})\r\n\r\nexport const usersAPI = {\r\n    requestGetUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    requestGetFriendUsers(currentPage, pageSize, friend = true) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}&friend=${friend}`)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId.id}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId.id}`)\r\n    },\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getProfileStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateProfileStatus(status) {\r\n        return instance.put(`profile/status`, { status })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrlData() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}","import { stopSubmit } from \"redux-form\"\r\nimport { authAPI, securityAPI } from \"../api/api\"\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst OUT_AUTH_USER_DATA = 'OUT_AUTH_USER_DATA'\r\nconst GET_CAPTCHA_URL = 'GET_CAPTCHA_URL'\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    rememberMe: boolean,\r\n    isAuth: boolean,\r\n    captchaUrl: null\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    rememberMe: false,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case OUT_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype PayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataType = {\r\n    type: typeof SET_AUTH_USER_DATA\r\n    payload: PayloadType\r\n}\r\nexport const setAuthUserData = (userId: number, email: string, login: string, isAuth: boolean): SetAuthUserDataType =>\r\n    ({ type: SET_AUTH_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\ntype OutAuthUserDataType = {\r\n    type: typeof OUT_AUTH_USER_DATA\r\n    payload: PayloadType\r\n}\r\nexport const outAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): OutAuthUserDataType =>\r\n    ({ type: OUT_AUTH_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\ntype GetCaptchaUrlType = {\r\n    type: typeof GET_CAPTCHA_URL\r\n    payload: object | null\r\n}\r\nexport const getCaptchaUrl = (captchaUrl: object): GetCaptchaUrlType => ({ type: GET_CAPTCHA_URL, payload: { captchaUrl } })\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrlData = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrlData()\r\n    const captchaUrl = response.data.url\r\n    dispatch(getCaptchaUrl(captchaUrl))\r\n}\r\n\r\nexport const login = (email: string | null, password: string | null, rememberMe: boolean, captcha: any) =>\r\n    async (dispatch: any) => {\r\n        let response = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrlData())\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\"\r\n            dispatch(stopSubmit(\"login\", { _error: message }))\r\n        }\r\n    }\r\n\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(outAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReduser","import React from \"react\";\r\nimport LogoutReduxForm from \"./LogoutForm\";\r\nimport classes from \"./AuthComponent.module.css\"\r\nimport { logout } from \"../../Redux/auth-reduser\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AuthComponent = (props) => {\r\n    \r\n    const onSubmit = () => {\r\n        props.logout()\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.login__block}>\r\n            <LogoutReduxForm {...props} onSubmit={onSubmit} isAuth={props.isAuth}\r\n                login={props.login} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout})(AuthComponent)","import classes from './Header.module.css';\r\nimport React from 'react';\r\nimport AuthComponent from '../AuthComponent/AuthComponent';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={classes.header__wrapper}>\r\n            <div className={classes.header}>\r\n                <div className={classes.logo}>\r\n                    <p>Social ·</p>\r\n                    <p className={classes.logo__text}>· NET</p>\r\n                </div>\r\n                <AuthComponent />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\n\r\nconst HeaderContainer = (props) => {\r\n    return (\r\n        <Header { ...props } />\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps)(HeaderContainer)","export const required = value => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport classes from \"./formControls.module.css\";\r\n\r\nexport const FormControl = ({ meta: {touched, error}, children }) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span className={classes.formError}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst submitFormonEnter = (e) => {\r\n    if (e.keyCode === 13) {\r\n        e.preventDefault()\r\n    }\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea onSubmit={submitFormonEnter} {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input className={classes.inputWrapper} {...input} {...restProps} autocomplete=\"off\" readonly /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div className={classes.fieldControl}>\r\n        <Field placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props} /> <span className={classes.rememberMe}>{text}</span>\r\n    </div>\r\n)\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { required } from \"../../../utils/validators/validators\";\r\nimport { createField, Input } from \"../../Common/formsControls/formControls\";\r\nimport classes from \"../LoginPage.module.css\";\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <div className={error ? classes.formSummaryError : classes.form}>\r\n            <form onSubmit={handleSubmit}>\r\n                {createField('Email', \"email\", [required], Input)}\r\n                {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n                {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"Remember Me\")}\r\n\r\n                { captchaUrl && <img src={captchaUrl} /> }\r\n                { captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n                <div className={classes.submit}>\r\n                    <button className={classes.loginBtn}>Log In</button>\r\n                    <span className={classes.error}>{error && <div> {error} </div>}</span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default LoginReduxForm","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { login } from \"../../Redux/auth-reduser\";\r\nimport LoginReduxForm from \"./LoginForm/LoginForm\";\r\nimport classes from \"./LoginPage.module.css\";\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate replace to={\"/profile\"} />\r\n    }\r\n    \r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapperLoginPage}>\r\n            <div className={classes.titleLogin}>\r\n                <p className={classes.loginTitle}>LOGIN</p>\r\n            </div>\r\n            <div>\r\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { login })(LoginPage)","import { connect } from \"react-redux\";\r\nimport LoginPage from \"./LoginPage\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        isFetching: state.usersPage.isFetching,\r\n        profile: state.profilePage.profile,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nconst LoginPageContainer = connect(mapStateToProps)(LoginPage)\r\n\r\nexport default LoginPageContainer\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport const withAuthLocation = (Component) => {\r\n    const mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    const LocationComponent = (props) => {\r\n        if (!props.isAuth) {\r\n            return <Navigate replace to={\"/login\"} />\r\n        }\r\n        return <Component {...props} /> \r\n    }\r\n    const ConnectedAuthLocation = connect(mapStateToProps)(LocationComponent)\r\n    return ConnectedAuthLocation\r\n}","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Nick 1' },\r\n    { id: 2, name: 'Nick 2' },\r\n    { id: 3, name: 'Nick 3' },\r\n    { id: 4, name: 'Nick 4' },\r\n    { id: 5, name: 'Nick 5' }\r\n  ],\r\n  messages: []\r\n}\r\n\r\nwindow.initialState = initialState;\r\n\r\nconst dialogsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: action.id, message: body}] \r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageAC = (newMessageBody, id) => ({ type: SEND_MESSAGE, newMessageBody, id })\r\nexport default dialogsReduser;","import classes from './../Messages.module.css';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/messages/' + props.id;\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink className={classes.DialogItem__link} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogItem;","import classes from './../Messages.module.css';\r\nimport React from 'react';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from \"../Messages.module.css\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../Common/formsControls/formControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <div className={classes.textMessage}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div >\r\n                    <Field className={classes.textarea} component={Textarea}\r\n                        name=\"newMessageBody\" placeholder=\"Enter your message\" autoFocus\r\n                        validate={[required, maxLength100]}  />\r\n                </div>\r\n                <div className={classes.btn}>\r\n                    <div className={classes.btnSend}>\r\n                        <button className={classes.button}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const MessageFormRedux = reduxForm({ form: \"dilogAddMessageForm\" })(MessageForm)","import classes from './Messages.module.css';\r\nimport React from 'react';\r\nimport DialogItem from './DilogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { MessageFormRedux } from './MessageForm/MessageForm';\r\n\r\nconst Messages = (props) => {\r\n    \r\n    let addNewMessage = (values) => {\r\n        if (values.newMessageBody) {\r\n            props.sendMessage(values.newMessageBody)\r\n            values.newMessageBody = '' \r\n        } \r\n    }\r\n\r\n    let dialogsElement = props.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n    let messagesElement = props.messages.map(m => <Message message={m.message} key={m.id} id={m.id} />)\r\n\r\n    return (\r\n\r\n        <div className={classes.wrapper__messages}>\r\n\r\n            <h2 className={classes.title}>Dialogs</h2>\r\n            <div className={classes.dialogs}>\r\n                {dialogsElement}\r\n            </div>\r\n            <span className={classes.stick}></span>\r\n            <div className={classes.flexbox}>\r\n                <div className={classes.wrapper__messanger}>\r\n                    <div className={classes.messanger}>\r\n                        {messagesElement}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <MessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Messages;","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthLocation } from \"../../hoc/withAuthLocation\";\r\nimport { sendMessageAC } from \"../../Redux/dialogs-reduser\";\r\nimport Messages from \"./Messages\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody, id) => {\r\n            dispatch(sendMessageAC(newMessageBody, id));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthLocation\r\n)(Messages)","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u\r\n    })\r\n} ","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/objects-helper\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE_USERS = 'SET_CURRENT_PAGE_USERS'\r\nconst SET_CURRENT_PAGE_FRIENDS = 'SET_CURRENT_PAGE_FRIENDS'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPageUsers: 1,\r\n    currentPageFriends: 1,\r\n    isFetching: true,\r\n    followingInProgress: [null]\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersReduser = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE_USERS: {\r\n            return { ...state, currentPageUsers: action.currentPageUsers }\r\n        }\r\n        case SET_CURRENT_PAGE_FRIENDS: {\r\n            return { ...state, currentPageFriends: action.currentPageFriends }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype FollowSuccessType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\ntype UnfollowSuccessType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: string\r\n}\r\ntype SetCurrentPageUsersType = {\r\n    type: typeof SET_CURRENT_PAGE_USERS\r\n    currentPageUsers: number\r\n}\r\ntype SetCurrentPageFriendsType = {\r\n    type: typeof SET_CURRENT_PAGE_FRIENDS\r\n    currentPageFriends: number\r\n}\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\ntype ToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\ntype ToggleFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowSuccessType => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessType => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users: string): SetUsersType => ({ type: SET_USERS, users })\r\nexport const setCurrentPageUsers = (currentPageUsers: number): SetCurrentPageUsersType => ({ type: SET_CURRENT_PAGE_USERS, currentPageUsers })\r\nexport const setCurrentPageFriends = (currentPageFriends: number): SetCurrentPageFriendsType => ({ type: SET_CURRENT_PAGE_FRIENDS, currentPageFriends })\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountType =>\r\n    ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingType => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressType =>\r\n    ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestGetUsers = (page: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPageUsers(page))\r\n    let response = await usersAPI.requestGetUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items))\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\n\r\nexport const requestGetFriendUsers = (page: number, pageSize: number, friend: boolean) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPageFriends(page))\r\n    let response = await usersAPI.requestGetFriendUsers(page, pageSize, friend)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items))\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: { id: number }, apiMethod: any, ACFollowUnfollow: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId.id))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(ACFollowUnfollow(userId.id))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId.id))\r\n}\r\n\r\nexport const follow = (userId: { id: number }) => async (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId: { id: number }) => async (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport default usersReduser;","import { createSelector } from \"reselect\"\r\n\r\nexport const getUsersArray = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersArray, \r\n    (users) => {\r\n        return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageUsers = (state) => {\r\n    return state.usersPage.currentPageUsers\r\n}\r\n\r\nexport const getCurrentPageFriends = (state) => {\r\n    return state.usersPage.currentPageFriends\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({ totalUsersCount, pageSize, onPageChanged, currentPage, portionSize = 15 }) => {\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    let pages = []\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    for (let i = 1; i <= pagesCount; i++) pages.push(i)\r\n    \r\n    useEffect(() => {\r\n        setPortionNumber(Math.ceil(currentPage / portionSize))\r\n    }, [currentPage])\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const selectedNextPortion = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n        onPageChanged(currentPage + 15)\r\n    }\r\n\r\n    const selectedPrevPortion = () => {\r\n        setPortionNumber(portionNumber + 1)\r\n        onPageChanged(currentPage - 15)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.numberPage}>\r\n            <div className={classes.wrapperPrev}> {portionNumber > 1 &&\r\n                <button className={classes.portion} onClick={selectedPrevPortion}><a href=\"#top\">prev</a></button>} </div>\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p, id) => {\r\n                    return <div\r\n                        onClick={() => { onPageChanged(p) }} className={classes.wrapperPage} key={id}>\r\n                        <button className={currentPage === p ? classes.selectedPage : \"\"}><a href=\"#top\">{p}</a></button></div>\r\n                })\r\n            }\r\n            {pagesCount > 14 &&\r\n                <button className={classes.portion} onClick={selectedNextPortion}><a href=\"#top\">next</a></button>}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"../Users.module.css\";\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\n\r\nconst User = (props) => {\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.wrapper__avatar}>\r\n                <div>\r\n                    <NavLink to={\"/profile/\" + props.user.id}>\r\n                        <img className={classes.avatar} src={props.user.photos.small != null ? props.user.photos.small : userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={classes.btn__wrapper}>\r\n                    {props.user.followed ? <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                        className={classes.btn__unfollow} onClick={() => { props.unfollow(props.user) }}>Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                            className={classes.btn__follow} onClick={() => { props.follow(props.user) }}>Follow</button>}\r\n                </div>\r\n            </div>\r\n            <div className={classes.wrapper__info}>\r\n                <div>\r\n                    <div className={classes.nickName}>\r\n                        <NavLink to={\"/profile/\" + props.user.id} className={classes.userName__link}>{props.user.name}</NavLink>\r\n                    </div>\r\n                    <div className={classes.status}>{props.user.status}</div>\r\n                </div>\r\n                <div className={classes.location}>\r\n                    <div>{/*u.location.country*/ \"USA,\"}</div>\r\n                    <div>{/*\"u.location.city\"*/ \"New York\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport User from '../Users/User/User';\r\n\r\nconst MyFriends = ({ users, followed, followingInProgress, follow, unfollow,\r\n    onPageChanged, pageSize, totalUsersCount, currentPage }) => {\r\n\r\n    return (\r\n        <div>\r\n            {users.map(f => <User user={f} key={f.id} followed={followed} followingInProgress={followingInProgress}\r\n                unfollow={unfollow} follow={follow} />)}\r\n            <Paginator totalUsersCount={totalUsersCount} pageSize={pageSize}\r\n                currentPage={currentPage} onPageChanged={onPageChanged} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyFriends","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    follow, requestGetFriendUsers, setCurrentPageFriends,\r\n    toggleFollowingProgress, unfollow\r\n} from '../../Redux/users-reduser'\r\nimport {\r\n    getCurrentPageFriends, getFollowingInProgress, getIsFetching,\r\n    getPageSize, getTotalUsersCount, getUsersArray\r\n} from '../../Redux/users-selector'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport MyFriends from './MyFriends'\r\n\r\nconst MyFriendsContainer = ({ users, currentPage, pageSize, requestGetFriendUsers, follow, unfollow, isFetching,\r\n    totalUsersCount, followingInProgress }) => {\r\n\r\n    useEffect(() => {\r\n        requestGetFriendUsers(currentPage, pageSize)\r\n    }, [])\r\n    const onPageChanged = (pageNumber) => {\r\n        requestGetFriendUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader /> :\r\n                <MyFriends\r\n                    totalUsersCount={totalUsersCount}\r\n                    pageSize={pageSize}\r\n                    users={users}\r\n                    unfollow={unfollow}\r\n                    follow={follow}\r\n                    onPageChanged={onPageChanged}\r\n                    currentPage={currentPage}\r\n                    followingInProgress={followingInProgress} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: getUsersArray(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPageFriends(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n})\r\n\r\nexport default\r\n    connect(mapStateToProps,\r\n        {\r\n            setCurrentPageFriends,\r\n            requestGetFriendUsers,\r\n            toggleFollowingProgress,\r\n            follow,\r\n            unfollow\r\n        })(MyFriendsContainer)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { setCurrentPageFriends, setCurrentPageUsers } from '../../Redux/users-reduser';\r\nimport classes from './Nav.module.css';\r\n\r\nconst Nav = ({ setCurrentPageUsers, setCurrentPageFriends }) => {\r\n    const hundleClick = (e) => {\r\n        e.preventDefault()\r\n        setCurrentPageFriends(1)\r\n        setCurrentPageUsers(1)\r\n    }\r\n\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.link}>\r\n                <NavLink className={navData => navData.isActive ? classes.active : classes.item} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <NavLink className={navData => navData.isActive ? classes.active : classes.item} to=\"/messages\">Messages</NavLink>\r\n            </div>\r\n            <div className={classes.link} onClick={hundleClick}>\r\n                <NavLink className={navData => navData.isActive ? classes.active : classes.item} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={classes.link} onClick={hundleClick}>\r\n                <NavLink className={navData => navData.isActive ? classes.active : classes.item} to=\"/friends\">My Friend</NavLink>\r\n            </div>\r\n            <div className={classes.line}></div>\r\n            <div className={classes.link}>\r\n                <a className={classes.settings} href=\"#\">Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // someState\r\n})\r\n\r\nexport default connect(mapStateToProps, {setCurrentPageFriends, setCurrentPageUsers})(Nav);","import { usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SET_PHOTO_PROFILE = 'SET_PHOTO_PROFILE'\r\n\r\ntype PostType = {\r\n  id: number\r\n  message: string\r\n}\r\ntype ContactsType = {\r\n  github: string\r\n  vk: string\r\n  facebook: string\r\n  instagram: string\r\n  twitter: string\r\n  website: string\r\n  youtube: string\r\n  mainLink: string\r\n}\r\ntype PhotosType = {\r\n  small: string | null\r\n  large: string | null\r\n}\r\ntype ProfileType = {\r\n  userId: number\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string\r\n  fullName: string\r\n  contacts: ContactsType\r\n  photos: PhotosType\r\n}\r\n\r\nlet initialState = {\r\n  posts: [] as Array<PostType>,\r\n  id: 0,\r\n  newPostText: '',\r\n  profile: null as ProfileType | null,\r\n  isFetching: true,\r\n  status: '',\r\n  urlProfilePhoto: null\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let body = action.newPostText\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, { id: action.id, message: body }]\r\n      }\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    case SET_PHOTO_PROFILE:\r\n      return {\r\n        ...state,\r\n        urlProfilePhoto: action.urlProfilePhoto\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype AddPostACType = {\r\n  type: typeof ADD_POST\r\n  newPostText: string\r\n  id: number\r\n}\r\ntype SetUserProfileType = {\r\n  type: typeof SET_USER_PROFILE\r\n  profile: ProfileType\r\n}\r\ntype SetProfileStatusType = {\r\n  type: typeof SET_STATUS\r\n  status: string\r\n}\r\nexport const addPostAC = (newPostText: string, id: number): AddPostACType => ({ type: ADD_POST, newPostText, id })\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => ({ type: SET_USER_PROFILE, profile })\r\nexport const setProfileStatus = (status: string): SetProfileStatusType => ({ type: SET_STATUS, status })\r\nexport const updateProfilePhoto = (urlProfilePhoto: object) => ({ type: SET_PHOTO_PROFILE, urlProfilePhoto })\r\n\r\nexport const getProfile = (userId: number) => async (dispatch: any) => {\r\n  let response = await usersAPI.getUserProfile(userId)\r\n  dispatch(setUserProfile(response.data))\r\n}\r\nexport const getProfileStatus = (userId: number) => async (dispatch: any) => {\r\n  let response = await usersAPI.getProfileStatus(userId)\r\n  dispatch(setProfileStatus(response.data))\r\n}\r\nexport const updateProfileStatus = (status: string) => async (dispatch: any) => {\r\n  let response = await usersAPI.updateProfileStatus(status)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setProfileStatus(status))\r\n  }\r\n}\r\n\r\nexport default profileReducer;","import React, { useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport classes from './AdditionalInformation.module.css';\r\n\r\nconst AdditionalInformation = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const activetedMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapperAddInf}>\r\n            <div>\r\n                <p>\r\n                    <b>lookingForAJob:</b>\r\n                    <span>{props.profile.lookingForAJob ? \"Yes\" : \"No\"}</span>\r\n                </p>\r\n            </div>\r\n            {props.profile.lookingForAJob &&\r\n                <div>\r\n                    <p>\r\n                        <b>My profissional skill:</b>\r\n                        <span>{props.profile.lookingForAJobDescription}</span>\r\n                    </p>\r\n                </div>\r\n            }\r\n            <div>\r\n                <p>\r\n                    <b>Full name:</b> \r\n                    <span>{props.profile.fullName}</span>\r\n                    </p>\r\n            </div>\r\n            <div className={classes.wrapperContacts}>\r\n                <b>Contacts:</b>\r\n                <span onClick={activetedMode}>\r\n                    <p className={editMode ? classes.editModeActive : null}>&#5125;</p>\r\n                </span>\r\n                {editMode && Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key}\r\n                        contactValue={props.profile.contacts[key]} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = (props) => {\r\n\r\n    return (\r\n        <div className={classes.wrapperContact}>\r\n            <p><b>{props.contactTitle}:</b> {!props.contactValue ? \"-\" : props.contactValue}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdditionalInformation","import React from 'react';\r\nimport userPhoto from '../../../assets/img/user.jpg';\r\nimport classes from './Posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            {props.posts.map((post, id) => (\r\n                <ul key={id}>\r\n                    <li>\r\n                        <div className={classes.post}>\r\n                            <div className={classes.avatar}>\r\n                                <img src={props.profile.photos.small != null ? props.profile.photos.small : userPhoto} />\r\n                            </div>\r\n                            <div className={classes.text}>\r\n                                {post.message}\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React, { useRef, useState } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../Common/formsControls/formControls\";\r\nimport classes from \"../MyPost.module.css\";\r\n\r\nconst maxLength500 = maxLengthCreator(500)\r\n\r\nconst MyPostForm = (props) => {\r\n    const [text, setText] = useState('')\r\n    const refForm = useRef()\r\n\r\n    return (\r\n        <div>\r\n            <form ref={refForm} onSubmit={props.handleSubmit}>\r\n                <div className={classes.textarea__wrapper}>\r\n                    <Field component={Textarea} name=\"newPostText\" className={classes.textarea}\r\n                        validate={[required, maxLength500]} placeholder={\"Post message\"}\r\n                            value={text} onChange={e => setText(e.target.value)} />\r\n                    {/* { createField(\"Post message\", \"newPostText\", [required], Textarea, {}) } */}\r\n                </div>\r\n                <div className={classes.btn__wrapper}>\r\n                    <button className={classes.btn} type=\"submit\">Post</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const MyPostReduxForm = reduxForm({ form: \"addMyPostForm\" })(MyPostForm)","import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport Posts from '../Posts/Posts';\r\nimport classes from './MyPost.module.css';\r\nimport { MyPostReduxForm } from './MyPostForm/MyPostForm';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    const onPostMessage = (values) => {\r\n        if (values.newPostText) {\r\n            props.addPost(values.newPostText, props.id)\r\n            values.newPostText = ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <MyPostReduxForm onSubmit={onPostMessage} addPost={props.addPost} newPostText={props.newPostText} />\r\n            <h2>Posts:</h2>\r\n            <div className={classes.Posts}>\r\n                {props.isFetching ?\r\n                    <Posts posts={props.posts} id={props.id} deletePost={props.deletePost} profile={props.profile} idPost={props.idPost} />\r\n                    : <Preloader />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostAC } from '../../../Redux/profile-reduser';\r\nimport MyPosts from './MyPost';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText, id) => {\r\n            dispatch(addPostAC(newPostText, id));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n\r\nconst Lorem = () => {\r\n    return <div>\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat deleniti ipsam veritatis.'\r\n    </div>\r\n}\r\n\r\nexport default Lorem","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./ProfileStatus.module.css\"\r\n\r\nconst ProfileStatus = (props) => {\r\n    const updateStatusEnter = React.createRef()\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditeMode = () => {\r\n        setEditMode(false)\r\n        if (!props.status) {\r\n            props.updateProfileStatus(\"Установить статус\")\r\n        } else {\r\n            props.updateProfileStatus(status)\r\n        }\r\n    }\r\n    const deactivateEditeModeOnBlur = () => {\r\n        setEditMode(false)\r\n        return props.status\r\n    }\r\n    const clickButtonEnten = () => {\r\n        updateStatusEnter.current.addEventListener('keydown', (keyPress) => {\r\n            if (keyPress.keyCode === 13) {\r\n                keyPress.preventDefault()\r\n                deactivateEditeMode()\r\n            }\r\n        }, { once: true })\r\n    }\r\n    const onStatusChange = (e) => {\r\n        clickButtonEnten()\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(() => {\r\n        if (status !== props.status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status]) \r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span data-testid=\"status\" className={classes.aboutMe__editor} onClick={activateEditMode} >\r\n                        {props.status ? props.status : \"Установить статус\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input data-testid=\"status-input\" ref={updateStatusEnter}\r\n                        onChange={onStatusChange} autoFocus onBlur={deactivateEditeModeOnBlur}\r\n                        defaultValue={status} maxLength={300} placeholder='Введите статус' type=\"text\" />\r\n                    <div>\r\n                        <button data-testid=\"btn-status\" onClick={deactivateEditeMode}\r\n                            onMouseDown={deactivateEditeMode} type=\"submit\">Сохранить</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import React, { useState } from 'react'\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\nimport './ModalWindow.css'\r\n\r\nconst ModalWindow = ({ active, setEctive, setPhoto, children, profilePhotoLarge }) => {\r\n    const [userImage, setUserPhoto] = useState(null)\r\n\r\n    const deactiveModalWindow = () => {\r\n        if (!profilePhotoLarge && userImage) {\r\n            let photoImg = URL.createObjectURL(userImage)\r\n            setPhoto(photoImg)\r\n        }\r\n        setEctive(!active)\r\n    }\r\n\r\n    return (\r\n        <div className={active ? \"modalWrapper active\" : \"modalWrapper\"} onClick={deactiveModalWindow}>\r\n            <div className=\"closedBtn\" onClick={() => setEctive(!active)}>x</div>\r\n            <div className={active ? \"modalContent active\" : \"modalContent\"} onClick={e => e.stopPropagation()}>\r\n                {userImage && <img src={URL.createObjectURL(userImage)} />}\r\n                {!userImage && <img src={children ? children : userPhoto} />}\r\n                <div className='wrapperFileInput'>\r\n                    <label htmlFor=\"file\" className='labelFileInput'>Loading image</label>\r\n                    <input type=\"file\" id='file' className='fileInput' name=\"file\"\r\n                        onChange={(e) => setUserPhoto(e.target.files[0])}></input>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWindow","import classes from './ProfileInfo.module.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\nimport Lorem from '../../Common/Lorem/Lorem';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport ModalWindow from '../../Common/ModalWindow/ModalWindow';\r\n\r\nconst ProfileInfo = (props) => {\r\n    const [active, setActive] = useState(false)\r\n    const [photo, setPhoto] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (photo) {\r\n            props.updateProfilePhoto(photo)\r\n        }\r\n    })\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profile__wrapper}>\r\n            <div className={classes.wrapper_img}>\r\n                <img className={classes.profile__img}\r\n                    src={props.profile.photos.large ?? props.urlProfilePhoto ?? userPhoto} onClick={() => setActive(!active)} />\r\n            </div>\r\n            <ModalWindow active={active} setEctive={setActive} setPhoto={setPhoto}\r\n                profilePhotoLarge={props.profile.photos.large} children={props.profile.photos.large} />\r\n            <div className={classes.profile__info}>\r\n                <div className={classes.userName}>{props.profile.fullName}</div>\r\n                <div className={classes.about__user}>{\r\n                    <ProfileStatus /> != null ? <ProfileStatus\r\n                        profile={props.profile}\r\n                        status={props.status}\r\n                        updateProfileStatus={props.updateProfileStatus} /> : <Lorem />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport AdditionalInformation from './AdditionalInformation/AdditionalInformation';\r\nimport MyPostsContainer from './MyPost/MyPostContainer';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.profile__wrapper}>\r\n                <ProfileInfo profile={props.profile} status={props.status}\r\n                    updateProfileStatus={props.updateProfileStatus} urlProfilePhoto={props.urlProfilePhoto} updateProfilePhoto={props.updateProfilePhoto} />\r\n                <AdditionalInformation profile={props.profile} lookingForAJob={props.lookingForAJob}\r\n                    lookingForAJobDescription={props.lookingForAJobDescription}\r\n                    fullName={props.fullName} contacts={props.contacts} />\r\n                <MyPostsContainer profile={props.profile} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthLocation } from '../../hoc/withAuthLocation';\r\nimport { getProfile, getProfileStatus, updateProfilePhoto, updateProfileStatus } from '../../Redux/profile-reduser';\r\nimport Profile from './Profile';\r\n\r\nconst ProfileContainer = (props) => {\r\n    let { userId } = useParams()\r\n\r\n    useEffect(() => {\r\n        if (!userId) {\r\n            userId = props.authUserId\r\n            props.getProfile(userId)\r\n            props.getProfileStatus(userId)\r\n        }\r\n        props.getProfile(userId)\r\n        props.getProfileStatus(userId)\r\n    }, [userId])\r\n\r\n    return (\r\n        <Profile {...props} profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    urlProfilePhoto: state.profilePage.urlProfilePhoto\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getProfileStatus, updateProfileStatus, updateProfilePhoto }),\r\n    withAuthLocation\r\n)(ProfileContainer)","import React from \"react\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\n\r\nconst Users = (props) => {\r\n    return <div>\r\n        <a name='top'></a>\r\n        {props.users.map(u => <User user={u} key={u.id} followed={props.followed} followingInProgress={props.followingInProgress}\r\n                                    unfollow={props.unfollow} follow={props.follow} />)}\r\n        <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize} \r\n                   currentPage={props.currentPage} onPageChanged={props.onPageChanged} />\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    follow, requestGetUsers, setCurrentPageUsers,\r\n    toggleFollowingProgress, unfollow\r\n} from \"../../Redux/users-reduser\";\r\nimport {\r\n    getCurrentPage, getCurrentPageUsers, getFollowingInProgress,\r\n    getIsFetching, getPageSize, getTotalUsersCount, getUsers\r\n} from \"../../Redux/users-selector\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport Users from './Users';\r\nimport classes from './Users.module.css';\r\n\r\nconst UsersContainer = (props) => {\r\n    useEffect(() => {\r\n        props.requestGetUsers(props.currentPage, props.pageSize)\r\n    }, [])\r\n    const onPageChanged = (pageNumber) => {\r\n        props.requestGetUsers(pageNumber, props.pageSize)\r\n    }\r\n\r\n    return (<>\r\n        <span className={classes.users}>Users:</span>\r\n        {props.isFetching ? <Preloader /> : <Users\r\n            totalUsersCount={props.totalUsersCount}\r\n            pageSize={props.pageSize}\r\n            users={props.users}\r\n            unfollow={props.unfollow}\r\n            follow={props.follow}\r\n            onPageChanged={onPageChanged}\r\n            currentPage={props.currentPage}\r\n            followingInProgress={props.followingInProgress} />}\r\n    </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPageUsers(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default\r\n    connect(mapStateToProps,\r\n        {\r\n            setCurrentPageUsers,\r\n            toggleFollowingProgress,\r\n            requestGetUsers,\r\n            follow,\r\n            unfollow\r\n        })(UsersContainer)","import { getAuthUserData } from \"./auth-reduser\"\r\n\r\nconst INITIALIZED__ACCESS = \"INITIALIZED__ACCESS\" \r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED__ACCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitializedSuccessType = {\r\n    type: typeof INITIALIZED__ACCESS\r\n}\r\nexport const initializedSuccess = (): InitializedSuccessType => ({ type: INITIALIZED__ACCESS })\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())  \r\n        })\r\n}\r\n\r\nexport default appReduser","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authReduser from \"./auth-reduser\";\r\nimport dialogsReducer from \"./dialogs-reduser\";\r\nimport profileReducer from \"./profile-reduser\";\r\nimport usersReduser from \"./users-reduser\";\r\nimport thankMiddleware from \"redux-thunk\";\r\nimport { reducer as formReduser } from \"redux-form\";\r\nimport appReduser from \"./app-reduser\";\r\nimport { composeWithDevTools } from \"@redux-devtools/extension\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReduser,\r\n    auth: authReduser,\r\n    form: formReduser,\r\n    app: appReduser\r\n});\r\n\r\nlet store = createStore(reducers,\r\n    composeWithDevTools(applyMiddleware(thankMiddleware)))\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, { useEffect } from 'react';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\r\nimport './App.css';\r\nimport Preloader from './components/Common/Preloader/Preloader';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginPageContainer from './components/LoginPage/LoginPageContainer';\r\nimport MessagesContainer from './components/Masseges/MessagesContainer';\r\nimport MySubscriptionsContainer from './components/MyFriends/MyFriendsContainer';\r\nimport Nav from './components/Nav/Nav';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport { initializeApp } from './Redux/app-reduser';\r\nimport store from './Redux/redux-store';\r\n\r\nconst App = (props) => {\r\n\r\n  useEffect(() => {\r\n    props.initializeApp()\r\n  }, [])\r\n\r\n  if (props.initialize === false) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <HeaderContainer />\r\n      <Nav authUserId={props.authUserId} />\r\n      <div className='app-wrapper-content'>\r\n        <Routes>\r\n          {/* <Route path='/' element={<Navigate to='/profile' />} /> */}\r\n          <Route path='/profile' element={<ProfileContainer />} >\r\n            <Route path=':userId' element={<ProfileContainer />} />\r\n          </Route>\r\n          <Route path='/messages/*' element={<MessagesContainer />} />\r\n          <Route path='/users' element={<UsersContainer />} />\r\n          <Route path='/friends' element={<MySubscriptionsContainer />} />\r\n          <Route path='/login' element={<LoginPageContainer />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialize: state.app.initialized,\r\n  authUserId: state.auth.userId\r\n})\r\n\r\nconst AppContainer = connect(mapStateToProps, { initializeApp })(App);\r\n\r\nconst AppSocialNet = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default AppSocialNet","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppSocialNet from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<AppSocialNet />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__block\":\"AuthComponent_login__block__3ElpX\",\"login__form\":\"AuthComponent_login__form__3nhBx\",\"login\":\"AuthComponent_login__2QJvm\",\"btn__logout\":\"AuthComponent_btn__logout__mgB8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formError\":\"formControls_formError__2R1WC\",\"rememberMe\":\"formControls_rememberMe__91V_p\",\"fieldControl\":\"formControls_fieldControl__1DfjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2RV8R\",\"numberPage\":\"Paginator_numberPage__3FpNz\",\"wrapperPage\":\"Paginator_wrapperPage__38qzO\",\"wrapperPrev\":\"Paginator_wrapperPrev__11reI\",\"portion\":\"Paginator_portion__2Y7Bx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__img\":\"ProfileInfo_profile__img__1FqeS\",\"profile__wrapper\":\"ProfileInfo_profile__wrapper__ryhAY\",\"profile__info\":\"ProfileInfo_profile__info__PlW92\",\"about__user\":\"ProfileInfo_about__user__2g9SG\",\"userName\":\"ProfileInfo_userName__3gBbn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__wrapper\":\"Header_header__wrapper__1O_TU\",\"header\":\"Header_header__iLGU8\",\"logo\":\"Header_logo__2j3ml\",\"logo__text\":\"Header_logo__text__2uBvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperContact\":\"AdditionalInformation_wrapperContact__jUu03\",\"wrapperAddInf\":\"AdditionalInformation_wrapperAddInf__YUUEb\",\"wrapperContacts\":\"AdditionalInformation_wrapperContacts__2vfHo\",\"editModeActive\":\"AdditionalInformation_editModeActive__25Pyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Posts_wrapper__3qGWR\",\"post\":\"Posts_post__1pAkY\",\"avatar\":\"Posts_avatar__3MPfR\",\"text\":\"Posts_text__3nSJk\",\"wrapperTextPost\":\"Posts_wrapperTextPost__Ziy6U\",\"deletePost\":\"Posts_deletePost__3Nm8w\"};"],"sourceRoot":""}