{"version":3,"sources":["components/Masseges/Messages.module.css","assets/img/preloader.svg","components/Common/Preloader/Preloader.module.css","assets/img/logout.svg","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Nav/Nav.module.css","components/Users/Users.module.css","components/LoginPage/LoginPage.module.css","assets/img/user.jpg","components/Profile/MyPost/MyPost.module.css","components/Common/Preloader/Preloader.js","components/Common/LogoutSvg/LogoutSvg.js","components/AuthComponent/LogoutForm.jsx","api/api.js","Redux/auth-reduser.ts","components/AuthComponent/AuthComponent.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","utils/validators/validators.js","components/Common/formsControls/formControls.js","components/LoginPage/LoginForm/LoginForm.jsx","components/LoginPage/LoginPage.jsx","components/LoginPage/LoginPageContainer.jsx","hoc/withAuthLocation.jsx","Redux/dialogs-reduser.js","components/Masseges/DilogItem/DialogItem.jsx","components/Masseges/Message/Message.jsx","components/Masseges/MessageForm/MessageForm.jsx","components/Masseges/Messages.jsx","components/Masseges/MessagesContainer.jsx","components/Nav/Nav.jsx","Redux/profile-reduser.ts","components/Profile/AdditionalInformation/AdditionalInformation.jsx","components/Profile/Posts/Posts.jsx","components/Profile/MyPost/MyPostForm/MyPostForm.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Common/Lorem/Lorem.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Common/ModalWindow/ModalWindow.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","utils/objects-helper.js","Redux/users-reduser.ts","components/Common/Paginator/Paginator.js","components/Users/User/User.jsx","components/Users/Users.jsx","Redux/users-selector.js","components/Users/UsersContainer.jsx","Redux/app-reduser.ts","Redux/redux-store.js","App.js","index.js","components/AuthComponent/AuthComponent.module.css","components/Common/Paginator/Paginator.module.css","components/Common/formsControls/formControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/AdditionalInformation/AdditionalInformation.module.css","components/Profile/Posts/Posts.module.css"],"names":["module","exports","Preloader","props","className","classes","loader","src","preloader","LogoutSvg","logout__img","logout","LogoutReduxForm","reduxForm","form","login__block","login__form","onSubmit","handleSubmit","login","isAuth","to","btn__logout","instance","axios","withCredentials","baseURL","headers","usersAPI","requestGetUsers","currentPage","pageSize","get","follow","userId","post","id","unfollow","delete","getUserProfile","getProfileStatus","updateProfileStatus","status","put","authAPI","email","password","rememberMe","captcha","securityAPI","initialState","captchaUrl","setAuthUserData","type","payload","getCaptchaUrl","getAuthUserData","dispatch","response","data","resultCode","authReduser","state","action","connect","auth","Header","header__wrapper","header","logo","logo__text","required","value","maxLengthCreator","maxLength","length","FormControl","meta","touched","error","children","hasError","formControl","formError","submitFormonEnter","e","keyCode","preventDefault","Textarea","input","restProps","child","Input","createField","placeholder","name","validators","component","text","fieldControl","Field","validate","LoginReduxForm","formSummaryError","submit","url","message","messages","stopSubmit","_error","replace","wrapperLoginPage","titleLogin","loginTitle","formData","LoginPageContainer","isFetching","usersPage","profile","profilePage","LoginPage","withAuthLocation","Component","dialogs","window","dialogsReduser","body","newMessageBody","DialogItem","path","dialog","active","DialogItem__link","Message","maxLength100","MessageFormRedux","textMessage","textarea","autoFocus","btn","btnSend","button","Messages","dialogsElement","map","d","key","messagesElement","m","wrapper__messages","title","stick","flexbox","wrapper__messanger","messanger","values","sendMessage","compose","dialogsPage","newMessageText","sendMessageAC","nav","link","navData","isActive","item","href","line","settings","posts","newPostText","setProfileStatus","profileReducer","Contact","wrapperContact","contactTitle","contactValue","AdditionalInformation","useState","editMode","setEditMode","wrapperAddInf","lookingForAJob","lookingForAJobDescription","fullName","wrapperContacts","onClick","editModeActive","Object","keys","contacts","Posts","wrapper","avatar","photos","small","userPhoto","maxLength500","MyPostReduxForm","setText","refForm","useRef","ref","textarea__wrapper","onChange","target","btn__wrapper","MyPosts","addPost","deletePost","idPost","MyPostsContainer","addPostAC","Lorem","ProfileStatus","updateStatusEnter","React","createRef","setStatus","deactivateEditeMode","useEffect","data-testid","aboutMe__editor","current","addEventListener","keyPress","once","currentTarget","onBlur","defaultValue","onMouseDown","ModalWindow","setEctive","stopPropagation","ProfileInfo","setActive","profile__wrapper","profile__img","large","profile__info","userName","about__user","Profile","content","authUserId","getProfile","useParams","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","ACFollowUnfollow","usersReduser","followed","count","filter","Paginator","onPageChanged","portionSize","portionNumber","setPortionNumber","pages","pagesCount","Math","ceil","i","push","leftPortionPageNumber","rightPortionPageNumber","numberPage","wrapperPrev","portion","p","wrapperPage","selectedPage","User","wrapper__avatar","user","disabled","some","btn__unfollow","btn__follow","wrapper__info","nickName","userName__link","location","Users","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","page","totalCount","bind","pageNumber","initialized","appReduser","reducers","combineReducers","dialogsReducer","formReduser","app","store","createStore","composeWithDevTools","applyMiddleware","thankMiddleware","AppContainer","initialize","initializeApp","promise","Promise","all","then","element","MessagesContainer","AppSocialNet","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d35585a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogItem__link\":\"Messages_DialogItem__link__375Kj\",\"wrapper__messages\":\"Messages_wrapper__messages__3wpWW\",\"stick\":\"Messages_stick__LngQ1\",\"title\":\"Messages_title__3qInT\",\"dialogs\":\"Messages_dialogs__3qFZt\",\"dialog\":\"Messages_dialog__3sjgR\",\"flexbox\":\"Messages_flexbox__3NCYH\",\"wrapper__messanger\":\"Messages_wrapper__messanger__1Wboq\",\"message\":\"Messages_message__2zDQy\",\"textMessage\":\"Messages_textMessage__2uaSf\",\"textarea\":\"Messages_textarea__2lLX2\",\"btn\":\"Messages_btn__3DTSB\",\"btnSend\":\"Messages_btnSend__2ji_v\",\"button\":\"Messages_button__I4nXq\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.ef886190.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__aA5wi\"};","module.exports = __webpack_public_path__ + \"static/media/logout.6517ee94.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMe__editor\":\"ProfileStatus_aboutMe__editor__1BhQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1_JSp\",\"settings\":\"Nav_settings__1K9ZG\",\"line\":\"Nav_line__1F-rl\",\"link\":\"Nav_link__2pFvk\",\"active\":\"Nav_active__33sVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__me3Re\",\"users\":\"Users_users__34yhM\",\"btn__wrapper\":\"Users_btn__wrapper__3n4D-\",\"btn__follow\":\"Users_btn__follow__yMUfQ\",\"btn__unfollow\":\"Users_btn__unfollow__14Z8o\",\"btn__follow__click\":\"Users_btn__follow__click__1zRZt\",\"wrapper__avatar\":\"Users_wrapper__avatar__28eI8\",\"wrapper__info\":\"Users_wrapper__info__SEIFs\",\"avatar\":\"Users_avatar__2b-dr\",\"nickName\":\"Users_nickName__1wKLu\",\"status\":\"Users_status__3yRiB\",\"location\":\"Users_location__2Tc5o\",\"userName__link\":\"Users_userName__link__3jYpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLoginPage\":\"LoginPage_wrapperLoginPage__1_nDD\",\"titleLogin\":\"LoginPage_titleLogin__33cfj\",\"formSummaryError\":\"LoginPage_formSummaryError__1d6MP\",\"form\":\"LoginPage_form__fQVBs\",\"submit\":\"LoginPage_submit__3vppF\",\"error\":\"LoginPage_error__18S5h\"};","module.exports = __webpack_public_path__ + \"static/media/user.8c62dd08.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPost_wrapper__2I8HV\",\"textarea\":\"MyPost_textarea__3Rgef\",\"btn__wrapper\":\"MyPost_btn__wrapper__3UdOx\",\"btn\":\"MyPost_btn__1njIl\"};","import React from \"react\";\r\nimport preloader from '../../../assets/img/preloader.svg'\r\nimport classes from './Preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={classes.loader}>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport logout from \"../../../assets/img/logout.svg\"\r\nimport classes from \"./LogoutSvg.module.css\"\r\n\r\nconst LogoutSvg = () => {\r\n    return (\r\n        <div className={classes.logout__img}>\r\n            <img src={logout}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoutSvg","import React from \"react\";\r\nimport classes from \"./AuthComponent.module.css\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport LogoutSvg from \"../Common/LogoutSvg/LogoutSvg\";\r\n\r\nconst LogoutForm = (props) => {\r\n    return (\r\n        <div className={classes.login__block}>\r\n            <form className={classes.login__form} onSubmit={props.handleSubmit}>\r\n                <p className={classes.login}> {props.isAuth ? props.login :\r\n                    <NavLink to={'/login'}>Login</NavLink>} {props.isAuth ?\r\n                        <button className={classes.btn__logout}><LogoutSvg /></button> : \"\"}</p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LogoutReduxForm = reduxForm({ form: 'logout' })(LogoutForm)\r\n\r\nexport default LogoutReduxForm","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: { \"API-KEY\": \"f875b6a1-5fef-48ce-a963-4e6042f223a9\" }\r\n})\r\n\r\nexport const usersAPI = {\r\n    requestGetUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId.id}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId.id}`)\r\n    },\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getProfileStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateProfileStatus(status) {\r\n        return instance.put(`profile/status`, { status })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrlData() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}","import { stopSubmit } from \"redux-form\"\r\nimport { authAPI, securityAPI } from \"../api/api\"\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst OUT_AUTH_USER_DATA = 'OUT_AUTH_USER_DATA'\r\nconst GET_CAPTCHA_URL = 'GET_CAPTCHA_URL'\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    rememberMe: boolean,\r\n    isAuth: boolean,\r\n    captchaUrl: null\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    rememberMe: false,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case OUT_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype PayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataType = {\r\n    type: typeof SET_AUTH_USER_DATA\r\n    payload: PayloadType\r\n}\r\nexport const setAuthUserData = (userId: number, email: string, login: string, isAuth: boolean): SetAuthUserDataType =>\r\n    ({ type: SET_AUTH_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\ntype OutAuthUserDataType = {\r\n    type: typeof OUT_AUTH_USER_DATA\r\n    payload: PayloadType\r\n}\r\nexport const outAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): OutAuthUserDataType =>\r\n    ({ type: OUT_AUTH_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\ntype GetCaptchaUrlType = {\r\n    type: typeof GET_CAPTCHA_URL\r\n    payload: object | null\r\n}\r\nexport const getCaptchaUrl = (captchaUrl: object): GetCaptchaUrlType => ({ type: GET_CAPTCHA_URL, payload: { captchaUrl } })\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrlData = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrlData()\r\n    const captchaUrl = response.data.url\r\n    dispatch(getCaptchaUrl(captchaUrl))\r\n}\r\n\r\nexport const login = (email: string | null, password: string | null, rememberMe: boolean, captcha: any) =>\r\n    async (dispatch: any) => {\r\n        let response = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrlData())\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\"\r\n            dispatch(stopSubmit(\"login\", { _error: message }))\r\n        }\r\n    }\r\n\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(outAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReduser","import React from \"react\";\r\nimport LogoutReduxForm from \"./LogoutForm\";\r\nimport classes from \"./AuthComponent.module.css\"\r\nimport { logout } from \"../../Redux/auth-reduser\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AuthComponent = (props) => {\r\n    const onSubmit = () => {\r\n        props.logout()\r\n    }\r\n    return (\r\n        <div className={classes.login__block}>\r\n            <LogoutReduxForm {...props} onSubmit={onSubmit} isAuth={props.isAuth}\r\n                login={props.login} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout})(AuthComponent)","import classes from './Header.module.css';\r\nimport React from 'react';\r\nimport AuthComponent from '../AuthComponent/AuthComponent';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header className={classes.header__wrapper}>\r\n            <div className={classes.header}>\r\n                <div className={classes.logo}>\r\n                    <p>Social ·</p>\r\n                    <p className={classes.logo__text}>· NET</p>\r\n                </div>\r\n                <AuthComponent />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\n\r\nconst HeaderContainer = (props) => {\r\n    return (\r\n        <Header { ...props } />\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps)(HeaderContainer)","export const required = value => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport classes from \"./formControls.module.css\";\r\n\r\nexport const FormControl = ({ meta: {touched, error}, children }) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span className={classes.formError}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst submitFormonEnter = (e) => {\r\n    if (e.keyCode === 13) {\r\n        e.preventDefault()\r\n    }\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea onSubmit={submitFormonEnter} {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div className={classes.fieldControl}>\r\n        <Field placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props} /> <span className={classes.rememberMe}>{text}</span>\r\n    </div>\r\n)\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { required } from \"../../../utils/validators/validators\";\r\nimport { createField, Input } from \"../../Common/formsControls/formControls\";\r\nimport classes from \"../LoginPage.module.css\";\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <div className={error ? classes.formSummaryError : classes.form}>\r\n            <form onSubmit={handleSubmit}>\r\n                {createField(\"Email\", \"email\", [required], Input)}\r\n                {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n                {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"Remember Me\")}\r\n\r\n                { captchaUrl && <img src={captchaUrl} /> }\r\n                { captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n                <div className={classes.submit}>\r\n                    <button>Sign In</button>\r\n                    <span className={classes.error}>{error && <div> {error} </div>}</span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default LoginReduxForm","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { login } from \"../../Redux/auth-reduser\";\r\nimport LoginReduxForm from \"./LoginForm/LoginForm\";\r\nimport classes from \"./LoginPage.module.css\";\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate replace to={\"/profile\"} />\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapperLoginPage}>\r\n            <div className={classes.titleLogin}>\r\n                <p className={classes.loginTitle}>LOGIN</p>\r\n            </div>\r\n            <div>\r\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { login })(LoginPage)","import { connect } from \"react-redux\";\r\nimport LoginPage from \"./LoginPage\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        isFetching: state.usersPage.isFetching,\r\n        profile: state.profilePage.profile,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nconst LoginPageContainer = connect(mapStateToProps)(LoginPage)\r\n\r\nexport default LoginPageContainer\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport const withAuthLocation = (Component) => {\r\n    const mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    const LocationComponent = (props) => {\r\n        if (!props.isAuth) {\r\n            return <Navigate replace to={\"/login\"} />\r\n        }\r\n        return <Component {...props} /> \r\n    }\r\n    const ConnectedAuthLocation = connect(mapStateToProps)(LocationComponent)\r\n    return ConnectedAuthLocation\r\n}","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Nick 1' },\r\n    { id: 2, name: 'Nick 2' },\r\n    { id: 3, name: 'Nick 3' },\r\n    { id: 4, name: 'Nick 4' },\r\n    { id: 5, name: 'Nick 5' }\r\n  ],\r\n  messages: []\r\n}\r\n\r\nwindow.initialState = initialState;\r\n\r\nconst dialogsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: action.id, message: body}] \r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageAC = (newMessageBody, id) => ({ type: SEND_MESSAGE, newMessageBody, id })\r\nexport default dialogsReduser;","import classes from './../Messages.module.css';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/messages/' + props.id;\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink className={classes.DialogItem__link} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogItem;","import classes from './../Messages.module.css';\r\nimport React from 'react';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from \"../Messages.module.css\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../Common/formsControls/formControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <div className={classes.textMessage}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div >\r\n                    <Field className={classes.textarea} component={Textarea}\r\n                        name=\"newMessageBody\" placeholder=\"Enter your message\" autoFocus\r\n                        validate={[required, maxLength100]}  />\r\n                </div>\r\n                <div className={classes.btn}>\r\n                    <div className={classes.btnSend}>\r\n                        <button className={classes.button}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const MessageFormRedux = reduxForm({ form: \"dilogAddMessageForm\" })(MessageForm)","import classes from './Messages.module.css';\r\nimport React from 'react';\r\nimport DialogItem from './DilogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { MessageFormRedux } from './MessageForm/MessageForm';\r\n\r\nconst Messages = (props) => {\r\n    let id = 1\r\n    let addNewMessage = (values) => {\r\n        id++\r\n        props.sendMessage(values.newMessageBody, id);\r\n    }\r\n\r\n    let dialogsElement = props.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElement = props.messages.map(m => <Message message={m.message} key={m.id} id={m.id} />);\r\n\r\n    return (\r\n\r\n        <div className={classes.wrapper__messages}>\r\n\r\n            <h2 className={classes.title}>Dialogs</h2>\r\n            <div className={classes.dialogs}>\r\n                {dialogsElement}\r\n            </div>\r\n            <span className={classes.stick}></span>\r\n            <div className={classes.flexbox}>\r\n                <div className={classes.wrapper__messanger}>\r\n                    <div className={classes.messanger}>\r\n                        {messagesElement}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <MessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Messages;","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthLocation } from \"../../hoc/withAuthLocation\";\r\nimport { sendMessageAC } from \"../../Redux/dialogs-reduser\";\r\nimport Messages from \"./Messages\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody, id) => {\r\n            dispatch(sendMessageAC(newMessageBody, id));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthLocation\r\n)(Messages)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Nav.module.css';\r\n\r\nfunction Nav(props) {\r\n    // {`/profile/${userId}`}\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.link}>\r\n                <NavLink className={ navData => navData.isActive ? classes.active : classes.item } to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <NavLink className={ navData => navData.isActive ? classes.active : classes.item } to=\"/messages\">Messages</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <NavLink className={ navData => navData.isActive ? classes.active : classes.item } to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <a className={classes.item} href=\"#\">Music</a>\r\n            </div>\r\n            <div className={classes.line}></div>\r\n            <div className={classes.link}>\r\n                <a className={classes.settings} href=\"#\">Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userId: state.usersPage.profile\r\n})\r\n\r\nexport default connect(mapStateToProps)(Nav);","import { usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\ntype PostType = {\r\n  id: number\r\n  message: string\r\n}\r\ntype ContactsType = {\r\n  github: string\r\n  vk: string\r\n  facebook: string\r\n  instagram: string\r\n  twitter: string\r\n  website: string\r\n  youtube: string\r\n  mainLink: string\r\n}\r\ntype PhotosType = {\r\n  small: string | null\r\n  large: string | null\r\n}\r\ntype ProfileType = {\r\n  userId: number\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string\r\n  fullName: string\r\n  contacts: ContactsType\r\n  photos: PhotosType\r\n}\r\n\r\nlet initialState = {\r\n  posts: [] as Array<PostType>,\r\n  id: 0,\r\n  newPostText: '',\r\n  profile: null as ProfileType | null,\r\n  isFetching: true,\r\n  status: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let body = action.newPostText\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, { id: action.id, message: body }]\r\n      }\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype AddPostACType = {\r\n  type: typeof ADD_POST\r\n  newPostText: string\r\n  id: number\r\n}\r\ntype SetUserProfileType = {\r\n  type: typeof SET_USER_PROFILE\r\n  profile: ProfileType\r\n}\r\ntype SetProfileStatusType = {\r\n  type: typeof SET_STATUS\r\n  status: string\r\n}\r\nexport const addPostAC = (newPostText: string, id: number): AddPostACType => ({ type: ADD_POST, newPostText, id })\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => ({ type: SET_USER_PROFILE, profile })\r\nexport const setProfileStatus = (status: string): SetProfileStatusType => ({ type: SET_STATUS, status })\r\n\r\nexport const getProfile = (userId: number) => async (dispatch: any) => {\r\n  let response = await usersAPI.getUserProfile(userId)\r\n  dispatch(setUserProfile(response.data))\r\n}\r\nexport const getProfileStatus = (userId: number) => async (dispatch: any) => {\r\n  let response = await usersAPI.getProfileStatus(userId)\r\n  dispatch(setProfileStatus(response.data))\r\n}\r\nexport const updateProfileStatus = (status: string) => async (dispatch: any) => {\r\n  let response = await usersAPI.updateProfileStatus(status)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setProfileStatus(status))\r\n  }\r\n}\r\n\r\nexport default profileReducer;","import React, { useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport classes from './AdditionalInformation.module.css';\r\n\r\nconst AdditionalInformation = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const activetedMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapperAddInf}>\r\n            <div>\r\n                <p>\r\n                    <b>lookingForAJob:</b>\r\n                    <span>{props.profile.lookingForAJob ? \"Yes\" : \"No\"}</span>\r\n                </p>\r\n            </div>\r\n            {props.profile.lookingForAJob &&\r\n                <div>\r\n                    <p>\r\n                        <b>My profissional skill:</b>\r\n                        <span>{props.profile.lookingForAJobDescription}</span>\r\n                    </p>\r\n                </div>\r\n            }\r\n            <div>\r\n                <p>\r\n                    <b>Full name:</b> \r\n                    <span>{props.profile.fullName}</span>\r\n                    </p>\r\n            </div>\r\n            <div className={classes.wrapperContacts}>\r\n                <b>Contacts:</b>\r\n                <span onClick={activetedMode}>\r\n                    <p className={editMode ? classes.editModeActive : null}>&#5125;</p>\r\n                </span>\r\n                {editMode && Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key}\r\n                        contactValue={props.profile.contacts[key]} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = (props) => {\r\n\r\n    return (\r\n        <div className={classes.wrapperContact}>\r\n            <p><b>{props.contactTitle}:</b> {!props.contactValue ? \"-\" : props.contactValue}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdditionalInformation","import React from 'react';\r\nimport userPhoto from '../../../assets/img/user.jpg';\r\nimport classes from './Posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            {props.posts.map((post, id) => (\r\n                <ul key={id}>\r\n                    <li>\r\n                        <div className={classes.post}>\r\n                            <div className={classes.avatar}>\r\n                                <img src={props.profile.photos.small != null ? props.profile.photos.small : userPhoto} />\r\n                            </div>\r\n                            <div className={classes.text}>\r\n                                {post.message}\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React, { useRef, useState } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../Common/formsControls/formControls\";\r\nimport classes from \"../MyPost.module.css\";\r\n\r\nconst maxLength500 = maxLengthCreator(500)\r\n\r\nconst MyPostForm = (props) => {\r\n    const [text, setText] = useState('')\r\n    const refForm = useRef()\r\n\r\n    return (\r\n        <div>\r\n            <form ref={refForm} onSubmit={props.handleSubmit}>\r\n                <div className={classes.textarea__wrapper}>\r\n                    <Field component={Textarea} name=\"newPostText\" className={classes.textarea}\r\n                        validate={[required, maxLength500]} placeholder={\"Post message\"}\r\n                            value={text} onChange={e => setText(e.target.value)} />\r\n                    {/* { createField(\"Post message\", \"newPostText\", [required], Textarea, {}) } */}\r\n                </div>\r\n                <div className={classes.btn__wrapper}>\r\n                    <button className={classes.btn} type=\"submit\">Post</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const MyPostReduxForm = reduxForm({ form: \"addMyPostForm\" })(MyPostForm)","import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport Posts from '../Posts/Posts';\r\nimport classes from './MyPost.module.css';\r\nimport { MyPostReduxForm } from './MyPostForm/MyPostForm';\r\n\r\nfunction MyPosts(props) {\r\n    const onPostMessage = (values) => {\r\n        if (values.newPostText) {\r\n            props.addPost(values.newPostText, props.id)\r\n            values.newPostText = ''\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <MyPostReduxForm onSubmit={onPostMessage} addPost={props.addPost} newPostText={props.newPostText} />\r\n            <h2>Posts:</h2>\r\n            <div className={classes.Posts}>\r\n                {props.isFetching ?\r\n                    <Posts posts={props.posts} id={props.id} deletePost={props.deletePost} profile={props.profile} idPost={props.idPost} />\r\n                    : <Preloader />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostAC } from '../../../Redux/profile-reduser';\r\nimport MyPosts from './MyPost';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText, id) => {\r\n            dispatch(addPostAC(newPostText, id));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n\r\nconst Lorem = () => {\r\n    return <div>\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat deleniti ipsam veritatis.'\r\n    </div>\r\n}\r\n\r\nexport default Lorem","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./ProfileStatus.module.css\"\r\n\r\nconst ProfileStatus = (props) => {\r\n    const updateStatusEnter = React.createRef()\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditeMode = () => {\r\n        setEditMode(false)\r\n        if (!props.status) {\r\n            props.updateProfileStatus(\"Установить статус\")\r\n        } else {\r\n            props.updateProfileStatus(status)\r\n        }\r\n    }\r\n    const deactivateEditeModeOnBlur = () => {\r\n        setEditMode(false)\r\n        return props.status\r\n    }\r\n    const clickButtonEnten = () => {\r\n        updateStatusEnter.current.addEventListener('keydown', (keyPress) => {\r\n            if (keyPress.keyCode === 13) {\r\n                keyPress.preventDefault()\r\n                deactivateEditeMode()\r\n            }\r\n        }, { once: true })\r\n    }\r\n    const onStatusChange = (e) => {\r\n        clickButtonEnten()\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(() => {\r\n        if (status !== props.status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status]) \r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span data-testid=\"status\" className={classes.aboutMe__editor} onClick={activateEditMode} >\r\n                        {props.status ? props.status : \"Установить статус\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input data-testid=\"status-input\" ref={updateStatusEnter}\r\n                        onChange={onStatusChange} autoFocus onBlur={deactivateEditeModeOnBlur}\r\n                        defaultValue={status} maxLength={300} placeholder='Введите статус' type=\"text\" />\r\n                    <div>\r\n                        <button data-testid=\"btn-status\" onClick={deactivateEditeMode}\r\n                            onMouseDown={deactivateEditeMode} type=\"submit\">Сохранить</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react'\r\nimport './ModalWindow.css'\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\nimport cx from 'classnames'\r\n\r\nconst ModalWindow = ({ active, setEctive, children }) => {\r\n    return (\r\n        <div className={active ? \"modalWrapper active\" : \"modalWrapper\"} onClick={() => setEctive(!active)}>\r\n            <div className=\"closedBtn\" onClick={() => setEctive(!active)}>x</div>\r\n            <div className={active ? \"modalContent active\" : \"modalContent\"} onClick={e => e.stopPropagation()}>\r\n                <img src={children ? children : userPhoto} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWindow","import classes from './ProfileInfo.module.css';\r\nimport React, { useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\nimport Lorem from '../../Common/Lorem/Lorem';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport ModalWindow from '../../Common/ModalWindow/ModalWindow';\r\n\r\nfunction ProfileInfo(props) {\r\n    const [active, setActive] = useState(false)\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.profile__wrapper}>\r\n            <div>\r\n                <img className={classes.profile__img}\r\n                    src={props.profile.photos.large ? props.profile.photos.large : userPhoto} onClick={() => setActive(!active)} />\r\n            </div>\r\n            <ModalWindow active={active} setEctive={setActive} children={props.profile.photos.large} />\r\n            <div className={classes.profile__info}>\r\n                <div className={classes.userName}>{props.profile.fullName}</div>\r\n                <div className={classes.about__user}>{\r\n                    <ProfileStatus /> != null ? <ProfileStatus\r\n                                                    profile={props.profile}\r\n                                                    status={props.status}\r\n                                                    updateProfileStatus={props.updateProfileStatus} /> : <Lorem />}\r\n                </div>          \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport AdditionalInformation from './AdditionalInformation/AdditionalInformation';\r\nimport MyPostsContainer from './MyPost/MyPostContainer';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.profile__wrapper}>\r\n                <ProfileInfo profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus} />\r\n                <AdditionalInformation profile={props.profile} lookingForAJob={props.lookingForAJob} lookingForAJobDescription={props.lookingForAJobDescription}\r\n                    fullName={props.fullName} contacts={props.contacts} />\r\n                <MyPostsContainer profile={props.profile} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthLocation } from '../../hoc/withAuthLocation';\r\nimport { getProfile, getProfileStatus, updateProfileStatus } from '../../Redux/profile-reduser';\r\nimport Profile from './Profile';\r\n\r\nconst ProfileContainer = (props) => {\r\n    let { userId } = useParams()\r\n    if (!userId) {\r\n        userId = props.authUserId\r\n    }\r\n    \r\n    useEffect(() => {\r\n        props.getProfile(userId)\r\n        props.getProfileStatus(userId)\r\n    }, [])\r\n\r\n    return (\r\n        <Profile {...props} profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getProfileStatus, updateProfileStatus }),\r\n    withAuthLocation\r\n)(ProfileContainer)","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u\r\n    })\r\n} ","import { usersAPI } from \"../api/api\"\r\nimport { updateObjectInArray } from \"../utils/objects-helper\"\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [null]\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst usersReduser = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype FollowSuccessType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\ntype UnfollowSuccessType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: string\r\n}\r\ntype SetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\ntype ToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\ntype ToggleFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\nexport const followSuccess = (userId: number): FollowSuccessType => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessType => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users: string): SetUsersType => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageType => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountType => \r\n    ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingType => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressType => \r\n    ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestGetUsers = (page: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    let response = await usersAPI.requestGetUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items))\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: {id: number}, apiMethod: any, ACFollowUnfollow: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId.id))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(ACFollowUnfollow(userId.id))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId.id))\r\n}\r\n\r\nexport const follow = (userId: {id: number}) => async (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId: {id: number}) => async (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport default usersReduser;","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({ totalUsersCount, pageSize, onPageChanged, currentPage, portionSize = 15 }) => {\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    let pages = []\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    for (let i = 1; i <= pagesCount; i++) pages.push(i)\r\n    \r\n    useEffect(() => {\r\n        setPortionNumber(Math.ceil(currentPage / portionSize))\r\n    }, [currentPage])\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const selectedNextPortion = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n        onPageChanged(currentPage + 15)\r\n    }\r\n\r\n    const selectedPrevPortion = () => {\r\n        setPortionNumber(portionNumber + 1)\r\n        onPageChanged(currentPage - 15)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.numberPage}>\r\n            <div className={classes.wrapperPrev}> {portionNumber > 1 &&\r\n                <button className={classes.portion} onClick={selectedPrevPortion}><a href=\"#top\">prev</a></button>} </div>\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <div\r\n                        onClick={(e) => { onPageChanged(p) }} className={classes.wrapperPage} key={p.id}>\r\n                        <button className={currentPage === p ? classes.selectedPage : \"\"}><a href=\"#top\">{p}</a></button></div>\r\n                })\r\n            }\r\n            <button className={classes.portion} onClick={selectedNextPortion}><a href=\"#top\">next</a></button>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"../Users.module.css\";\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.wrapper__avatar}>\r\n                <div>\r\n                    <NavLink to={\"/profile/\" + props.user.id}>\r\n                        <img className={classes.avatar} src={props.user.photos.small != null ? props.user.photos.small : userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={classes.btn__wrapper}>\r\n                    {props.user.followed ? <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                        className={classes.btn__unfollow} onClick={() => { props.unfollow(props.user) }}>Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                            className={classes.btn__follow} onClick={() => { props.follow(props.user) }}>Follow</button>}\r\n                </div>\r\n            </div>\r\n            <div className={classes.wrapper__info}>\r\n                <div>\r\n                    <div className={classes.nickName}>\r\n                        <NavLink to={\"/profile/\" + props.user.id} className={classes.userName__link}>{props.user.name}</NavLink>\r\n                    </div>\r\n                    <div className={classes.status}>{props.user.status}</div>\r\n                </div>\r\n                <div className={classes.location}>\r\n                    <div>{/*u.location.country*/ \"USA,\"}</div>\r\n                    <div>{/*\"u.location.city\"*/ \"New York\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React from \"react\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\n\r\nconst Users = (props) => {\r\n    return <div>\r\n        <a name='top'></a>\r\n        {props.users.map(u => <User user={u} key={u.id} followed={props.followed} followingInProgress={props.followingInProgress}\r\n                                    unfollow={props.unfollow} follow={props.follow} />)}\r\n        <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize} \r\n                   currentPage={props.currentPage} onPageChanged={props.onPageChanged} />\r\n    </div>\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\"\r\n\r\nconst getUsersArray = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersArray, \r\n    (users) => {\r\n        return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from './Users.module.css'\r\nimport { setCurrentPage, toggleFollowingProgress, requestGetUsers, follow, unfollow } from \"../../Redux/users-reduser\";\r\nimport Users from './Users'\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport { useEffect } from \"react\";\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from \"../../Redux/users-selector\";\r\n\r\nconst UsersContainer = (props) => {\r\n    useEffect(() => {\r\n        props.requestGetUsers(props.currentPage, props.pageSize)\r\n    }, [])\r\n    const onPageChanged = (pageNumber) => {\r\n        props.requestGetUsers(pageNumber, props.pageSize)\r\n    }\r\n    \r\n    return (<>\r\n        <span className={classes.users}>Users:</span>\r\n        {props.isFetching ? <Preloader /> : <Users\r\n            totalUsersCount={props.totalUsersCount}\r\n            pageSize={props.pageSize}\r\n            users={props.users}\r\n            unfollow={props.unfollow}\r\n            follow={props.follow}\r\n            onPageChanged={onPageChanged}\r\n            currentPage={props.currentPage}\r\n            followingInProgress={props.followingInProgress} />}\r\n    </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default\r\n    connect(mapStateToProps,\r\n        { setCurrentPage, toggleFollowingProgress, requestGetUsers, follow, unfollow })(UsersContainer)","import { getAuthUserData } from \"./auth-reduser\"\r\n\r\nconst INITIALIZED__ACCESS = \"INITIALIZED__ACCESS\" \r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReduser = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED__ACCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitializedSuccessType = {\r\n    type: typeof INITIALIZED__ACCESS\r\n}\r\nexport const initializedSuccess = (): InitializedSuccessType => ({ type: INITIALIZED__ACCESS })\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())  \r\n        })\r\n}\r\n\r\nexport default appReduser","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authReduser from \"./auth-reduser\";\r\nimport dialogsReducer from \"./dialogs-reduser\";\r\nimport profileReducer from \"./profile-reduser\";\r\nimport usersReduser from \"./users-reduser\";\r\nimport thankMiddleware from \"redux-thunk\";\r\nimport { reducer as formReduser } from \"redux-form\";\r\nimport appReduser from \"./app-reduser\";\r\nimport { composeWithDevTools } from \"@redux-devtools/extension\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReduser,\r\n    auth: authReduser,\r\n    form: formReduser,\r\n    app: appReduser\r\n});\r\n\r\nlet store = createStore(reducers,\r\n    composeWithDevTools(applyMiddleware(thankMiddleware)))\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, { useEffect } from 'react';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\r\nimport './App.css';\r\nimport Preloader from './components/Common/Preloader/Preloader';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginPageContainer from './components/LoginPage/LoginPageContainer';\r\nimport MessagesContainer from './components/Masseges/MessagesContainer';\r\nimport Nav from './components/Nav/Nav';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport { initializeApp } from './Redux/app-reduser';\r\nimport store from './Redux/redux-store';\r\n\r\nconst App = (props) => {\r\n\r\n  useEffect(() => {\r\n    props.initializeApp()\r\n  }, [])\r\n\r\n  if (props.initialize === false) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <HeaderContainer />\r\n      <Nav />\r\n      <div className='app-wrapper-content'>\r\n        <Routes>\r\n          {/* <Route path='/' element={<Navigate to='/profile' />} /> */}\r\n          <Route path='/profile' element={<ProfileContainer />} >\r\n            <Route path=':userId' element={<ProfileContainer />} />\r\n          </Route>\r\n          <Route path='/messages/*' element={<MessagesContainer />} />\r\n          <Route path='/users' element={<UsersContainer />} />\r\n          <Route path='/login' element={<LoginPageContainer />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialize: state.app.initialized\r\n})\r\n\r\nconst AppContainer = connect(mapStateToProps, { initializeApp })(App);\r\n\r\nconst AppSocialNet = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default AppSocialNet","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppSocialNet from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<AppSocialNet />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__block\":\"AuthComponent_login__block__3ElpX\",\"login__form\":\"AuthComponent_login__form__3nhBx\",\"login\":\"AuthComponent_login__2QJvm\",\"btn__logout\":\"AuthComponent_btn__logout__mgB8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2RV8R\",\"numberPage\":\"Paginator_numberPage__3FpNz\",\"wrapperPage\":\"Paginator_wrapperPage__38qzO\",\"wrapperPrev\":\"Paginator_wrapperPrev__11reI\",\"portion\":\"Paginator_portion__2Y7Bx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formError\":\"formControls_formError__2R1WC\",\"rememberMe\":\"formControls_rememberMe__91V_p\",\"fieldControl\":\"formControls_fieldControl__1DfjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__img\":\"ProfileInfo_profile__img__1FqeS\",\"profile__wrapper\":\"ProfileInfo_profile__wrapper__ryhAY\",\"profile__info\":\"ProfileInfo_profile__info__PlW92\",\"about__user\":\"ProfileInfo_about__user__2g9SG\",\"userName\":\"ProfileInfo_userName__3gBbn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__wrapper\":\"Header_header__wrapper__1O_TU\",\"header\":\"Header_header__iLGU8\",\"logo\":\"Header_logo__2j3ml\",\"logo__text\":\"Header_logo__text__2uBvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperContact\":\"AdditionalInformation_wrapperContact__jUu03\",\"wrapperAddInf\":\"AdditionalInformation_wrapperAddInf__YUUEb\",\"wrapperContacts\":\"AdditionalInformation_wrapperContacts__2vfHo\",\"editModeActive\":\"AdditionalInformation_editModeActive__25Pyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Posts_wrapper__3qGWR\",\"post\":\"Posts_post__1pAkY\",\"avatar\":\"Posts_avatar__3MPfR\",\"text\":\"Posts_text__3nSJk\",\"wrapperTextPost\":\"Posts_wrapperTextPost__Ziy6U\",\"deletePost\":\"Posts_deletePost__3Nm8w\"};"],"sourceRoot":""}