{"version":3,"sources":["components/Masseges/Messages.module.css","components/Nav/nav.module.css","components/Content/MyPost/mypost.module.css","components/Content/Profile/profile.module.css","components/Header/header.module.css","components/Content/Posts/posts.module.css","components/Content/content.module.css","Redux/dialogs-reduser.js","components/Content/Posts/posts.jsx","Redux/profile-reduser.js","Redux/redux-store.js","components/Header/header.jsx","components/Nav/nav.jsx","components/Content/MyPost/mypost.jsx","components/Content/Profile/profile.jsx","components/Content/MyPost/myPostContainer.jsx","components/Content/content.jsx","components/Masseges/DilogItem/DialogItem.jsx","components/Masseges/Message/Message.jsx","components/Masseges/Messages.jsx","components/Masseges/MessagesContainer.jsx","App.js","index.js"],"names":["module","exports","initialState","dialogs","id","name","messages","message","newMessageText","window","dialogsReduser","state","action","type","newSendMessage","newState","push","newText","Posts","props","className","classes","wrapper","avatar","src","text","post","posts","newPostText","profileReducer","newPost","console","log","reducers","combineReducers","profilePage","dialogsPage","dialogsReducer","store","createStore","Header","header__wrapper","header","logo","logo__text","Nav","nav","link","navData","isActive","active","item","to","href","line","settings","MyPosts","newPostElement","React","createRef","onAddPost","addPost","postsElement","map","p","textarea__wrapper","textarea","onChange","current","value","addEventListener","keyPress","keyCode","preventDefault","once","updateNewPostText","ref","btn__wrapper","btn","onClick","Profile","profile__wrapper","profile__img","profile__info","username","about__user","MyPostsContainer","connect","dispatch","updateNewPostTextActionCreater","Content","content","head__img","DialogItem","path","dialog","Message","Messages","sendMessage","send","dialogsElement","d","messagesElement","m","wrapper__messages","title","stick","flexbox","wrapper__messanger","messanger","textMessage","updateNewMessageText","autoFocus","btnSend","MessagesContainer","updateNewMessageTextActionCreater","App","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0384e1c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper__messages\":\"Messages_wrapper__messages__3wpWW\",\"stick\":\"Messages_stick__LngQ1\",\"title\":\"Messages_title__3qInT\",\"dialogs\":\"Messages_dialogs__3qFZt\",\"dialog\":\"Messages_dialog__3sjgR\",\"flexbox\":\"Messages_flexbox__3NCYH\",\"wrapper__messanger\":\"Messages_wrapper__messanger__1Wboq\",\"message\":\"Messages_message__2zDQy\",\"textMessage\":\"Messages_textMessage__2uaSf\",\"btn\":\"Messages_btn__3DTSB\",\"btnSend\":\"Messages_btnSend__2ji_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__5XtrQ\",\"settings\":\"nav_settings__sjbAq\",\"line\":\"nav_line__2XejQ\",\"link\":\"nav_link__3dxSm\",\"active\":\"nav_active__1R6yS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"mypost_wrapper__vQszG\",\"textarea\":\"mypost_textarea__2PpbC\",\"btn__wrapper\":\"mypost_btn__wrapper__1ULP3\",\"btn\":\"mypost_btn__3f4Hd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__img\":\"profile_profile__img__lazpc\",\"profile__wrapper\":\"profile_profile__wrapper__3ezhD\",\"profile__info\":\"profile_profile__info__3Fdo_\",\"about__user\":\"profile_about__user__1bDNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__wrapper\":\"header_header__wrapper__1b_L6\",\"header\":\"header_header__AvPqX\",\"logo\":\"header_logo__37ctr\",\"logo__text\":\"header_logo__text__2R-lE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"posts_wrapper__3sel_\",\"avatar\":\"posts_avatar__1_nfb\",\"text\":\"posts_text__33a1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head__img\":\"content_head__img__3esr6\"};","\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Nick 1' },\r\n    { id: 2, name: 'Nick 2' },\r\n    { id: 3, name: 'Nick 3' },\r\n    { id: 4, name: 'Nick 4' },\r\n    { id: 5, name: 'Nick 5' },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: 'Hi, world' }\r\n  ],\r\n  newMessageText: ''\r\n}\r\n\r\nwindow.initialState = initialState;\r\n\r\nconst dialogsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE: {\r\n      let newSendMessage = {\r\n        id: 1,\r\n        message: state.newMessageText\r\n      };\r\n      const newState = { ...state }\r\n      newState.messages = [...state.messages]\r\n      newState.messages.push(newSendMessage);\r\n      return newState;\r\n    }\r\n    case UPDATE_NEW_MESSAGE_TEXT: {\r\n      const newState = { ...state }\r\n      newState.newMessageText = [...state.newMessageText]\r\n      newState.newMessageText = action.newText;\r\n      return newState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageActionCreater = () => ({ type: SEND_MESSAGE })\r\nexport const updateNewMessageTextActionCreater = (text) =>\r\n  ({ type: UPDATE_NEW_MESSAGE_TEXT, newText: text })\r\n\r\nexport default dialogsReduser;","import classes from './posts.module.css';\r\nimport React from 'react';\r\n\r\n\r\nfunction Posts(props) {\r\n    return (\r\n        <div>\r\n            <div className={classes.wrapper}>\r\n                <div className={classes.avatar}>\r\n                    <img src='https://i.pinimg.com/originals/f5/27/41/f52741fb62bf1d821948a49204406bdc.jpg' />\r\n                </div>\r\n                <div className={classes.text}>\r\n                    {props.post}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;","import Posts from \"../components/Content/Posts/posts\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst RESET_NEW_POST_TEXT = 'RESET-NEW-POST-TEXT'\r\n\r\nlet initialState = {\r\n  posts: [],\r\n  newPostText: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 1,\r\n        message: state.newPostText\r\n      };\r\n      let newState = { ...state }\r\n      newState.posts = [...state.posts]\r\n      newState.posts.push(newPost);\r\n      console.log(newState, ' scss');\r\n      return newState;\r\n    }\r\n    case UPDATE_NEW_POST_TEXT: {\r\n      const newState = { ...state }\r\n      newState.newPostText = [...state.newPostText]\r\n      newState.newPostText = action.newText;\r\n      return newState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPostActionCreater = () => ({ type: ADD_POST })\r\nexport const updateNewPostTextActionCreater = (text) =>\r\n  ({ type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer;","import { combineReducers, createStore } from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reduser\";\r\nimport profileReducer from \"./profile-reduser\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\nwindow.store = store;\r\n\r\nexport default store;","import classes from './header.module.css';\r\nimport React from 'react';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className={classes.header__wrapper}>\r\n            <header className={classes.header}>\r\n            </header>\r\n            <div className={classes.logo}>\r\n                <p>Social ·</p>\r\n                <p className={classes.logo__text}>· NET</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { NavLink } from 'react-router-dom';\r\nimport classes from './nav.module.css';\r\nimport React from 'react';\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.link}>\r\n                <NavLink className={ navData => navData.isActive ? classes.active : classes.item } to=\"/content\">Profile</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <NavLink className={ navData => navData.isActive ? classes.active : classes.item } to=\"/messages\">Messages</NavLink>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <a className={classes.item} href=\"#\">News</a>\r\n            </div>\r\n            <div className={classes.link}>\r\n                <a className={classes.item} href=\"#\">Music</a>\r\n            </div>\r\n            <div className={classes.line}></div>\r\n            <div className={classes.link}>\r\n                <a className={classes.settings} href=\"#\">Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import classes from './mypost.module.css';\r\nimport React from 'react';\r\nimport Posts from '../Posts/posts';\r\n\r\nfunction MyPosts(props) {\r\n    let newPostElement = React.createRef();\r\n    let onAddPost = () => {\r\n        if (props.newPostText == false) {\r\n            return false\r\n        } else {\r\n            props.addPost();\r\n\r\n        }\r\n    }\r\n    let clickButtonEnten = () => {\r\n        newPostElement.current.addEventListener('keydown', function (keyPress) {\r\n            if (keyPress.keyCode === 13) {\r\n                keyPress.preventDefault();\r\n                onAddPost()\r\n            }\r\n        }, { once: true })\r\n    }\r\n\r\n    // let removePostText = () => {\r\n    //     props.addPostActionCreater('');\r\n    //     newPostElement.current.value= '';\r\n    // }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        clickButtonEnten()\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    let postsElement = props.posts.map(p => <Posts post={p.message} />);\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.textarea__wrapper}>\r\n                <textarea className={classes.textarea} onChange={ onPostChange }\r\n                    ref={ newPostElement } value={ props.newPostText } />\r\n            </div>\r\n            <div className={classes.btn__wrapper}>\r\n                <button className={classes.btn} onClick={ onAddPost } type=\"submit\">Post</button>\r\n                {/* <button className={classes.btn} onClick={ removePostText } type=\"submit\">Remove</button> */}\r\n            </div>\r\n            <h2>Posts:</h2>\r\n            <div className={classes.Posts}>\r\n                { postsElement }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import classes from './profile.module.css';\r\nimport React from 'react';\r\n\r\nfunction Profile(props) {\r\n    return (\r\n        <div className={classes.profile__wrapper}>\r\n            <div>\r\n                <img className={classes.profile__img}\r\n                    src='https://besco.ru/upload/iblock/4dd/66b6f8f3c67a51dbae67b1d6684d10e9.jpg' />\r\n            </div>\r\n            <div className={classes.profile__info}>\r\n                <p className={classes.username}>Pablo Escobar</p>\r\n                <p className={classes.about__user}>Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae animi nulla\r\n                    debitis facilis repellat. Ullam in earum voluptatem eligendi blanditiis!</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreater, resetNewPostTextActionCreater, updateNewPostTextActionCreater } from '../../../Redux/profile-reduser';\r\nimport MyPosts from './mypost';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreater());\r\n            dispatch({ type: 'UPDATE-NEW-POST-TEXT', newText: '' })\r\n        },\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreater(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import classes from './content.module.css';\r\nimport MyPosts from './MyPost/mypost';\r\nimport Posts from './Posts/posts';\r\nimport Profile from './Profile/profile';\r\nimport React from 'react';\r\nimport MyPostsContainer from './MyPost/myPostContainer';\r\n\r\nconst Content = (props) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div>\r\n                <img className={classes.head__img} src=\"https://catherineasquithgallery.com/uploads/posts/2021-02/1613162821_148-p-zheltii-fon-minimalizm-224.jpg\" />\r\n            </div>\r\n            <div className={classes.profile__wrapper}>\r\n                <Profile />\r\n                <MyPostsContainer  />       \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content;","\r\nimport classes from './../Messages.module.css';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/messages/' + props.id;\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogItem;","\r\nimport classes from './../Messages.module.css';\r\nimport React from 'react';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import classes from './Messages.module.css';\r\nimport React from 'react';\r\nimport DialogItem from './DilogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n    let sendMessage = React.createRef();\r\n    let send = () => {\r\n        if (props.newMessageText == false) {\r\n            return false;\r\n        } else {\r\n            props.sendMessage()\r\n            \r\n        }\r\n    }\r\n    \r\n    let newMessageText = () => {\r\n        let text = sendMessage.current.value;\r\n        sendMessage.current.addEventListener('keydown', function (keyPress) {\r\n            if (keyPress.keyCode === 13) {\r\n                keyPress.preventDefault();\r\n                send()\r\n            }\r\n        }, {once: true} )\r\n        props.updateNewMessageText(text)\r\n    }\r\n\r\n    let dialogsElement = props.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\r\n    let messagesElement = props.messages.map(m => <Message message={m.message} />);\r\n\r\n    return (\r\n\r\n        <div className={classes.wrapper__messages}>\r\n\r\n            <h2 className={classes.title}>Dialogs</h2>\r\n            <div className={classes.dialogs}>\r\n                {dialogsElement}\r\n            </div>\r\n            <span className={classes.stick}></span>\r\n            <div className={classes.flexbox}>\r\n                <div className={classes.wrapper__messanger}>\r\n                    <div className={classes.messanger}>\r\n                        {messagesElement}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.textMessage}>\r\n                <textarea ref={ sendMessage } onChange={ newMessageText } value={ props.newMessageText } autoFocus />\r\n            </div>\r\n            <div className={classes.btn}>\r\n                <div className={classes.btnSend}>\r\n                    <button onClick={send}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Messages;","import { connect } from \"react-redux\";\r\nimport { updateNewMessageTextActionCreater, sendMessageActionCreater } from \"../../Redux/dialogs-reduser\";\r\nimport Messages from \"./Messages\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageActionCreater());\r\n            dispatch({ type: 'UPDATE-NEW-MESSAGE-TEXT', newText: '' });\r\n        },\r\n        updateNewMessageText: (text) => {\r\n            dispatch(updateNewMessageTextActionCreater(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages)\r\n\r\nexport default MessagesContainer","import './App.css';\r\nimport React from 'react';\r\nimport Header from './components/Header/header';\r\nimport Nav from './components/Nav/nav';\r\nimport Content from './components/Content/content';\r\nimport MessagesContainer from './components/Masseges/MessagesContainer';\r\nimport { Route, Routes } from 'react-router-dom';\r\n\r\nfunction App(props) {\r\n  return (\r\n      <div className=\"app-wrapper\">\r\n        <Header />\r\n        <Nav />\r\n        <div className='app-wrapper-content'>\r\n          <Routes>\r\n            <Route path='/content' element={ <Content />} />\r\n            <Route path='/messages/*' element={ <MessagesContainer /> } />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import './index.css';\r\nimport store from './Redux/redux-store';\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// store.subscribe(() => {\r\n//   let state = store.getState();\r\n//   rerenderEntireTree(state);\r\n// });\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}